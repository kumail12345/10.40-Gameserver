#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GCNL_OutOfStWStorm

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FortniteGame_classes.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass GCNL_OutOfStWStorm.GCNL_OutOfStWStorm_C
// 0x0158 (0x0468 - 0x0310)
class AGCNL_OutOfStWStorm_C final : public AFortGameplayCueNotify_Looping
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0310(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UParticleSystemComponent*               Effect_StormAura;                                  // 0x0318(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         Timeline_0_Volume_A14D7A33438A79770DA5E7B48F73D0FC; // 0x0320(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Timeline_0__Direction_A14D7A33438A79770DA5E7B48F73D0FC; // 0x0324(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_325[0x3];                                      // 0x0325(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Timeline_0;                                        // 0x0328(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LightningTimeline_LERP_585F62E944EE27BDF842868886F573A1; // 0x0330(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            LightningTimeline__Direction_585F62E944EE27BDF842868886F573A1; // 0x0334(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_335[0x3];                                      // 0x0335(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     LightningTimeline;                                 // 0x0338(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerPawn*                        StormPawn;                                         // 0x0340(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               EmitterTemplate_FallingRain;                       // 0x0348(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               EmitterTemplate_WindDebris;                        // 0x0350(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LightningSpawnLocation;                            // 0x0358(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ChanceOfLightningMesh;                             // 0x0364(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   RandomLightningLight;                              // 0x0368(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LightningIntensityMin;                             // 0x0370(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LightningIntensityMax;                             // 0x0374(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LightningTimelinePlaySpeedMin;                     // 0x0378(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LightningTimelinePlaySpeedMax;                     // 0x037C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTimelineComponent*                     LightningFlashTL;                                  // 0x0380(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LightningIntensity;                                // 0x0388(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_38C[0x4];                                      // 0x038C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AEmitterCameraLensEffectBase*           RainCameraLensParticles;                           // 0x0390(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LightningFlashRepeatDelayMin;                      // 0x0398(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LightningFlashRepeatDelayMax;                      // 0x039C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             SafeZonePassThroughSound;                          // 0x03A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        StormAudioLoop_Inst;                               // 0x03A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTimelineComponent*                     Storm_Audio_Fader;                                 // 0x03B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         StormAudioVolume;                                  // 0x03B8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bRandomLightning;                                  // 0x03BC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3BD[0x3];                                      // 0x03BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             ShieldBoundaryLoopSound;                           // 0x03C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        ShieldBoundaryAudio;                               // 0x03C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        HoldingAudio;                                      // 0x03D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        HoldingTickAudio;                                  // 0x03D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        NewVar_0;                                          // 0x03E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           On_Storm_Audio_Timer_Handle;                       // 0x03E8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Play_Damage_Sound;                                 // 0x03F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             SafeZone_Storm_Loop;                               // 0x03F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Storm_PostProcessVolume_Tag_Const;                 // 0x0400(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APostProcessVolume*                     PostProcessVolume;                                 // 0x0408(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           ThreatFogPostProcessColor_Morning;                 // 0x0410(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           ThreatFogPostProcessColor_Day;                     // 0x0420(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           ThreatFogPostProcessColor_Evening;                 // 0x0430(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           ThreatFogPostProcessColor_Night;                   // 0x0440(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Current_Post_Process_Weight;                       // 0x0450(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PostProcessTargetWeight;                           // 0x0454(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Post_Process_Fade_in_speed_Const;                  // 0x0458(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PostProcessWeightModulation_Const;                 // 0x045C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsVisibleToLocalClient;                           // 0x0460(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bRemovalRequested;                                 // 0x0461(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_462[0x2];                                      // 0x0462(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Gameplay_Effect_Count;                             // 0x0464(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_GCNL_OutOfStWStorm(int32 EntryPoint);
	void Update_Visibility();
	void ReceiveDestroyed();
	void ReceiveBeginPlay();
	void ReceiveTick(float DeltaSeconds);
	void DoLightningStrike();
	void Pass_Through_Sound();
	void Bind_On_Storm_Audio();
	void ZapFX(int32 ZapCount);
	void Start_Storm_Audio_Fader();
	void Remove_Storm_Audio();
	void Add_Storm_Audio();
	void On_Storm_Audio();
	void RandomLightningFlashesRepeat();
	void HideCosmetics();
	void Play_Lightning_Flash_Audio(const struct FVector& Location);
	void StartRandomLighningStrikes();
	void ShowCosmetics();
	void K2_OnReset();
	void Timeline_0__UpdateFunc();
	void Timeline_0__FinishedFunc();
	void LightningTimeline__UpdateFunc();
	void LightningTimeline__FinishedFunc();
	bool OnActive(class AActor* MyTarget, const struct FGameplayCueParameters& Parameters);
	bool OnExecute(class AActor* MyTarget, const struct FGameplayCueParameters& Parameters);
	bool OnRemove(class AActor* MyTarget, const struct FGameplayCueParameters& Parameters);
	void GetLocationInCircleXY(struct FVector* LocationLocalSpace);
	void SetCameraEffects();
	void Play_Audio_Based_on_Storm_Distance();
	void UpdatePostProcessEffects(float DeltaTime);
	void SetPostProcessTargetAndMaybeStartTicking(float PostProcessTargetWeight_0);
	bool ShouldBeVisibleToLocalClient();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GCNL_OutOfStWStorm_C">();
	}
	static class AGCNL_OutOfStWStorm_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AGCNL_OutOfStWStorm_C>();
	}
};
static_assert(alignof(AGCNL_OutOfStWStorm_C) == 0x000008, "Wrong alignment on AGCNL_OutOfStWStorm_C");
static_assert(sizeof(AGCNL_OutOfStWStorm_C) == 0x000468, "Wrong size on AGCNL_OutOfStWStorm_C");
static_assert(offsetof(AGCNL_OutOfStWStorm_C, UberGraphFrame) == 0x000310, "Member 'AGCNL_OutOfStWStorm_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AGCNL_OutOfStWStorm_C, Effect_StormAura) == 0x000318, "Member 'AGCNL_OutOfStWStorm_C::Effect_StormAura' has a wrong offset!");
static_assert(offsetof(AGCNL_OutOfStWStorm_C, Timeline_0_Volume_A14D7A33438A79770DA5E7B48F73D0FC) == 0x000320, "Member 'AGCNL_OutOfStWStorm_C::Timeline_0_Volume_A14D7A33438A79770DA5E7B48F73D0FC' has a wrong offset!");
static_assert(offsetof(AGCNL_OutOfStWStorm_C, Timeline_0__Direction_A14D7A33438A79770DA5E7B48F73D0FC) == 0x000324, "Member 'AGCNL_OutOfStWStorm_C::Timeline_0__Direction_A14D7A33438A79770DA5E7B48F73D0FC' has a wrong offset!");
static_assert(offsetof(AGCNL_OutOfStWStorm_C, Timeline_0) == 0x000328, "Member 'AGCNL_OutOfStWStorm_C::Timeline_0' has a wrong offset!");
static_assert(offsetof(AGCNL_OutOfStWStorm_C, LightningTimeline_LERP_585F62E944EE27BDF842868886F573A1) == 0x000330, "Member 'AGCNL_OutOfStWStorm_C::LightningTimeline_LERP_585F62E944EE27BDF842868886F573A1' has a wrong offset!");
static_assert(offsetof(AGCNL_OutOfStWStorm_C, LightningTimeline__Direction_585F62E944EE27BDF842868886F573A1) == 0x000334, "Member 'AGCNL_OutOfStWStorm_C::LightningTimeline__Direction_585F62E944EE27BDF842868886F573A1' has a wrong offset!");
static_assert(offsetof(AGCNL_OutOfStWStorm_C, LightningTimeline) == 0x000338, "Member 'AGCNL_OutOfStWStorm_C::LightningTimeline' has a wrong offset!");
static_assert(offsetof(AGCNL_OutOfStWStorm_C, StormPawn) == 0x000340, "Member 'AGCNL_OutOfStWStorm_C::StormPawn' has a wrong offset!");
static_assert(offsetof(AGCNL_OutOfStWStorm_C, EmitterTemplate_FallingRain) == 0x000348, "Member 'AGCNL_OutOfStWStorm_C::EmitterTemplate_FallingRain' has a wrong offset!");
static_assert(offsetof(AGCNL_OutOfStWStorm_C, EmitterTemplate_WindDebris) == 0x000350, "Member 'AGCNL_OutOfStWStorm_C::EmitterTemplate_WindDebris' has a wrong offset!");
static_assert(offsetof(AGCNL_OutOfStWStorm_C, LightningSpawnLocation) == 0x000358, "Member 'AGCNL_OutOfStWStorm_C::LightningSpawnLocation' has a wrong offset!");
static_assert(offsetof(AGCNL_OutOfStWStorm_C, ChanceOfLightningMesh) == 0x000364, "Member 'AGCNL_OutOfStWStorm_C::ChanceOfLightningMesh' has a wrong offset!");
static_assert(offsetof(AGCNL_OutOfStWStorm_C, RandomLightningLight) == 0x000368, "Member 'AGCNL_OutOfStWStorm_C::RandomLightningLight' has a wrong offset!");
static_assert(offsetof(AGCNL_OutOfStWStorm_C, LightningIntensityMin) == 0x000370, "Member 'AGCNL_OutOfStWStorm_C::LightningIntensityMin' has a wrong offset!");
static_assert(offsetof(AGCNL_OutOfStWStorm_C, LightningIntensityMax) == 0x000374, "Member 'AGCNL_OutOfStWStorm_C::LightningIntensityMax' has a wrong offset!");
static_assert(offsetof(AGCNL_OutOfStWStorm_C, LightningTimelinePlaySpeedMin) == 0x000378, "Member 'AGCNL_OutOfStWStorm_C::LightningTimelinePlaySpeedMin' has a wrong offset!");
static_assert(offsetof(AGCNL_OutOfStWStorm_C, LightningTimelinePlaySpeedMax) == 0x00037C, "Member 'AGCNL_OutOfStWStorm_C::LightningTimelinePlaySpeedMax' has a wrong offset!");
static_assert(offsetof(AGCNL_OutOfStWStorm_C, LightningFlashTL) == 0x000380, "Member 'AGCNL_OutOfStWStorm_C::LightningFlashTL' has a wrong offset!");
static_assert(offsetof(AGCNL_OutOfStWStorm_C, LightningIntensity) == 0x000388, "Member 'AGCNL_OutOfStWStorm_C::LightningIntensity' has a wrong offset!");
static_assert(offsetof(AGCNL_OutOfStWStorm_C, RainCameraLensParticles) == 0x000390, "Member 'AGCNL_OutOfStWStorm_C::RainCameraLensParticles' has a wrong offset!");
static_assert(offsetof(AGCNL_OutOfStWStorm_C, LightningFlashRepeatDelayMin) == 0x000398, "Member 'AGCNL_OutOfStWStorm_C::LightningFlashRepeatDelayMin' has a wrong offset!");
static_assert(offsetof(AGCNL_OutOfStWStorm_C, LightningFlashRepeatDelayMax) == 0x00039C, "Member 'AGCNL_OutOfStWStorm_C::LightningFlashRepeatDelayMax' has a wrong offset!");
static_assert(offsetof(AGCNL_OutOfStWStorm_C, SafeZonePassThroughSound) == 0x0003A0, "Member 'AGCNL_OutOfStWStorm_C::SafeZonePassThroughSound' has a wrong offset!");
static_assert(offsetof(AGCNL_OutOfStWStorm_C, StormAudioLoop_Inst) == 0x0003A8, "Member 'AGCNL_OutOfStWStorm_C::StormAudioLoop_Inst' has a wrong offset!");
static_assert(offsetof(AGCNL_OutOfStWStorm_C, Storm_Audio_Fader) == 0x0003B0, "Member 'AGCNL_OutOfStWStorm_C::Storm_Audio_Fader' has a wrong offset!");
static_assert(offsetof(AGCNL_OutOfStWStorm_C, StormAudioVolume) == 0x0003B8, "Member 'AGCNL_OutOfStWStorm_C::StormAudioVolume' has a wrong offset!");
static_assert(offsetof(AGCNL_OutOfStWStorm_C, bRandomLightning) == 0x0003BC, "Member 'AGCNL_OutOfStWStorm_C::bRandomLightning' has a wrong offset!");
static_assert(offsetof(AGCNL_OutOfStWStorm_C, ShieldBoundaryLoopSound) == 0x0003C0, "Member 'AGCNL_OutOfStWStorm_C::ShieldBoundaryLoopSound' has a wrong offset!");
static_assert(offsetof(AGCNL_OutOfStWStorm_C, ShieldBoundaryAudio) == 0x0003C8, "Member 'AGCNL_OutOfStWStorm_C::ShieldBoundaryAudio' has a wrong offset!");
static_assert(offsetof(AGCNL_OutOfStWStorm_C, HoldingAudio) == 0x0003D0, "Member 'AGCNL_OutOfStWStorm_C::HoldingAudio' has a wrong offset!");
static_assert(offsetof(AGCNL_OutOfStWStorm_C, HoldingTickAudio) == 0x0003D8, "Member 'AGCNL_OutOfStWStorm_C::HoldingTickAudio' has a wrong offset!");
static_assert(offsetof(AGCNL_OutOfStWStorm_C, NewVar_0) == 0x0003E0, "Member 'AGCNL_OutOfStWStorm_C::NewVar_0' has a wrong offset!");
static_assert(offsetof(AGCNL_OutOfStWStorm_C, On_Storm_Audio_Timer_Handle) == 0x0003E8, "Member 'AGCNL_OutOfStWStorm_C::On_Storm_Audio_Timer_Handle' has a wrong offset!");
static_assert(offsetof(AGCNL_OutOfStWStorm_C, Play_Damage_Sound) == 0x0003F0, "Member 'AGCNL_OutOfStWStorm_C::Play_Damage_Sound' has a wrong offset!");
static_assert(offsetof(AGCNL_OutOfStWStorm_C, SafeZone_Storm_Loop) == 0x0003F8, "Member 'AGCNL_OutOfStWStorm_C::SafeZone_Storm_Loop' has a wrong offset!");
static_assert(offsetof(AGCNL_OutOfStWStorm_C, Storm_PostProcessVolume_Tag_Const) == 0x000400, "Member 'AGCNL_OutOfStWStorm_C::Storm_PostProcessVolume_Tag_Const' has a wrong offset!");
static_assert(offsetof(AGCNL_OutOfStWStorm_C, PostProcessVolume) == 0x000408, "Member 'AGCNL_OutOfStWStorm_C::PostProcessVolume' has a wrong offset!");
static_assert(offsetof(AGCNL_OutOfStWStorm_C, ThreatFogPostProcessColor_Morning) == 0x000410, "Member 'AGCNL_OutOfStWStorm_C::ThreatFogPostProcessColor_Morning' has a wrong offset!");
static_assert(offsetof(AGCNL_OutOfStWStorm_C, ThreatFogPostProcessColor_Day) == 0x000420, "Member 'AGCNL_OutOfStWStorm_C::ThreatFogPostProcessColor_Day' has a wrong offset!");
static_assert(offsetof(AGCNL_OutOfStWStorm_C, ThreatFogPostProcessColor_Evening) == 0x000430, "Member 'AGCNL_OutOfStWStorm_C::ThreatFogPostProcessColor_Evening' has a wrong offset!");
static_assert(offsetof(AGCNL_OutOfStWStorm_C, ThreatFogPostProcessColor_Night) == 0x000440, "Member 'AGCNL_OutOfStWStorm_C::ThreatFogPostProcessColor_Night' has a wrong offset!");
static_assert(offsetof(AGCNL_OutOfStWStorm_C, Current_Post_Process_Weight) == 0x000450, "Member 'AGCNL_OutOfStWStorm_C::Current_Post_Process_Weight' has a wrong offset!");
static_assert(offsetof(AGCNL_OutOfStWStorm_C, PostProcessTargetWeight) == 0x000454, "Member 'AGCNL_OutOfStWStorm_C::PostProcessTargetWeight' has a wrong offset!");
static_assert(offsetof(AGCNL_OutOfStWStorm_C, Post_Process_Fade_in_speed_Const) == 0x000458, "Member 'AGCNL_OutOfStWStorm_C::Post_Process_Fade_in_speed_Const' has a wrong offset!");
static_assert(offsetof(AGCNL_OutOfStWStorm_C, PostProcessWeightModulation_Const) == 0x00045C, "Member 'AGCNL_OutOfStWStorm_C::PostProcessWeightModulation_Const' has a wrong offset!");
static_assert(offsetof(AGCNL_OutOfStWStorm_C, bIsVisibleToLocalClient) == 0x000460, "Member 'AGCNL_OutOfStWStorm_C::bIsVisibleToLocalClient' has a wrong offset!");
static_assert(offsetof(AGCNL_OutOfStWStorm_C, bRemovalRequested) == 0x000461, "Member 'AGCNL_OutOfStWStorm_C::bRemovalRequested' has a wrong offset!");
static_assert(offsetof(AGCNL_OutOfStWStorm_C, Gameplay_Effect_Count) == 0x000464, "Member 'AGCNL_OutOfStWStorm_C::Gameplay_Effect_Count' has a wrong offset!");

}

