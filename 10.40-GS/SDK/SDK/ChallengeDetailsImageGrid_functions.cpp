#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ChallengeDetailsImageGrid

#include "Basic.hpp"

#include "ChallengeDetailsImageGrid_classes.hpp"
#include "ChallengeDetailsImageGrid_parameters.hpp"


namespace SDK
{

// Function ChallengeDetailsImageGrid.ChallengeDetailsImageGrid_C.OnLockedToOwnedTransitions
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   Count                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   TimeOffset                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   AdditionalTime                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UChallengeDetailsImageGrid_C::OnLockedToOwnedTransitions(int32 Count, float TimeOffset, float AdditionalTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ChallengeDetailsImageGrid_C", "OnLockedToOwnedTransitions");

	Params::ChallengeDetailsImageGrid_C_OnLockedToOwnedTransitions Parms{};

	Parms.Count = Count;
	Parms.TimeOffset = TimeOffset;
	Parms.AdditionalTime = AdditionalTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ChallengeDetailsImageGrid.ChallengeDetailsImageGrid_C.Rollout Tick
// (BlueprintCallable, BlueprintEvent)

void UChallengeDetailsImageGrid_C::Rollout_Tick()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ChallengeDetailsImageGrid_C", "Rollout Tick");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ChallengeDetailsImageGrid.ChallengeDetailsImageGrid_C.Start Rollout Tick
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Time                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UChallengeDetailsImageGrid_C::Start_Rollout_Tick(float Time)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ChallengeDetailsImageGrid_C", "Start Rollout Tick");

	Params::ChallengeDetailsImageGrid_C_Start_Rollout_Tick Parms{};

	Parms.Time = Time;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ChallengeDetailsImageGrid.ChallengeDetailsImageGrid_C.Stop Rollout Tick
// (BlueprintCallable, BlueprintEvent)

void UChallengeDetailsImageGrid_C::Stop_Rollout_Tick()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ChallengeDetailsImageGrid_C", "Stop Rollout Tick");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ChallengeDetailsImageGrid.ChallengeDetailsImageGrid_C.OnFocusLost
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// struct FFocusEvent                      InFocusEvent                                           (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)

void UChallengeDetailsImageGrid_C::OnFocusLost(const struct FFocusEvent& InFocusEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ChallengeDetailsImageGrid_C", "OnFocusLost");

	Params::ChallengeDetailsImageGrid_C_OnFocusLost Parms{};

	Parms.InFocusEvent = std::move(InFocusEvent);

	UObject::ProcessEvent(Func, &Parms);
}


// Function ChallengeDetailsImageGrid.ChallengeDetailsImageGrid_C.OnRemovedFromFocusPath
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// struct FFocusEvent                      InFocusEvent                                           (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)

void UChallengeDetailsImageGrid_C::OnRemovedFromFocusPath(const struct FFocusEvent& InFocusEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ChallengeDetailsImageGrid_C", "OnRemovedFromFocusPath");

	Params::ChallengeDetailsImageGrid_C_OnRemovedFromFocusPath Parms{};

	Parms.InFocusEvent = std::move(InFocusEvent);

	UObject::ProcessEvent(Func, &Parms);
}


// Function ChallengeDetailsImageGrid.ChallengeDetailsImageGrid_C.OnOwnedToCompleteTransitions
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   Count                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   TimeOffset                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   AdditionalTime                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UChallengeDetailsImageGrid_C::OnOwnedToCompleteTransitions(int32 Count, float TimeOffset, float AdditionalTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ChallengeDetailsImageGrid_C", "OnOwnedToCompleteTransitions");

	Params::ChallengeDetailsImageGrid_C_OnOwnedToCompleteTransitions Parms{};

	Parms.Count = Count;
	Parms.TimeOffset = TimeOffset;
	Parms.AdditionalTime = AdditionalTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ChallengeDetailsImageGrid.ChallengeDetailsImageGrid_C.Rollout Sound Failsafe
// (BlueprintCallable, BlueprintEvent)

void UChallengeDetailsImageGrid_C::Rollout_Sound_Failsafe()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ChallengeDetailsImageGrid_C", "Rollout Sound Failsafe");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ChallengeDetailsImageGrid.ChallengeDetailsImageGrid_C.ExecuteUbergraph_ChallengeDetailsImageGrid
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UChallengeDetailsImageGrid_C::ExecuteUbergraph_ChallengeDetailsImageGrid(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ChallengeDetailsImageGrid_C", "ExecuteUbergraph_ChallengeDetailsImageGrid");

	Params::ChallengeDetailsImageGrid_C_ExecuteUbergraph_ChallengeDetailsImageGrid Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}

}

