#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: OptionsMenuFireModeButton

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "FortniteUI_classes.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass OptionsMenuFireModeButton.OptionsMenuFireModeButton_C
// 0x00F8 (0x0358 - 0x0260)
class UOptionsMenuFireModeButton_C final : public UFortOptionsMenuSetting
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UIconTextButton_C*                      ButtonTouchTooltip;                                // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UIconTextButton_C*                      ChangeFireModeButton;                              // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       ChangeFireModeTitle;                               // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         HorizontalBox_Right;                               // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UMenuAnchor*                            MenuAnchorSettingDescription;                      // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SizeBoxLabel;                                      // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USpacer*                                Spacer_Bottom;                                     // 0x0298(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USpacer*                                Spacer_Right;                                      // 0x02A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	int32                                         FontSizeMobile;                                    // 0x02A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2AC[0x4];                                      // 0x02AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Hover_Text;                                        // 0x02B0(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FVector2D                              ToolTipSizeMobile;                                 // 0x02C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         HeightDefault;                                     // 0x02D0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         HeightMobile;                                      // 0x02D4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           TooltipTimer;                                      // 0x02D8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class FText                                   AutoFireText;                                      // 0x02E0(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   TapToShootText;                                    // 0x02F8(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   DedicatedButtonText;                               // 0x0310(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   CustomText;                                        // 0x0328(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   ThreeDTouchText;                                   // 0x0340(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void ExecuteUbergraph_OptionsMenuFireModeButton(int32 EntryPoint);
	void BndEvt__ButtonTouchTooltip_K2Node_ComponentBoundEvent_11_CommonButtonClicked__DelegateSignature(class UCommonButton* Button);
	void Destruct();
	void BP_OnEntryReleased();
	void CenterOnWidget();
	void BP_OnItemExpansionChanged(bool bIsExpanded);
	void OnListItemObjectSet(class UObject* ListItemObject);
	void OnMouseEnter(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	void OnMouseLeave(const struct FPointerEvent& MouseEvent);
	void Construct();
	void BP_OnItemSelectionChanged(bool bIsSelected);
	void UpdateSize();
	void SetFontSize(class UCommonTextBlock* Text, int32 DefaultSize, int32 MobileSize);
	void HandleFireModeButtonClicked(class UCommonButton* Common_Button);
	void ShowTooltip();
	void SetToolTipSize(const struct FVector2D& DefaultSize, const struct FVector2D& MobileSize);
	void Hide_Tooltip();
	class UWidget* On_MenuAnchorSettingDescription_GetMenuContent_0();
	void SetFireModeButtonText();
	void HandleWidgetDeactivated(class UCommonActivatablePanel* ActivatableWidget);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"OptionsMenuFireModeButton_C">();
	}
	static class UOptionsMenuFireModeButton_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOptionsMenuFireModeButton_C>();
	}
};
static_assert(alignof(UOptionsMenuFireModeButton_C) == 0x000008, "Wrong alignment on UOptionsMenuFireModeButton_C");
static_assert(sizeof(UOptionsMenuFireModeButton_C) == 0x000358, "Wrong size on UOptionsMenuFireModeButton_C");
static_assert(offsetof(UOptionsMenuFireModeButton_C, UberGraphFrame) == 0x000260, "Member 'UOptionsMenuFireModeButton_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UOptionsMenuFireModeButton_C, ButtonTouchTooltip) == 0x000268, "Member 'UOptionsMenuFireModeButton_C::ButtonTouchTooltip' has a wrong offset!");
static_assert(offsetof(UOptionsMenuFireModeButton_C, ChangeFireModeButton) == 0x000270, "Member 'UOptionsMenuFireModeButton_C::ChangeFireModeButton' has a wrong offset!");
static_assert(offsetof(UOptionsMenuFireModeButton_C, ChangeFireModeTitle) == 0x000278, "Member 'UOptionsMenuFireModeButton_C::ChangeFireModeTitle' has a wrong offset!");
static_assert(offsetof(UOptionsMenuFireModeButton_C, HorizontalBox_Right) == 0x000280, "Member 'UOptionsMenuFireModeButton_C::HorizontalBox_Right' has a wrong offset!");
static_assert(offsetof(UOptionsMenuFireModeButton_C, MenuAnchorSettingDescription) == 0x000288, "Member 'UOptionsMenuFireModeButton_C::MenuAnchorSettingDescription' has a wrong offset!");
static_assert(offsetof(UOptionsMenuFireModeButton_C, SizeBoxLabel) == 0x000290, "Member 'UOptionsMenuFireModeButton_C::SizeBoxLabel' has a wrong offset!");
static_assert(offsetof(UOptionsMenuFireModeButton_C, Spacer_Bottom) == 0x000298, "Member 'UOptionsMenuFireModeButton_C::Spacer_Bottom' has a wrong offset!");
static_assert(offsetof(UOptionsMenuFireModeButton_C, Spacer_Right) == 0x0002A0, "Member 'UOptionsMenuFireModeButton_C::Spacer_Right' has a wrong offset!");
static_assert(offsetof(UOptionsMenuFireModeButton_C, FontSizeMobile) == 0x0002A8, "Member 'UOptionsMenuFireModeButton_C::FontSizeMobile' has a wrong offset!");
static_assert(offsetof(UOptionsMenuFireModeButton_C, Hover_Text) == 0x0002B0, "Member 'UOptionsMenuFireModeButton_C::Hover_Text' has a wrong offset!");
static_assert(offsetof(UOptionsMenuFireModeButton_C, ToolTipSizeMobile) == 0x0002C8, "Member 'UOptionsMenuFireModeButton_C::ToolTipSizeMobile' has a wrong offset!");
static_assert(offsetof(UOptionsMenuFireModeButton_C, HeightDefault) == 0x0002D0, "Member 'UOptionsMenuFireModeButton_C::HeightDefault' has a wrong offset!");
static_assert(offsetof(UOptionsMenuFireModeButton_C, HeightMobile) == 0x0002D4, "Member 'UOptionsMenuFireModeButton_C::HeightMobile' has a wrong offset!");
static_assert(offsetof(UOptionsMenuFireModeButton_C, TooltipTimer) == 0x0002D8, "Member 'UOptionsMenuFireModeButton_C::TooltipTimer' has a wrong offset!");
static_assert(offsetof(UOptionsMenuFireModeButton_C, AutoFireText) == 0x0002E0, "Member 'UOptionsMenuFireModeButton_C::AutoFireText' has a wrong offset!");
static_assert(offsetof(UOptionsMenuFireModeButton_C, TapToShootText) == 0x0002F8, "Member 'UOptionsMenuFireModeButton_C::TapToShootText' has a wrong offset!");
static_assert(offsetof(UOptionsMenuFireModeButton_C, DedicatedButtonText) == 0x000310, "Member 'UOptionsMenuFireModeButton_C::DedicatedButtonText' has a wrong offset!");
static_assert(offsetof(UOptionsMenuFireModeButton_C, CustomText) == 0x000328, "Member 'UOptionsMenuFireModeButton_C::CustomText' has a wrong offset!");
static_assert(offsetof(UOptionsMenuFireModeButton_C, ThreeDTouchText) == 0x000340, "Member 'UOptionsMenuFireModeButton_C::ThreeDTouchText' has a wrong offset!");

}

