#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_Ranged_Flashlight

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "B_Pistol_Generic_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass B_Ranged_Flashlight.B_Ranged_Flashlight_C
// 0x0048 (0x0EF0 - 0x0EA8)
class AB_Ranged_Flashlight_C final : public AB_Pistol_Generic_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_B_Ranged_Flashlight_C;              // 0x0EA8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UAudioComponent*                        Flashlight_Audio_Loop;                             // 0x0EB0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        Switch_Audio;                                      // 0x0EB8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   LightbeamCollision;                                // 0x0EC0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Sm_CreativeMoveTool_Lightbeam;                     // 0x0EC8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpotLightComponent*                    SpotLight;                                         // 0x0ED0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Equip_Sound;                                       // 0x0ED8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     LightFunctionMaterial;                             // 0x0EE0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SpotlightBaseIntensity;                            // 0x0EE8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SpotlightLowQualityIntensityScale;                 // 0x0EEC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_B_Ranged_Flashlight(int32 EntryPoint);
	void OnWeaponAttached();
	void UserConstructionScript();
	void InitLightShadowQuality();
	void InitComponents();
	void SetMobileShadowsOff();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"B_Ranged_Flashlight_C">();
	}
	static class AB_Ranged_Flashlight_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AB_Ranged_Flashlight_C>();
	}
};
static_assert(alignof(AB_Ranged_Flashlight_C) == 0x000008, "Wrong alignment on AB_Ranged_Flashlight_C");
static_assert(sizeof(AB_Ranged_Flashlight_C) == 0x000EF0, "Wrong size on AB_Ranged_Flashlight_C");
static_assert(offsetof(AB_Ranged_Flashlight_C, UberGraphFrame_B_Ranged_Flashlight_C) == 0x000EA8, "Member 'AB_Ranged_Flashlight_C::UberGraphFrame_B_Ranged_Flashlight_C' has a wrong offset!");
static_assert(offsetof(AB_Ranged_Flashlight_C, Flashlight_Audio_Loop) == 0x000EB0, "Member 'AB_Ranged_Flashlight_C::Flashlight_Audio_Loop' has a wrong offset!");
static_assert(offsetof(AB_Ranged_Flashlight_C, Switch_Audio) == 0x000EB8, "Member 'AB_Ranged_Flashlight_C::Switch_Audio' has a wrong offset!");
static_assert(offsetof(AB_Ranged_Flashlight_C, LightbeamCollision) == 0x000EC0, "Member 'AB_Ranged_Flashlight_C::LightbeamCollision' has a wrong offset!");
static_assert(offsetof(AB_Ranged_Flashlight_C, Sm_CreativeMoveTool_Lightbeam) == 0x000EC8, "Member 'AB_Ranged_Flashlight_C::Sm_CreativeMoveTool_Lightbeam' has a wrong offset!");
static_assert(offsetof(AB_Ranged_Flashlight_C, SpotLight) == 0x000ED0, "Member 'AB_Ranged_Flashlight_C::SpotLight' has a wrong offset!");
static_assert(offsetof(AB_Ranged_Flashlight_C, Equip_Sound) == 0x000ED8, "Member 'AB_Ranged_Flashlight_C::Equip_Sound' has a wrong offset!");
static_assert(offsetof(AB_Ranged_Flashlight_C, LightFunctionMaterial) == 0x000EE0, "Member 'AB_Ranged_Flashlight_C::LightFunctionMaterial' has a wrong offset!");
static_assert(offsetof(AB_Ranged_Flashlight_C, SpotlightBaseIntensity) == 0x000EE8, "Member 'AB_Ranged_Flashlight_C::SpotlightBaseIntensity' has a wrong offset!");
static_assert(offsetof(AB_Ranged_Flashlight_C, SpotlightLowQualityIntensityScale) == 0x000EEC, "Member 'AB_Ranged_Flashlight_C::SpotlightLowQualityIntensityScale' has a wrong offset!");

}

