#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_Pistol_Flashlight

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "B_Pistol_Vigilante_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass B_Pistol_Flashlight.B_Pistol_Flashlight_C
// 0x0020 (0x0EC8 - 0x0EA8)
class AB_Pistol_Flashlight_C final : public AB_Pistol_Vigilante_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_B_Pistol_Flashlight_C;              // 0x0EA8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   Sm_CreativeMoveTool_Lightbeam;                     // 0x0EB0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpotLightComponent*                    SpotLight;                                         // 0x0EB8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Equip_Sound;                                       // 0x0EC0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_B_Pistol_Flashlight(int32 EntryPoint);
	void OnWeaponAttached();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"B_Pistol_Flashlight_C">();
	}
	static class AB_Pistol_Flashlight_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AB_Pistol_Flashlight_C>();
	}
};
static_assert(alignof(AB_Pistol_Flashlight_C) == 0x000008, "Wrong alignment on AB_Pistol_Flashlight_C");
static_assert(sizeof(AB_Pistol_Flashlight_C) == 0x000EC8, "Wrong size on AB_Pistol_Flashlight_C");
static_assert(offsetof(AB_Pistol_Flashlight_C, UberGraphFrame_B_Pistol_Flashlight_C) == 0x000EA8, "Member 'AB_Pistol_Flashlight_C::UberGraphFrame_B_Pistol_Flashlight_C' has a wrong offset!");
static_assert(offsetof(AB_Pistol_Flashlight_C, Sm_CreativeMoveTool_Lightbeam) == 0x000EB0, "Member 'AB_Pistol_Flashlight_C::Sm_CreativeMoveTool_Lightbeam' has a wrong offset!");
static_assert(offsetof(AB_Pistol_Flashlight_C, SpotLight) == 0x000EB8, "Member 'AB_Pistol_Flashlight_C::SpotLight' has a wrong offset!");
static_assert(offsetof(AB_Pistol_Flashlight_C, Equip_Sound) == 0x000EC0, "Member 'AB_Pistol_Flashlight_C::Equip_Sound' has a wrong offset!");

}

