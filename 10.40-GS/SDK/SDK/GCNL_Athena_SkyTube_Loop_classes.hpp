#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GCNL_Athena_SkyTube_Loop

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FortniteGame_classes.hpp"
#include "GameplayAbilities_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass GCNL_Athena_SkyTube_Loop.GCNL_Athena_SkyTube_Loop_C
// 0x00F0 (0x0858 - 0x0768)
class AGCNL_Athena_SkyTube_Loop_C final : public AFortGameplayCueNotify_Loop
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0768(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	float                                         OpacityFade_NewTrack_0_7C7F4FC94E989FA5C7938EB445D13090; // 0x0770(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            OpacityFade__Direction_7C7F4FC94E989FA5C7938EB445D13090; // 0x0774(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_775[0x3];                                      // 0x0775(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     OpacityFade;                                       // 0x0778(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 MyTarget;                                          // 0x0780(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        LoopingAudio;                                      // 0x0788(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             SoundPlayerEnter;                                  // 0x0790(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             SoundPlayerExit;                                   // 0x0798(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             SoundPlayerLoop;                                   // 0x07A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             SoundVehicleEnter;                                 // 0x07A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             SoundVehicleExit;                                  // 0x07B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsTargetPlayer;                                    // 0x07B8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7B9[0x7];                                      // 0x07B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             SoundVehicleLoop;                                  // 0x07C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsTargetLocal;                                     // 0x07C8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsTargetPlayerInVehicle;                           // 0x07C9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7CA[0x2];                                      // 0x07CA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         AudioCurrentSpeedParam;                            // 0x07CC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         OpacityBoost;                                      // 0x07D0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsAudioEnabled;                                    // 0x07D4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7D5[0x3];                                      // 0x07D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         VelocityMult;                                      // 0x07D8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CameraShakeMagnitude;                              // 0x07DC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCameraShake*                           CameraShake;                                       // 0x07E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ShakeMax;                                          // 0x07E8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ShakeMin;                                          // 0x07EC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerPawn*                        MyTargetPlayer;                                    // 0x07F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                SplineDirection;                                   // 0x07F8(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_804[0x4];                                      // 0x0804(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FScalableFloat                         DataPassiveModeLateralSpeed;                       // 0x0808(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         DataActiveModeLateralSpeed;                        // 0x0828(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          IsVehicleEmpty;                                    // 0x0848(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_849[0x7];                                      // 0x0849(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerController*                  AppliedShakeToController;                          // 0x0850(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_GCNL_Athena_SkyTube_Loop(int32 EntryPoint);
	void StopShake();
	void ReceiveTick(float DeltaSeconds);
	void OnLoopingStart(class AActor* MyTarget_0, const struct FGameplayCueParameters& Parameters, const TArray<class UParticleSystemComponent*>& ParticleComponents, const TArray<class UAudioComponent*>& AudioComponents);
	void OnRemoval(class AActor* MyTarget_0, const struct FGameplayCueParameters& Parameters, const TArray<class UParticleSystemComponent*>& ParticleComponents, const TArray<class UAudioComponent*>& AudioComponents, class UCameraShake* BurstCameraShakeInstance, class ADecalActor* BurstDecalInstance);
	void Start_or_Stop_Audio(bool Start);
	void Update_Audio();
	void OpacityFade__UpdateFunc();
	void OpacityFade__FinishedFunc();
	void Init(class AActor* MyTarget_0);
	void UpdateIsLocalAndIsPlayer(class AActor* Target);
	void GetIsPlayerInVehicle(bool* IsPlayerInVehicle);
	void StartCameraShake();
	void StopCameraShake(class AFortPlayerPawn* Target);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GCNL_Athena_SkyTube_Loop_C">();
	}
	static class AGCNL_Athena_SkyTube_Loop_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AGCNL_Athena_SkyTube_Loop_C>();
	}
};
static_assert(alignof(AGCNL_Athena_SkyTube_Loop_C) == 0x000008, "Wrong alignment on AGCNL_Athena_SkyTube_Loop_C");
static_assert(sizeof(AGCNL_Athena_SkyTube_Loop_C) == 0x000858, "Wrong size on AGCNL_Athena_SkyTube_Loop_C");
static_assert(offsetof(AGCNL_Athena_SkyTube_Loop_C, UberGraphFrame) == 0x000768, "Member 'AGCNL_Athena_SkyTube_Loop_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AGCNL_Athena_SkyTube_Loop_C, OpacityFade_NewTrack_0_7C7F4FC94E989FA5C7938EB445D13090) == 0x000770, "Member 'AGCNL_Athena_SkyTube_Loop_C::OpacityFade_NewTrack_0_7C7F4FC94E989FA5C7938EB445D13090' has a wrong offset!");
static_assert(offsetof(AGCNL_Athena_SkyTube_Loop_C, OpacityFade__Direction_7C7F4FC94E989FA5C7938EB445D13090) == 0x000774, "Member 'AGCNL_Athena_SkyTube_Loop_C::OpacityFade__Direction_7C7F4FC94E989FA5C7938EB445D13090' has a wrong offset!");
static_assert(offsetof(AGCNL_Athena_SkyTube_Loop_C, OpacityFade) == 0x000778, "Member 'AGCNL_Athena_SkyTube_Loop_C::OpacityFade' has a wrong offset!");
static_assert(offsetof(AGCNL_Athena_SkyTube_Loop_C, MyTarget) == 0x000780, "Member 'AGCNL_Athena_SkyTube_Loop_C::MyTarget' has a wrong offset!");
static_assert(offsetof(AGCNL_Athena_SkyTube_Loop_C, LoopingAudio) == 0x000788, "Member 'AGCNL_Athena_SkyTube_Loop_C::LoopingAudio' has a wrong offset!");
static_assert(offsetof(AGCNL_Athena_SkyTube_Loop_C, SoundPlayerEnter) == 0x000790, "Member 'AGCNL_Athena_SkyTube_Loop_C::SoundPlayerEnter' has a wrong offset!");
static_assert(offsetof(AGCNL_Athena_SkyTube_Loop_C, SoundPlayerExit) == 0x000798, "Member 'AGCNL_Athena_SkyTube_Loop_C::SoundPlayerExit' has a wrong offset!");
static_assert(offsetof(AGCNL_Athena_SkyTube_Loop_C, SoundPlayerLoop) == 0x0007A0, "Member 'AGCNL_Athena_SkyTube_Loop_C::SoundPlayerLoop' has a wrong offset!");
static_assert(offsetof(AGCNL_Athena_SkyTube_Loop_C, SoundVehicleEnter) == 0x0007A8, "Member 'AGCNL_Athena_SkyTube_Loop_C::SoundVehicleEnter' has a wrong offset!");
static_assert(offsetof(AGCNL_Athena_SkyTube_Loop_C, SoundVehicleExit) == 0x0007B0, "Member 'AGCNL_Athena_SkyTube_Loop_C::SoundVehicleExit' has a wrong offset!");
static_assert(offsetof(AGCNL_Athena_SkyTube_Loop_C, IsTargetPlayer) == 0x0007B8, "Member 'AGCNL_Athena_SkyTube_Loop_C::IsTargetPlayer' has a wrong offset!");
static_assert(offsetof(AGCNL_Athena_SkyTube_Loop_C, SoundVehicleLoop) == 0x0007C0, "Member 'AGCNL_Athena_SkyTube_Loop_C::SoundVehicleLoop' has a wrong offset!");
static_assert(offsetof(AGCNL_Athena_SkyTube_Loop_C, IsTargetLocal) == 0x0007C8, "Member 'AGCNL_Athena_SkyTube_Loop_C::IsTargetLocal' has a wrong offset!");
static_assert(offsetof(AGCNL_Athena_SkyTube_Loop_C, IsTargetPlayerInVehicle) == 0x0007C9, "Member 'AGCNL_Athena_SkyTube_Loop_C::IsTargetPlayerInVehicle' has a wrong offset!");
static_assert(offsetof(AGCNL_Athena_SkyTube_Loop_C, AudioCurrentSpeedParam) == 0x0007CC, "Member 'AGCNL_Athena_SkyTube_Loop_C::AudioCurrentSpeedParam' has a wrong offset!");
static_assert(offsetof(AGCNL_Athena_SkyTube_Loop_C, OpacityBoost) == 0x0007D0, "Member 'AGCNL_Athena_SkyTube_Loop_C::OpacityBoost' has a wrong offset!");
static_assert(offsetof(AGCNL_Athena_SkyTube_Loop_C, IsAudioEnabled) == 0x0007D4, "Member 'AGCNL_Athena_SkyTube_Loop_C::IsAudioEnabled' has a wrong offset!");
static_assert(offsetof(AGCNL_Athena_SkyTube_Loop_C, VelocityMult) == 0x0007D8, "Member 'AGCNL_Athena_SkyTube_Loop_C::VelocityMult' has a wrong offset!");
static_assert(offsetof(AGCNL_Athena_SkyTube_Loop_C, CameraShakeMagnitude) == 0x0007DC, "Member 'AGCNL_Athena_SkyTube_Loop_C::CameraShakeMagnitude' has a wrong offset!");
static_assert(offsetof(AGCNL_Athena_SkyTube_Loop_C, CameraShake) == 0x0007E0, "Member 'AGCNL_Athena_SkyTube_Loop_C::CameraShake' has a wrong offset!");
static_assert(offsetof(AGCNL_Athena_SkyTube_Loop_C, ShakeMax) == 0x0007E8, "Member 'AGCNL_Athena_SkyTube_Loop_C::ShakeMax' has a wrong offset!");
static_assert(offsetof(AGCNL_Athena_SkyTube_Loop_C, ShakeMin) == 0x0007EC, "Member 'AGCNL_Athena_SkyTube_Loop_C::ShakeMin' has a wrong offset!");
static_assert(offsetof(AGCNL_Athena_SkyTube_Loop_C, MyTargetPlayer) == 0x0007F0, "Member 'AGCNL_Athena_SkyTube_Loop_C::MyTargetPlayer' has a wrong offset!");
static_assert(offsetof(AGCNL_Athena_SkyTube_Loop_C, SplineDirection) == 0x0007F8, "Member 'AGCNL_Athena_SkyTube_Loop_C::SplineDirection' has a wrong offset!");
static_assert(offsetof(AGCNL_Athena_SkyTube_Loop_C, DataPassiveModeLateralSpeed) == 0x000808, "Member 'AGCNL_Athena_SkyTube_Loop_C::DataPassiveModeLateralSpeed' has a wrong offset!");
static_assert(offsetof(AGCNL_Athena_SkyTube_Loop_C, DataActiveModeLateralSpeed) == 0x000828, "Member 'AGCNL_Athena_SkyTube_Loop_C::DataActiveModeLateralSpeed' has a wrong offset!");
static_assert(offsetof(AGCNL_Athena_SkyTube_Loop_C, IsVehicleEmpty) == 0x000848, "Member 'AGCNL_Athena_SkyTube_Loop_C::IsVehicleEmpty' has a wrong offset!");
static_assert(offsetof(AGCNL_Athena_SkyTube_Loop_C, AppliedShakeToController) == 0x000850, "Member 'AGCNL_Athena_SkyTube_Loop_C::AppliedShakeToController' has a wrong offset!");

}

