#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GCNL_RangedFlashlight

#include "Basic.hpp"

#include "GCNL_RangedFlashlight_classes.hpp"
#include "GCNL_RangedFlashlight_parameters.hpp"


namespace SDK
{

// Function GCNL_RangedFlashlight.GCNL_RangedFlashlight_C.ExecuteUbergraph_GCNL_RangedFlashlight
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AGCNL_RangedFlashlight_C::ExecuteUbergraph_GCNL_RangedFlashlight(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GCNL_RangedFlashlight_C", "ExecuteUbergraph_GCNL_RangedFlashlight");

	Params::GCNL_RangedFlashlight_C_ExecuteUbergraph_GCNL_RangedFlashlight Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GCNL_RangedFlashlight.GCNL_RangedFlashlight_C.ToggleFlashLight
// (BlueprintCallable, BlueprintEvent)

void AGCNL_RangedFlashlight_C::ToggleFlashLight()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GCNL_RangedFlashlight_C", "ToggleFlashLight");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GCNL_RangedFlashlight.GCNL_RangedFlashlight_C.PulseFlash
// (BlueprintCallable, BlueprintEvent)

void AGCNL_RangedFlashlight_C::PulseFlash()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GCNL_RangedFlashlight_C", "PulseFlash");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GCNL_RangedFlashlight.GCNL_RangedFlashlight_C.OnRecurring
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// class AActor*                           MyTarget                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGameplayCueParameters           Parameters                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
// TArray<class UParticleSystemComponent*> ParticleComponents                                     (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
// TArray<class UAudioComponent*>          AudioComponents                                        (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
// class UCameraShake*                     BurstCameraShakeInstance                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ADecalActor*                      BurstDecalInstance                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AGCNL_RangedFlashlight_C::OnRecurring(class AActor* MyTarget, const struct FGameplayCueParameters& Parameters, const TArray<class UParticleSystemComponent*>& ParticleComponents, const TArray<class UAudioComponent*>& AudioComponents, class UCameraShake* BurstCameraShakeInstance, class ADecalActor* BurstDecalInstance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GCNL_RangedFlashlight_C", "OnRecurring");

	Params::GCNL_RangedFlashlight_C_OnRecurring Parms{};

	Parms.MyTarget = MyTarget;
	Parms.Parameters = std::move(Parameters);
	Parms.ParticleComponents = std::move(ParticleComponents);
	Parms.AudioComponents = std::move(AudioComponents);
	Parms.BurstCameraShakeInstance = BurstCameraShakeInstance;
	Parms.BurstDecalInstance = BurstDecalInstance;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GCNL_RangedFlashlight.GCNL_RangedFlashlight_C.GetToggledAndWeaponFromParams
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayCueParameters           Params_0                                               (BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference)

void AGCNL_RangedFlashlight_C::GetToggledAndWeaponFromParams(const struct FGameplayCueParameters& Params_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GCNL_RangedFlashlight_C", "GetToggledAndWeaponFromParams");

	Params::GCNL_RangedFlashlight_C_GetToggledAndWeaponFromParams Parms{};

	Parms.Params_0 = std::move(Params_0);

	UObject::ProcessEvent(Func, &Parms);
}


// Function GCNL_RangedFlashlight.GCNL_RangedFlashlight_C.HandleAttachmentsAndSound
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AB_Ranged_Flashlight_C*           Flashlight                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AGCNL_RangedFlashlight_C::HandleAttachmentsAndSound(class AB_Ranged_Flashlight_C** Flashlight)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GCNL_RangedFlashlight_C", "HandleAttachmentsAndSound");

	Params::GCNL_RangedFlashlight_C_HandleAttachmentsAndSound Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Flashlight != nullptr)
		*Flashlight = Parms.Flashlight;
}


// Function GCNL_RangedFlashlight.GCNL_RangedFlashlight_C.SetWeaponMeshEmissive
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AFortWeapon*                      Flashlight                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AGCNL_RangedFlashlight_C::SetWeaponMeshEmissive(class AFortWeapon* Flashlight)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GCNL_RangedFlashlight_C", "SetWeaponMeshEmissive");

	Params::GCNL_RangedFlashlight_C_SetWeaponMeshEmissive Parms{};

	Parms.Flashlight = Flashlight;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GCNL_RangedFlashlight.GCNL_RangedFlashlight_C.ToggleFlash
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool AGCNL_RangedFlashlight_C::ToggleFlash()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GCNL_RangedFlashlight_C", "ToggleFlash");

	Params::GCNL_RangedFlashlight_C_ToggleFlash Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function GCNL_RangedFlashlight.GCNL_RangedFlashlight_C.CheckToPulseFlash
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TDelegate<void()>                       Delegate                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor)

void AGCNL_RangedFlashlight_C::CheckToPulseFlash(TDelegate<void()> Delegate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GCNL_RangedFlashlight_C", "CheckToPulseFlash");

	Params::GCNL_RangedFlashlight_C_CheckToPulseFlash Parms{};

	Parms.Delegate = Delegate;

	UObject::ProcessEvent(Func, &Parms);
}

}

