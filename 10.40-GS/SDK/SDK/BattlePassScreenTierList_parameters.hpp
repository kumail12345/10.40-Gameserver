#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BattlePassScreenTierList

#include "Basic.hpp"

#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function BattlePassScreenTierList.BattlePassScreenTierList_C.HandleOnSetZoomed
// 0x0001 (0x0001 - 0x0000)
struct BattlePassScreenTierList_C_HandleOnSetZoomed final
{
public:
	bool                                          bZoom;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattlePassScreenTierList_C_HandleOnSetZoomed) == 0x000001, "Wrong alignment on BattlePassScreenTierList_C_HandleOnSetZoomed");
static_assert(sizeof(BattlePassScreenTierList_C_HandleOnSetZoomed) == 0x000001, "Wrong size on BattlePassScreenTierList_C_HandleOnSetZoomed");
static_assert(offsetof(BattlePassScreenTierList_C_HandleOnSetZoomed, bZoom) == 0x000000, "Member 'BattlePassScreenTierList_C_HandleOnSetZoomed::bZoom' has a wrong offset!");

// Function BattlePassScreenTierList.BattlePassScreenTierList_C.ExecuteUbergraph_BattlePassScreenTierList
// 0x0010 (0x0010 - 0x0000)
struct BattlePassScreenTierList_C_ExecuteUbergraph_BattlePassScreenTierList final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bZoom;                                // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattlePassScreenTierList_C_ExecuteUbergraph_BattlePassScreenTierList) == 0x000004, "Wrong alignment on BattlePassScreenTierList_C_ExecuteUbergraph_BattlePassScreenTierList");
static_assert(sizeof(BattlePassScreenTierList_C_ExecuteUbergraph_BattlePassScreenTierList) == 0x000010, "Wrong size on BattlePassScreenTierList_C_ExecuteUbergraph_BattlePassScreenTierList");
static_assert(offsetof(BattlePassScreenTierList_C_ExecuteUbergraph_BattlePassScreenTierList, EntryPoint) == 0x000000, "Member 'BattlePassScreenTierList_C_ExecuteUbergraph_BattlePassScreenTierList::EntryPoint' has a wrong offset!");
static_assert(offsetof(BattlePassScreenTierList_C_ExecuteUbergraph_BattlePassScreenTierList, Temp_bool_Variable) == 0x000004, "Member 'BattlePassScreenTierList_C_ExecuteUbergraph_BattlePassScreenTierList::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BattlePassScreenTierList_C_ExecuteUbergraph_BattlePassScreenTierList, Temp_byte_Variable) == 0x000005, "Member 'BattlePassScreenTierList_C_ExecuteUbergraph_BattlePassScreenTierList::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BattlePassScreenTierList_C_ExecuteUbergraph_BattlePassScreenTierList, Temp_byte_Variable_1) == 0x000006, "Member 'BattlePassScreenTierList_C_ExecuteUbergraph_BattlePassScreenTierList::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BattlePassScreenTierList_C_ExecuteUbergraph_BattlePassScreenTierList, Temp_bool_Variable_1) == 0x000007, "Member 'BattlePassScreenTierList_C_ExecuteUbergraph_BattlePassScreenTierList::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BattlePassScreenTierList_C_ExecuteUbergraph_BattlePassScreenTierList, Temp_byte_Variable_2) == 0x000008, "Member 'BattlePassScreenTierList_C_ExecuteUbergraph_BattlePassScreenTierList::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BattlePassScreenTierList_C_ExecuteUbergraph_BattlePassScreenTierList, Temp_byte_Variable_3) == 0x000009, "Member 'BattlePassScreenTierList_C_ExecuteUbergraph_BattlePassScreenTierList::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BattlePassScreenTierList_C_ExecuteUbergraph_BattlePassScreenTierList, K2Node_Event_bZoom) == 0x00000A, "Member 'BattlePassScreenTierList_C_ExecuteUbergraph_BattlePassScreenTierList::K2Node_Event_bZoom' has a wrong offset!");
static_assert(offsetof(BattlePassScreenTierList_C_ExecuteUbergraph_BattlePassScreenTierList, K2Node_Select_Default) == 0x00000B, "Member 'BattlePassScreenTierList_C_ExecuteUbergraph_BattlePassScreenTierList::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BattlePassScreenTierList_C_ExecuteUbergraph_BattlePassScreenTierList, K2Node_Select_Default_1) == 0x00000C, "Member 'BattlePassScreenTierList_C_ExecuteUbergraph_BattlePassScreenTierList::K2Node_Select_Default_1' has a wrong offset!");

}

