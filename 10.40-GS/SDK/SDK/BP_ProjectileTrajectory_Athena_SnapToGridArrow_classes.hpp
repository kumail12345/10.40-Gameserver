#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ProjectileTrajectory_Athena_SnapToGridArrow

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "ECardinalDirection_structs.hpp"
#include "Engine_structs.hpp"
#include "BP_ProjectileTrajectory_Athena_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_ProjectileTrajectory_Athena_SnapToGridArrow.BP_ProjectileTrajectory_Athena_SnapToGridArrow_C
// 0x00F0 (0x0360 - 0x0270)
class ABP_ProjectileTrajectory_Athena_SnapToGridArrow_C final : public ABP_ProjectileTrajectory_Athena_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_ProjectileTrajectory_Athena_SnapToGridArrow_C; // 0x0270(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   SM_BuildingPreview;                                // 0x0278(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Building;                                          // 0x0280(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         GridSizeXY;                                        // 0x0288(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         GridSizeZ;                                         // 0x028C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         GridYOffset;                                       // 0x0290(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LastPointDist;                                     // 0x0294(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         GridZOffset;                                       // 0x0298(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               YawOffset;                                         // 0x029C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FRotator                               LastYawOffset;                                     // 0x02A8(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FVector                                GridSnapPosition;                                  // 0x02B4(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LastGridSnapPosition;                              // 0x02C0(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2CC[0x4];                                      // 0x02CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             GridSnapSound;                                     // 0x02D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECardinalDirection                            CardinalDirection;                                 // 0x02D8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D9[0x7];                                      // 0x02D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<ECardinalDirection, struct FVector>      OrientationDoortraceOffsets;                       // 0x02E0(0x0050)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	struct FVector                                DoorTraceOffsetHigh;                               // 0x0330(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                DoorTraceOffsetLow;                                // 0x033C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          b_HitTerrain;                                      // 0x0348(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_349[0x7];                                      // 0x0349(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMesh*                            BuildingPreviewMesh;                               // 0x0350(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            BuildingPreviewMeshUnderground;                    // 0x0358(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_ProjectileTrajectory_Athena_SnapToGridArrow(int32 EntryPoint);
	void SetTrajectorySpline(TArray<struct FVector>& SplinePoints, TArray<struct FVector>& SplineTangents);
	void ReceiveBeginPlay();
	void HandleGridSnapUpdates(const struct FVector& NewLocation);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_ProjectileTrajectory_Athena_SnapToGridArrow_C">();
	}
	static class ABP_ProjectileTrajectory_Athena_SnapToGridArrow_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_ProjectileTrajectory_Athena_SnapToGridArrow_C>();
	}
};
static_assert(alignof(ABP_ProjectileTrajectory_Athena_SnapToGridArrow_C) == 0x000008, "Wrong alignment on ABP_ProjectileTrajectory_Athena_SnapToGridArrow_C");
static_assert(sizeof(ABP_ProjectileTrajectory_Athena_SnapToGridArrow_C) == 0x000360, "Wrong size on ABP_ProjectileTrajectory_Athena_SnapToGridArrow_C");
static_assert(offsetof(ABP_ProjectileTrajectory_Athena_SnapToGridArrow_C, UberGraphFrame_BP_ProjectileTrajectory_Athena_SnapToGridArrow_C) == 0x000270, "Member 'ABP_ProjectileTrajectory_Athena_SnapToGridArrow_C::UberGraphFrame_BP_ProjectileTrajectory_Athena_SnapToGridArrow_C' has a wrong offset!");
static_assert(offsetof(ABP_ProjectileTrajectory_Athena_SnapToGridArrow_C, SM_BuildingPreview) == 0x000278, "Member 'ABP_ProjectileTrajectory_Athena_SnapToGridArrow_C::SM_BuildingPreview' has a wrong offset!");
static_assert(offsetof(ABP_ProjectileTrajectory_Athena_SnapToGridArrow_C, Building) == 0x000280, "Member 'ABP_ProjectileTrajectory_Athena_SnapToGridArrow_C::Building' has a wrong offset!");
static_assert(offsetof(ABP_ProjectileTrajectory_Athena_SnapToGridArrow_C, GridSizeXY) == 0x000288, "Member 'ABP_ProjectileTrajectory_Athena_SnapToGridArrow_C::GridSizeXY' has a wrong offset!");
static_assert(offsetof(ABP_ProjectileTrajectory_Athena_SnapToGridArrow_C, GridSizeZ) == 0x00028C, "Member 'ABP_ProjectileTrajectory_Athena_SnapToGridArrow_C::GridSizeZ' has a wrong offset!");
static_assert(offsetof(ABP_ProjectileTrajectory_Athena_SnapToGridArrow_C, GridYOffset) == 0x000290, "Member 'ABP_ProjectileTrajectory_Athena_SnapToGridArrow_C::GridYOffset' has a wrong offset!");
static_assert(offsetof(ABP_ProjectileTrajectory_Athena_SnapToGridArrow_C, LastPointDist) == 0x000294, "Member 'ABP_ProjectileTrajectory_Athena_SnapToGridArrow_C::LastPointDist' has a wrong offset!");
static_assert(offsetof(ABP_ProjectileTrajectory_Athena_SnapToGridArrow_C, GridZOffset) == 0x000298, "Member 'ABP_ProjectileTrajectory_Athena_SnapToGridArrow_C::GridZOffset' has a wrong offset!");
static_assert(offsetof(ABP_ProjectileTrajectory_Athena_SnapToGridArrow_C, YawOffset) == 0x00029C, "Member 'ABP_ProjectileTrajectory_Athena_SnapToGridArrow_C::YawOffset' has a wrong offset!");
static_assert(offsetof(ABP_ProjectileTrajectory_Athena_SnapToGridArrow_C, LastYawOffset) == 0x0002A8, "Member 'ABP_ProjectileTrajectory_Athena_SnapToGridArrow_C::LastYawOffset' has a wrong offset!");
static_assert(offsetof(ABP_ProjectileTrajectory_Athena_SnapToGridArrow_C, GridSnapPosition) == 0x0002B4, "Member 'ABP_ProjectileTrajectory_Athena_SnapToGridArrow_C::GridSnapPosition' has a wrong offset!");
static_assert(offsetof(ABP_ProjectileTrajectory_Athena_SnapToGridArrow_C, LastGridSnapPosition) == 0x0002C0, "Member 'ABP_ProjectileTrajectory_Athena_SnapToGridArrow_C::LastGridSnapPosition' has a wrong offset!");
static_assert(offsetof(ABP_ProjectileTrajectory_Athena_SnapToGridArrow_C, GridSnapSound) == 0x0002D0, "Member 'ABP_ProjectileTrajectory_Athena_SnapToGridArrow_C::GridSnapSound' has a wrong offset!");
static_assert(offsetof(ABP_ProjectileTrajectory_Athena_SnapToGridArrow_C, CardinalDirection) == 0x0002D8, "Member 'ABP_ProjectileTrajectory_Athena_SnapToGridArrow_C::CardinalDirection' has a wrong offset!");
static_assert(offsetof(ABP_ProjectileTrajectory_Athena_SnapToGridArrow_C, OrientationDoortraceOffsets) == 0x0002E0, "Member 'ABP_ProjectileTrajectory_Athena_SnapToGridArrow_C::OrientationDoortraceOffsets' has a wrong offset!");
static_assert(offsetof(ABP_ProjectileTrajectory_Athena_SnapToGridArrow_C, DoorTraceOffsetHigh) == 0x000330, "Member 'ABP_ProjectileTrajectory_Athena_SnapToGridArrow_C::DoorTraceOffsetHigh' has a wrong offset!");
static_assert(offsetof(ABP_ProjectileTrajectory_Athena_SnapToGridArrow_C, DoorTraceOffsetLow) == 0x00033C, "Member 'ABP_ProjectileTrajectory_Athena_SnapToGridArrow_C::DoorTraceOffsetLow' has a wrong offset!");
static_assert(offsetof(ABP_ProjectileTrajectory_Athena_SnapToGridArrow_C, b_HitTerrain) == 0x000348, "Member 'ABP_ProjectileTrajectory_Athena_SnapToGridArrow_C::b_HitTerrain' has a wrong offset!");
static_assert(offsetof(ABP_ProjectileTrajectory_Athena_SnapToGridArrow_C, BuildingPreviewMesh) == 0x000350, "Member 'ABP_ProjectileTrajectory_Athena_SnapToGridArrow_C::BuildingPreviewMesh' has a wrong offset!");
static_assert(offsetof(ABP_ProjectileTrajectory_Athena_SnapToGridArrow_C, BuildingPreviewMeshUnderground) == 0x000358, "Member 'ABP_ProjectileTrajectory_Athena_SnapToGridArrow_C::BuildingPreviewMeshUnderground' has a wrong offset!");

}

