#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ChallengeCountdown

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FortniteUI_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass ChallengeCountdown.ChallengeCountdown_C
// 0x0040 (0x02F8 - 0x02B8)
class UChallengeCountdown_C final : public UAthenaChallengeCountdownDisplay
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02B8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UImage*                                 Clock;                                             // 0x02C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         PaddingHB;                                         // 0x02C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 RedBoxBorder;                                      // 0x02D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       Text_TimeRemainingTag;                             // 0x02D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UScaleBox*                              TextScale;                                         // 0x02E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               TransformOvr;                                      // 0x02E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          IsLargeDisplay;                                    // 0x02F0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)

public:
	void PreConstruct(bool IsDesignTime);
	void Construct();
	void OnChallengeSet(const struct FTimerDisplayData& DisplayStyle);
	void ExecuteUbergraph_ChallengeCountdown(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ChallengeCountdown_C">();
	}
	static class UChallengeCountdown_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UChallengeCountdown_C>();
	}
};
static_assert(alignof(UChallengeCountdown_C) == 0x000008, "Wrong alignment on UChallengeCountdown_C");
static_assert(sizeof(UChallengeCountdown_C) == 0x0002F8, "Wrong size on UChallengeCountdown_C");
static_assert(offsetof(UChallengeCountdown_C, UberGraphFrame) == 0x0002B8, "Member 'UChallengeCountdown_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UChallengeCountdown_C, Clock) == 0x0002C0, "Member 'UChallengeCountdown_C::Clock' has a wrong offset!");
static_assert(offsetof(UChallengeCountdown_C, PaddingHB) == 0x0002C8, "Member 'UChallengeCountdown_C::PaddingHB' has a wrong offset!");
static_assert(offsetof(UChallengeCountdown_C, RedBoxBorder) == 0x0002D0, "Member 'UChallengeCountdown_C::RedBoxBorder' has a wrong offset!");
static_assert(offsetof(UChallengeCountdown_C, Text_TimeRemainingTag) == 0x0002D8, "Member 'UChallengeCountdown_C::Text_TimeRemainingTag' has a wrong offset!");
static_assert(offsetof(UChallengeCountdown_C, TextScale) == 0x0002E0, "Member 'UChallengeCountdown_C::TextScale' has a wrong offset!");
static_assert(offsetof(UChallengeCountdown_C, TransformOvr) == 0x0002E8, "Member 'UChallengeCountdown_C::TransformOvr' has a wrong offset!");
static_assert(offsetof(UChallengeCountdown_C, IsLargeDisplay) == 0x0002F0, "Member 'UChallengeCountdown_C::IsLargeDisplay' has a wrong offset!");

}

