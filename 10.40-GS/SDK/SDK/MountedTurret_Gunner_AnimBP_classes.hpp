#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MountedTurret_Gunner_AnimBP

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "AnimGraphRuntime_structs.hpp"
#include "FortniteGame_classes.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass MountedTurret_Gunner_AnimBP.MountedTurret_Gunner_AnimBP_C
// 0x0840 (0xAC20 - 0xA3E0)
class UMountedTurret_Gunner_AnimBP_C final : public UFortPlayerAnimInstance_MountedTurret
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0xA3E0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimNode_LegIK                        AnimGraphNode_LegIK_EA99B7B8421846838D4B2EA9E3E1CF69; // 0xA3E8(0x00F8)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_AB5E7EE04FD942996FFE84801A0C0FFF; // 0xA4E0(0x0020)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_490B730C4D3612B56BF047918267E18F; // 0xA500(0x0020)()
	struct FAnimNode_LegIK                        AnimGraphNode_LegIK_48C11BA2470BF641C7E0C8B70AEF7F40; // 0xA520(0x00F8)()
	struct FAnimNode_Root                         AnimGraphNode_Root_2B80D546472B689BD0B5ABB23390F217; // 0xA618(0x0030)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_221FD1B34567A8B8784CB4AB81D1E5B5; // 0xA648(0x0048)()
	struct FAnimNode_BlendListByEnum              AnimGraphNode_BlendListByEnum_41B2C0ED4B73B9B6492BEE9541D99135; // 0xA690(0x00B0)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive_D906DC2D4CCAB5B10A19AAB7140D34C9; // 0xA740(0x00C8)()
	struct FAnimNode_RefPose                      AnimGraphNode_IdentityPose_E6B2D7944E459199A162B78A736662D2; // 0xA808(0x0018)()
	struct FAnimNode_RotationOffsetBlendSpace     AnimGraphNode_RotationOffsetBlendSpace_B42B4CC64E43087EE5F75AAA3AC31B87; // 0xA820(0x0188)()
	struct FAnimNode_RefPose                      AnimGraphNode_IdentityPose_E12A1B75416454F164AF9C8FFBC99FCD; // 0xA9A8(0x0018)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_FFEC5A2C451F8B6DE9C3D0BF63D47EDB; // 0xA9C0(0x0078)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive_307F98F94ACED67B0AC1628B3827E568; // 0xAA38(0x00C8)()
	struct FAnimNode_SequenceEvaluator            AnimGraphNode_SequenceEvaluator_D604CC9941458E8F6D56F5AC018805FB; // 0xAB00(0x0048)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_202C876C4609006B94125DA140FCE5F2; // 0xAB48(0x0048)()
	struct FVector                                LocalLeftOffset;                                   // 0xAB90(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                WorldPosLeft;                                      // 0xAB9C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               LocalRotLeftOffset;                                // 0xABA8(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_ABB4[0x4];                                     // 0xABB4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortMountedTurret*                     MountedTurret;                                     // 0xABB8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               WorldRotLeft;                                      // 0xABC0(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FVector                                LocalRightOffset;                                  // 0xABCC(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               LocalRotRightOffset;                               // 0xABD8(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FRotator                               WorldRotRight;                                     // 0xABE4(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FVector                                WorldPosRight;                                     // 0xABF0(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Speed;                                             // 0xABFC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          isTurning;                                         // 0xAC00(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_AC01[0x3];                                     // 0xAC01(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         TurnRate;                                          // 0xAC04(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AimingPitchLastTick;                               // 0xAC08(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PitchRate;                                         // 0xAC0C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PedalScaler;                                       // 0xAC10(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_MountedTurret_Gunner_AnimBP(int32 EntryPoint);
	void EvaluateGraphExposedInputs_ExecuteUbergraph_MountedTurret_Gunner_AnimBP_AnimGraphNode_RotationOffsetBlendSpace_B42B4CC64E43087EE5F75AAA3AC31B87();
	void BlueprintUpdateAnimation(float DeltaTimeX);
	void AnimGraph(struct FPoseLink* AnimGraph_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"MountedTurret_Gunner_AnimBP_C">();
	}
	static class UMountedTurret_Gunner_AnimBP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMountedTurret_Gunner_AnimBP_C>();
	}
};
static_assert(alignof(UMountedTurret_Gunner_AnimBP_C) == 0x000010, "Wrong alignment on UMountedTurret_Gunner_AnimBP_C");
static_assert(sizeof(UMountedTurret_Gunner_AnimBP_C) == 0x00AC20, "Wrong size on UMountedTurret_Gunner_AnimBP_C");
static_assert(offsetof(UMountedTurret_Gunner_AnimBP_C, UberGraphFrame) == 0x00A3E0, "Member 'UMountedTurret_Gunner_AnimBP_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UMountedTurret_Gunner_AnimBP_C, AnimGraphNode_LegIK_EA99B7B8421846838D4B2EA9E3E1CF69) == 0x00A3E8, "Member 'UMountedTurret_Gunner_AnimBP_C::AnimGraphNode_LegIK_EA99B7B8421846838D4B2EA9E3E1CF69' has a wrong offset!");
static_assert(offsetof(UMountedTurret_Gunner_AnimBP_C, AnimGraphNode_LocalToComponentSpace_AB5E7EE04FD942996FFE84801A0C0FFF) == 0x00A4E0, "Member 'UMountedTurret_Gunner_AnimBP_C::AnimGraphNode_LocalToComponentSpace_AB5E7EE04FD942996FFE84801A0C0FFF' has a wrong offset!");
static_assert(offsetof(UMountedTurret_Gunner_AnimBP_C, AnimGraphNode_ComponentToLocalSpace_490B730C4D3612B56BF047918267E18F) == 0x00A500, "Member 'UMountedTurret_Gunner_AnimBP_C::AnimGraphNode_ComponentToLocalSpace_490B730C4D3612B56BF047918267E18F' has a wrong offset!");
static_assert(offsetof(UMountedTurret_Gunner_AnimBP_C, AnimGraphNode_LegIK_48C11BA2470BF641C7E0C8B70AEF7F40) == 0x00A520, "Member 'UMountedTurret_Gunner_AnimBP_C::AnimGraphNode_LegIK_48C11BA2470BF641C7E0C8B70AEF7F40' has a wrong offset!");
static_assert(offsetof(UMountedTurret_Gunner_AnimBP_C, AnimGraphNode_Root_2B80D546472B689BD0B5ABB23390F217) == 0x00A618, "Member 'UMountedTurret_Gunner_AnimBP_C::AnimGraphNode_Root_2B80D546472B689BD0B5ABB23390F217' has a wrong offset!");
static_assert(offsetof(UMountedTurret_Gunner_AnimBP_C, AnimGraphNode_Slot_221FD1B34567A8B8784CB4AB81D1E5B5) == 0x00A648, "Member 'UMountedTurret_Gunner_AnimBP_C::AnimGraphNode_Slot_221FD1B34567A8B8784CB4AB81D1E5B5' has a wrong offset!");
static_assert(offsetof(UMountedTurret_Gunner_AnimBP_C, AnimGraphNode_BlendListByEnum_41B2C0ED4B73B9B6492BEE9541D99135) == 0x00A690, "Member 'UMountedTurret_Gunner_AnimBP_C::AnimGraphNode_BlendListByEnum_41B2C0ED4B73B9B6492BEE9541D99135' has a wrong offset!");
static_assert(offsetof(UMountedTurret_Gunner_AnimBP_C, AnimGraphNode_ApplyAdditive_D906DC2D4CCAB5B10A19AAB7140D34C9) == 0x00A740, "Member 'UMountedTurret_Gunner_AnimBP_C::AnimGraphNode_ApplyAdditive_D906DC2D4CCAB5B10A19AAB7140D34C9' has a wrong offset!");
static_assert(offsetof(UMountedTurret_Gunner_AnimBP_C, AnimGraphNode_IdentityPose_E6B2D7944E459199A162B78A736662D2) == 0x00A808, "Member 'UMountedTurret_Gunner_AnimBP_C::AnimGraphNode_IdentityPose_E6B2D7944E459199A162B78A736662D2' has a wrong offset!");
static_assert(offsetof(UMountedTurret_Gunner_AnimBP_C, AnimGraphNode_RotationOffsetBlendSpace_B42B4CC64E43087EE5F75AAA3AC31B87) == 0x00A820, "Member 'UMountedTurret_Gunner_AnimBP_C::AnimGraphNode_RotationOffsetBlendSpace_B42B4CC64E43087EE5F75AAA3AC31B87' has a wrong offset!");
static_assert(offsetof(UMountedTurret_Gunner_AnimBP_C, AnimGraphNode_IdentityPose_E12A1B75416454F164AF9C8FFBC99FCD) == 0x00A9A8, "Member 'UMountedTurret_Gunner_AnimBP_C::AnimGraphNode_IdentityPose_E12A1B75416454F164AF9C8FFBC99FCD' has a wrong offset!");
static_assert(offsetof(UMountedTurret_Gunner_AnimBP_C, AnimGraphNode_SequencePlayer_FFEC5A2C451F8B6DE9C3D0BF63D47EDB) == 0x00A9C0, "Member 'UMountedTurret_Gunner_AnimBP_C::AnimGraphNode_SequencePlayer_FFEC5A2C451F8B6DE9C3D0BF63D47EDB' has a wrong offset!");
static_assert(offsetof(UMountedTurret_Gunner_AnimBP_C, AnimGraphNode_ApplyAdditive_307F98F94ACED67B0AC1628B3827E568) == 0x00AA38, "Member 'UMountedTurret_Gunner_AnimBP_C::AnimGraphNode_ApplyAdditive_307F98F94ACED67B0AC1628B3827E568' has a wrong offset!");
static_assert(offsetof(UMountedTurret_Gunner_AnimBP_C, AnimGraphNode_SequenceEvaluator_D604CC9941458E8F6D56F5AC018805FB) == 0x00AB00, "Member 'UMountedTurret_Gunner_AnimBP_C::AnimGraphNode_SequenceEvaluator_D604CC9941458E8F6D56F5AC018805FB' has a wrong offset!");
static_assert(offsetof(UMountedTurret_Gunner_AnimBP_C, AnimGraphNode_Slot_202C876C4609006B94125DA140FCE5F2) == 0x00AB48, "Member 'UMountedTurret_Gunner_AnimBP_C::AnimGraphNode_Slot_202C876C4609006B94125DA140FCE5F2' has a wrong offset!");
static_assert(offsetof(UMountedTurret_Gunner_AnimBP_C, LocalLeftOffset) == 0x00AB90, "Member 'UMountedTurret_Gunner_AnimBP_C::LocalLeftOffset' has a wrong offset!");
static_assert(offsetof(UMountedTurret_Gunner_AnimBP_C, WorldPosLeft) == 0x00AB9C, "Member 'UMountedTurret_Gunner_AnimBP_C::WorldPosLeft' has a wrong offset!");
static_assert(offsetof(UMountedTurret_Gunner_AnimBP_C, LocalRotLeftOffset) == 0x00ABA8, "Member 'UMountedTurret_Gunner_AnimBP_C::LocalRotLeftOffset' has a wrong offset!");
static_assert(offsetof(UMountedTurret_Gunner_AnimBP_C, MountedTurret) == 0x00ABB8, "Member 'UMountedTurret_Gunner_AnimBP_C::MountedTurret' has a wrong offset!");
static_assert(offsetof(UMountedTurret_Gunner_AnimBP_C, WorldRotLeft) == 0x00ABC0, "Member 'UMountedTurret_Gunner_AnimBP_C::WorldRotLeft' has a wrong offset!");
static_assert(offsetof(UMountedTurret_Gunner_AnimBP_C, LocalRightOffset) == 0x00ABCC, "Member 'UMountedTurret_Gunner_AnimBP_C::LocalRightOffset' has a wrong offset!");
static_assert(offsetof(UMountedTurret_Gunner_AnimBP_C, LocalRotRightOffset) == 0x00ABD8, "Member 'UMountedTurret_Gunner_AnimBP_C::LocalRotRightOffset' has a wrong offset!");
static_assert(offsetof(UMountedTurret_Gunner_AnimBP_C, WorldRotRight) == 0x00ABE4, "Member 'UMountedTurret_Gunner_AnimBP_C::WorldRotRight' has a wrong offset!");
static_assert(offsetof(UMountedTurret_Gunner_AnimBP_C, WorldPosRight) == 0x00ABF0, "Member 'UMountedTurret_Gunner_AnimBP_C::WorldPosRight' has a wrong offset!");
static_assert(offsetof(UMountedTurret_Gunner_AnimBP_C, Speed) == 0x00ABFC, "Member 'UMountedTurret_Gunner_AnimBP_C::Speed' has a wrong offset!");
static_assert(offsetof(UMountedTurret_Gunner_AnimBP_C, isTurning) == 0x00AC00, "Member 'UMountedTurret_Gunner_AnimBP_C::isTurning' has a wrong offset!");
static_assert(offsetof(UMountedTurret_Gunner_AnimBP_C, TurnRate) == 0x00AC04, "Member 'UMountedTurret_Gunner_AnimBP_C::TurnRate' has a wrong offset!");
static_assert(offsetof(UMountedTurret_Gunner_AnimBP_C, AimingPitchLastTick) == 0x00AC08, "Member 'UMountedTurret_Gunner_AnimBP_C::AimingPitchLastTick' has a wrong offset!");
static_assert(offsetof(UMountedTurret_Gunner_AnimBP_C, PitchRate) == 0x00AC0C, "Member 'UMountedTurret_Gunner_AnimBP_C::PitchRate' has a wrong offset!");
static_assert(offsetof(UMountedTurret_Gunner_AnimBP_C, PedalScaler) == 0x00AC10, "Member 'UMountedTurret_Gunner_AnimBP_C::PedalScaler' has a wrong offset!");

}

