#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: OstrichFinale

#include "Basic.hpp"


namespace SDK::Params
{

// Function OstrichFinale.OstrichFinale_C.ExecuteUbergraph_OstrichFinale
// 0x0040 (0x0040 - 0x0000)
struct OstrichFinale_C_ExecuteUbergraph_OstrichFinale final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_RemainingTime;                        // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_WarningDuration;                      // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue_1;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue_2;                     // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_Duration;                             // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(OstrichFinale_C_ExecuteUbergraph_OstrichFinale) == 0x000008, "Wrong alignment on OstrichFinale_C_ExecuteUbergraph_OstrichFinale");
static_assert(sizeof(OstrichFinale_C_ExecuteUbergraph_OstrichFinale) == 0x000040, "Wrong size on OstrichFinale_C_ExecuteUbergraph_OstrichFinale");
static_assert(offsetof(OstrichFinale_C_ExecuteUbergraph_OstrichFinale, EntryPoint) == 0x000000, "Member 'OstrichFinale_C_ExecuteUbergraph_OstrichFinale::EntryPoint' has a wrong offset!");
static_assert(offsetof(OstrichFinale_C_ExecuteUbergraph_OstrichFinale, K2Node_Event_RemainingTime) == 0x000004, "Member 'OstrichFinale_C_ExecuteUbergraph_OstrichFinale::K2Node_Event_RemainingTime' has a wrong offset!");
static_assert(offsetof(OstrichFinale_C_ExecuteUbergraph_OstrichFinale, K2Node_Event_WarningDuration) == 0x000008, "Member 'OstrichFinale_C_ExecuteUbergraph_OstrichFinale::K2Node_Event_WarningDuration' has a wrong offset!");
static_assert(offsetof(OstrichFinale_C_ExecuteUbergraph_OstrichFinale, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00000C, "Member 'OstrichFinale_C_ExecuteUbergraph_OstrichFinale::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(OstrichFinale_C_ExecuteUbergraph_OstrichFinale, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000010, "Member 'OstrichFinale_C_ExecuteUbergraph_OstrichFinale::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(OstrichFinale_C_ExecuteUbergraph_OstrichFinale, CallFunc_FTrunc_ReturnValue) == 0x000014, "Member 'OstrichFinale_C_ExecuteUbergraph_OstrichFinale::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(OstrichFinale_C_ExecuteUbergraph_OstrichFinale, CallFunc_FTrunc_ReturnValue_1) == 0x000018, "Member 'OstrichFinale_C_ExecuteUbergraph_OstrichFinale::CallFunc_FTrunc_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(OstrichFinale_C_ExecuteUbergraph_OstrichFinale, CallFunc_FTrunc_ReturnValue_2) == 0x00001C, "Member 'OstrichFinale_C_ExecuteUbergraph_OstrichFinale::CallFunc_FTrunc_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(OstrichFinale_C_ExecuteUbergraph_OstrichFinale, CallFunc_Multiply_IntInt_ReturnValue) == 0x000020, "Member 'OstrichFinale_C_ExecuteUbergraph_OstrichFinale::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(OstrichFinale_C_ExecuteUbergraph_OstrichFinale, CallFunc_Subtract_IntInt_ReturnValue) == 0x000024, "Member 'OstrichFinale_C_ExecuteUbergraph_OstrichFinale::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(OstrichFinale_C_ExecuteUbergraph_OstrichFinale, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000028, "Member 'OstrichFinale_C_ExecuteUbergraph_OstrichFinale::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(OstrichFinale_C_ExecuteUbergraph_OstrichFinale, K2Node_Event_Duration) == 0x00002C, "Member 'OstrichFinale_C_ExecuteUbergraph_OstrichFinale::K2Node_Event_Duration' has a wrong offset!");
static_assert(offsetof(OstrichFinale_C_ExecuteUbergraph_OstrichFinale, K2Node_Event_IsDesignTime) == 0x000030, "Member 'OstrichFinale_C_ExecuteUbergraph_OstrichFinale::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(OstrichFinale_C_ExecuteUbergraph_OstrichFinale, CallFunc_PlayAnimation_ReturnValue) == 0x000038, "Member 'OstrichFinale_C_ExecuteUbergraph_OstrichFinale::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function OstrichFinale.OstrichFinale_C.OnStartSelfDestructPrime
// 0x0004 (0x0004 - 0x0000)
struct OstrichFinale_C_OnStartSelfDestructPrime final
{
public:
	float                                         Duration;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(OstrichFinale_C_OnStartSelfDestructPrime) == 0x000004, "Wrong alignment on OstrichFinale_C_OnStartSelfDestructPrime");
static_assert(sizeof(OstrichFinale_C_OnStartSelfDestructPrime) == 0x000004, "Wrong size on OstrichFinale_C_OnStartSelfDestructPrime");
static_assert(offsetof(OstrichFinale_C_OnStartSelfDestructPrime, Duration) == 0x000000, "Member 'OstrichFinale_C_OnStartSelfDestructPrime::Duration' has a wrong offset!");

// Function OstrichFinale.OstrichFinale_C.OnUpdateSelfDestruct
// 0x0004 (0x0004 - 0x0000)
struct OstrichFinale_C_OnUpdateSelfDestruct final
{
public:
	float                                         RemainingTime;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(OstrichFinale_C_OnUpdateSelfDestruct) == 0x000004, "Wrong alignment on OstrichFinale_C_OnUpdateSelfDestruct");
static_assert(sizeof(OstrichFinale_C_OnUpdateSelfDestruct) == 0x000004, "Wrong size on OstrichFinale_C_OnUpdateSelfDestruct");
static_assert(offsetof(OstrichFinale_C_OnUpdateSelfDestruct, RemainingTime) == 0x000000, "Member 'OstrichFinale_C_OnUpdateSelfDestruct::RemainingTime' has a wrong offset!");

// Function OstrichFinale.OstrichFinale_C.OnSelfDestructStart
// 0x0004 (0x0004 - 0x0000)
struct OstrichFinale_C_OnSelfDestructStart final
{
public:
	float                                         WarningDuration;                                   // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(OstrichFinale_C_OnSelfDestructStart) == 0x000004, "Wrong alignment on OstrichFinale_C_OnSelfDestructStart");
static_assert(sizeof(OstrichFinale_C_OnSelfDestructStart) == 0x000004, "Wrong size on OstrichFinale_C_OnSelfDestructStart");
static_assert(offsetof(OstrichFinale_C_OnSelfDestructStart, WarningDuration) == 0x000000, "Member 'OstrichFinale_C_OnSelfDestructStart::WarningDuration' has a wrong offset!");

// Function OstrichFinale.OstrichFinale_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct OstrichFinale_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(OstrichFinale_C_PreConstruct) == 0x000001, "Wrong alignment on OstrichFinale_C_PreConstruct");
static_assert(sizeof(OstrichFinale_C_PreConstruct) == 0x000001, "Wrong size on OstrichFinale_C_PreConstruct");
static_assert(offsetof(OstrichFinale_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'OstrichFinale_C_PreConstruct::IsDesignTime' has a wrong offset!");

}

