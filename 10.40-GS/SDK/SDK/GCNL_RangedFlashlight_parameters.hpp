#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GCNL_RangedFlashlight

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "GameplayTags_structs.hpp"


namespace SDK::Params
{

// Function GCNL_RangedFlashlight.GCNL_RangedFlashlight_C.ExecuteUbergraph_GCNL_RangedFlashlight
// 0x0110 (0x0110 - 0x0000)
struct GCNL_RangedFlashlight_C_ExecuteUbergraph_GCNL_RangedFlashlight final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_MyTarget;                             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 K2Node_Event_Parameters;                           // 0x0010(0x00B8)(ConstParm, ContainsInstancedReference)
	TArray<class UParticleSystemComponent*>       K2Node_Event_ParticleComponents;                   // 0x00C8(0x0010)(ConstParm, ZeroConstructor, ReferenceParm)
	TArray<class UAudioComponent*>                K2Node_Event_AudioComponents;                      // 0x00D8(0x0010)(ConstParm, ZeroConstructor, ReferenceParm)
	class UCameraShake*                           K2Node_Event_BurstCameraShakeInstance;             // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ADecalActor*                            K2Node_Event_BurstDecalInstance;                   // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AB_Ranged_Flashlight_C*                 CallFunc_HandleAttachmentsAndSound_Flashlight;     // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0100(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(GCNL_RangedFlashlight_C_ExecuteUbergraph_GCNL_RangedFlashlight) == 0x000008, "Wrong alignment on GCNL_RangedFlashlight_C_ExecuteUbergraph_GCNL_RangedFlashlight");
static_assert(sizeof(GCNL_RangedFlashlight_C_ExecuteUbergraph_GCNL_RangedFlashlight) == 0x000110, "Wrong size on GCNL_RangedFlashlight_C_ExecuteUbergraph_GCNL_RangedFlashlight");
static_assert(offsetof(GCNL_RangedFlashlight_C_ExecuteUbergraph_GCNL_RangedFlashlight, EntryPoint) == 0x000000, "Member 'GCNL_RangedFlashlight_C_ExecuteUbergraph_GCNL_RangedFlashlight::EntryPoint' has a wrong offset!");
static_assert(offsetof(GCNL_RangedFlashlight_C_ExecuteUbergraph_GCNL_RangedFlashlight, K2Node_Event_MyTarget) == 0x000008, "Member 'GCNL_RangedFlashlight_C_ExecuteUbergraph_GCNL_RangedFlashlight::K2Node_Event_MyTarget' has a wrong offset!");
static_assert(offsetof(GCNL_RangedFlashlight_C_ExecuteUbergraph_GCNL_RangedFlashlight, K2Node_Event_Parameters) == 0x000010, "Member 'GCNL_RangedFlashlight_C_ExecuteUbergraph_GCNL_RangedFlashlight::K2Node_Event_Parameters' has a wrong offset!");
static_assert(offsetof(GCNL_RangedFlashlight_C_ExecuteUbergraph_GCNL_RangedFlashlight, K2Node_Event_ParticleComponents) == 0x0000C8, "Member 'GCNL_RangedFlashlight_C_ExecuteUbergraph_GCNL_RangedFlashlight::K2Node_Event_ParticleComponents' has a wrong offset!");
static_assert(offsetof(GCNL_RangedFlashlight_C_ExecuteUbergraph_GCNL_RangedFlashlight, K2Node_Event_AudioComponents) == 0x0000D8, "Member 'GCNL_RangedFlashlight_C_ExecuteUbergraph_GCNL_RangedFlashlight::K2Node_Event_AudioComponents' has a wrong offset!");
static_assert(offsetof(GCNL_RangedFlashlight_C_ExecuteUbergraph_GCNL_RangedFlashlight, K2Node_Event_BurstCameraShakeInstance) == 0x0000E8, "Member 'GCNL_RangedFlashlight_C_ExecuteUbergraph_GCNL_RangedFlashlight::K2Node_Event_BurstCameraShakeInstance' has a wrong offset!");
static_assert(offsetof(GCNL_RangedFlashlight_C_ExecuteUbergraph_GCNL_RangedFlashlight, K2Node_Event_BurstDecalInstance) == 0x0000F0, "Member 'GCNL_RangedFlashlight_C_ExecuteUbergraph_GCNL_RangedFlashlight::K2Node_Event_BurstDecalInstance' has a wrong offset!");
static_assert(offsetof(GCNL_RangedFlashlight_C_ExecuteUbergraph_GCNL_RangedFlashlight, CallFunc_HandleAttachmentsAndSound_Flashlight) == 0x0000F8, "Member 'GCNL_RangedFlashlight_C_ExecuteUbergraph_GCNL_RangedFlashlight::CallFunc_HandleAttachmentsAndSound_Flashlight' has a wrong offset!");
static_assert(offsetof(GCNL_RangedFlashlight_C_ExecuteUbergraph_GCNL_RangedFlashlight, K2Node_CreateDelegate_OutputDelegate) == 0x000100, "Member 'GCNL_RangedFlashlight_C_ExecuteUbergraph_GCNL_RangedFlashlight::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");

// Function GCNL_RangedFlashlight.GCNL_RangedFlashlight_C.OnRecurring
// 0x00F0 (0x00F0 - 0x0000)
struct GCNL_RangedFlashlight_C_OnRecurring final
{
public:
	class AActor*                                 MyTarget;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x00B8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	TArray<class UParticleSystemComponent*>       ParticleComponents;                                // 0x00C0(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
	TArray<class UAudioComponent*>                AudioComponents;                                   // 0x00D0(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
	class UCameraShake*                           BurstCameraShakeInstance;                          // 0x00E0(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ADecalActor*                            BurstDecalInstance;                                // 0x00E8(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GCNL_RangedFlashlight_C_OnRecurring) == 0x000008, "Wrong alignment on GCNL_RangedFlashlight_C_OnRecurring");
static_assert(sizeof(GCNL_RangedFlashlight_C_OnRecurring) == 0x0000F0, "Wrong size on GCNL_RangedFlashlight_C_OnRecurring");
static_assert(offsetof(GCNL_RangedFlashlight_C_OnRecurring, MyTarget) == 0x000000, "Member 'GCNL_RangedFlashlight_C_OnRecurring::MyTarget' has a wrong offset!");
static_assert(offsetof(GCNL_RangedFlashlight_C_OnRecurring, Parameters) == 0x000008, "Member 'GCNL_RangedFlashlight_C_OnRecurring::Parameters' has a wrong offset!");
static_assert(offsetof(GCNL_RangedFlashlight_C_OnRecurring, ParticleComponents) == 0x0000C0, "Member 'GCNL_RangedFlashlight_C_OnRecurring::ParticleComponents' has a wrong offset!");
static_assert(offsetof(GCNL_RangedFlashlight_C_OnRecurring, AudioComponents) == 0x0000D0, "Member 'GCNL_RangedFlashlight_C_OnRecurring::AudioComponents' has a wrong offset!");
static_assert(offsetof(GCNL_RangedFlashlight_C_OnRecurring, BurstCameraShakeInstance) == 0x0000E0, "Member 'GCNL_RangedFlashlight_C_OnRecurring::BurstCameraShakeInstance' has a wrong offset!");
static_assert(offsetof(GCNL_RangedFlashlight_C_OnRecurring, BurstDecalInstance) == 0x0000E8, "Member 'GCNL_RangedFlashlight_C_OnRecurring::BurstDecalInstance' has a wrong offset!");

// Function GCNL_RangedFlashlight.GCNL_RangedFlashlight_C.GetToggledAndWeaponFromParams
// 0x0188 (0x0188 - 0x0000)
struct GCNL_RangedFlashlight_C_GetToggledAndWeaponFromParams final
{
public:
	struct FGameplayCueParameters                 Params_0;                                          // 0x0000(0x00B8)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference)
	float                                         CallFunc_GetTimeSeconds_ReturnValue;               // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakGameplayCueParameters_NormalizedMagnitude; // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakGameplayCueParameters_RawMagnitude;  // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C4[0x4];                                       // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayEffectContextHandle           CallFunc_BreakGameplayCueParameters_EffectContext; // 0x00C8(0x0018)()
	struct FGameplayTag                           CallFunc_BreakGameplayCueParameters_MatchedTagName; // 0x00E0(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_BreakGameplayCueParameters_OriginalTag;   // 0x00E8(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  CallFunc_BreakGameplayCueParameters_AggregatedSourceTags; // 0x00F0(0x0020)()
	struct FGameplayTagContainer                  CallFunc_BreakGameplayCueParameters_AggregatedTargetTags; // 0x0110(0x0020)()
	struct FVector                                CallFunc_BreakGameplayCueParameters_Location;      // 0x0130(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakGameplayCueParameters_Normal;        // 0x013C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakGameplayCueParameters_Instigator;    // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakGameplayCueParameters_EffectCauser;  // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_BreakGameplayCueParameters_SourceObject;  // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakGameplayCueParameters_PhysicalMaterial; // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakGameplayCueParameters_GameplayEffectLevel; // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakGameplayCueParameters_AbilityLevel;  // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        CallFunc_BreakGameplayCueParameters_TargetAttachComponent; // 0x0170(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortWeapon*                            K2Node_DynamicCast_AsFort_Weapon;                  // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue;       // 0x0181(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GCNL_RangedFlashlight_C_GetToggledAndWeaponFromParams) == 0x000008, "Wrong alignment on GCNL_RangedFlashlight_C_GetToggledAndWeaponFromParams");
static_assert(sizeof(GCNL_RangedFlashlight_C_GetToggledAndWeaponFromParams) == 0x000188, "Wrong size on GCNL_RangedFlashlight_C_GetToggledAndWeaponFromParams");
static_assert(offsetof(GCNL_RangedFlashlight_C_GetToggledAndWeaponFromParams, Params_0) == 0x000000, "Member 'GCNL_RangedFlashlight_C_GetToggledAndWeaponFromParams::Params_0' has a wrong offset!");
static_assert(offsetof(GCNL_RangedFlashlight_C_GetToggledAndWeaponFromParams, CallFunc_GetTimeSeconds_ReturnValue) == 0x0000B8, "Member 'GCNL_RangedFlashlight_C_GetToggledAndWeaponFromParams::CallFunc_GetTimeSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCNL_RangedFlashlight_C_GetToggledAndWeaponFromParams, CallFunc_BreakGameplayCueParameters_NormalizedMagnitude) == 0x0000BC, "Member 'GCNL_RangedFlashlight_C_GetToggledAndWeaponFromParams::CallFunc_BreakGameplayCueParameters_NormalizedMagnitude' has a wrong offset!");
static_assert(offsetof(GCNL_RangedFlashlight_C_GetToggledAndWeaponFromParams, CallFunc_BreakGameplayCueParameters_RawMagnitude) == 0x0000C0, "Member 'GCNL_RangedFlashlight_C_GetToggledAndWeaponFromParams::CallFunc_BreakGameplayCueParameters_RawMagnitude' has a wrong offset!");
static_assert(offsetof(GCNL_RangedFlashlight_C_GetToggledAndWeaponFromParams, CallFunc_BreakGameplayCueParameters_EffectContext) == 0x0000C8, "Member 'GCNL_RangedFlashlight_C_GetToggledAndWeaponFromParams::CallFunc_BreakGameplayCueParameters_EffectContext' has a wrong offset!");
static_assert(offsetof(GCNL_RangedFlashlight_C_GetToggledAndWeaponFromParams, CallFunc_BreakGameplayCueParameters_MatchedTagName) == 0x0000E0, "Member 'GCNL_RangedFlashlight_C_GetToggledAndWeaponFromParams::CallFunc_BreakGameplayCueParameters_MatchedTagName' has a wrong offset!");
static_assert(offsetof(GCNL_RangedFlashlight_C_GetToggledAndWeaponFromParams, CallFunc_BreakGameplayCueParameters_OriginalTag) == 0x0000E8, "Member 'GCNL_RangedFlashlight_C_GetToggledAndWeaponFromParams::CallFunc_BreakGameplayCueParameters_OriginalTag' has a wrong offset!");
static_assert(offsetof(GCNL_RangedFlashlight_C_GetToggledAndWeaponFromParams, CallFunc_BreakGameplayCueParameters_AggregatedSourceTags) == 0x0000F0, "Member 'GCNL_RangedFlashlight_C_GetToggledAndWeaponFromParams::CallFunc_BreakGameplayCueParameters_AggregatedSourceTags' has a wrong offset!");
static_assert(offsetof(GCNL_RangedFlashlight_C_GetToggledAndWeaponFromParams, CallFunc_BreakGameplayCueParameters_AggregatedTargetTags) == 0x000110, "Member 'GCNL_RangedFlashlight_C_GetToggledAndWeaponFromParams::CallFunc_BreakGameplayCueParameters_AggregatedTargetTags' has a wrong offset!");
static_assert(offsetof(GCNL_RangedFlashlight_C_GetToggledAndWeaponFromParams, CallFunc_BreakGameplayCueParameters_Location) == 0x000130, "Member 'GCNL_RangedFlashlight_C_GetToggledAndWeaponFromParams::CallFunc_BreakGameplayCueParameters_Location' has a wrong offset!");
static_assert(offsetof(GCNL_RangedFlashlight_C_GetToggledAndWeaponFromParams, CallFunc_BreakGameplayCueParameters_Normal) == 0x00013C, "Member 'GCNL_RangedFlashlight_C_GetToggledAndWeaponFromParams::CallFunc_BreakGameplayCueParameters_Normal' has a wrong offset!");
static_assert(offsetof(GCNL_RangedFlashlight_C_GetToggledAndWeaponFromParams, CallFunc_BreakGameplayCueParameters_Instigator) == 0x000148, "Member 'GCNL_RangedFlashlight_C_GetToggledAndWeaponFromParams::CallFunc_BreakGameplayCueParameters_Instigator' has a wrong offset!");
static_assert(offsetof(GCNL_RangedFlashlight_C_GetToggledAndWeaponFromParams, CallFunc_BreakGameplayCueParameters_EffectCauser) == 0x000150, "Member 'GCNL_RangedFlashlight_C_GetToggledAndWeaponFromParams::CallFunc_BreakGameplayCueParameters_EffectCauser' has a wrong offset!");
static_assert(offsetof(GCNL_RangedFlashlight_C_GetToggledAndWeaponFromParams, CallFunc_BreakGameplayCueParameters_SourceObject) == 0x000158, "Member 'GCNL_RangedFlashlight_C_GetToggledAndWeaponFromParams::CallFunc_BreakGameplayCueParameters_SourceObject' has a wrong offset!");
static_assert(offsetof(GCNL_RangedFlashlight_C_GetToggledAndWeaponFromParams, CallFunc_BreakGameplayCueParameters_PhysicalMaterial) == 0x000160, "Member 'GCNL_RangedFlashlight_C_GetToggledAndWeaponFromParams::CallFunc_BreakGameplayCueParameters_PhysicalMaterial' has a wrong offset!");
static_assert(offsetof(GCNL_RangedFlashlight_C_GetToggledAndWeaponFromParams, CallFunc_BreakGameplayCueParameters_GameplayEffectLevel) == 0x000168, "Member 'GCNL_RangedFlashlight_C_GetToggledAndWeaponFromParams::CallFunc_BreakGameplayCueParameters_GameplayEffectLevel' has a wrong offset!");
static_assert(offsetof(GCNL_RangedFlashlight_C_GetToggledAndWeaponFromParams, CallFunc_BreakGameplayCueParameters_AbilityLevel) == 0x00016C, "Member 'GCNL_RangedFlashlight_C_GetToggledAndWeaponFromParams::CallFunc_BreakGameplayCueParameters_AbilityLevel' has a wrong offset!");
static_assert(offsetof(GCNL_RangedFlashlight_C_GetToggledAndWeaponFromParams, CallFunc_BreakGameplayCueParameters_TargetAttachComponent) == 0x000170, "Member 'GCNL_RangedFlashlight_C_GetToggledAndWeaponFromParams::CallFunc_BreakGameplayCueParameters_TargetAttachComponent' has a wrong offset!");
static_assert(offsetof(GCNL_RangedFlashlight_C_GetToggledAndWeaponFromParams, K2Node_DynamicCast_AsFort_Weapon) == 0x000178, "Member 'GCNL_RangedFlashlight_C_GetToggledAndWeaponFromParams::K2Node_DynamicCast_AsFort_Weapon' has a wrong offset!");
static_assert(offsetof(GCNL_RangedFlashlight_C_GetToggledAndWeaponFromParams, K2Node_DynamicCast_bSuccess) == 0x000180, "Member 'GCNL_RangedFlashlight_C_GetToggledAndWeaponFromParams::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GCNL_RangedFlashlight_C_GetToggledAndWeaponFromParams, CallFunc_NearlyEqual_FloatFloat_ReturnValue) == 0x000181, "Member 'GCNL_RangedFlashlight_C_GetToggledAndWeaponFromParams::CallFunc_NearlyEqual_FloatFloat_ReturnValue' has a wrong offset!");

// Function GCNL_RangedFlashlight.GCNL_RangedFlashlight_C.HandleAttachmentsAndSound
// 0x0038 (0x0038 - 0x0000)
struct GCNL_RangedFlashlight_C_HandleAttachmentsAndSound final
{
public:
	class AB_Ranged_Flashlight_C*                 Flashlight;                                        // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AB_Ranged_Flashlight_C*                 LocalFlashlight;                                   // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable;                              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_1;                            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AB_Ranged_Flashlight_C*                 K2Node_DynamicCast_AsB_Ranged_Flashlight;          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A[0x6];                                       // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             K2Node_Select_Default;                             // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GCNL_RangedFlashlight_C_HandleAttachmentsAndSound) == 0x000008, "Wrong alignment on GCNL_RangedFlashlight_C_HandleAttachmentsAndSound");
static_assert(sizeof(GCNL_RangedFlashlight_C_HandleAttachmentsAndSound) == 0x000038, "Wrong size on GCNL_RangedFlashlight_C_HandleAttachmentsAndSound");
static_assert(offsetof(GCNL_RangedFlashlight_C_HandleAttachmentsAndSound, Flashlight) == 0x000000, "Member 'GCNL_RangedFlashlight_C_HandleAttachmentsAndSound::Flashlight' has a wrong offset!");
static_assert(offsetof(GCNL_RangedFlashlight_C_HandleAttachmentsAndSound, LocalFlashlight) == 0x000008, "Member 'GCNL_RangedFlashlight_C_HandleAttachmentsAndSound::LocalFlashlight' has a wrong offset!");
static_assert(offsetof(GCNL_RangedFlashlight_C_HandleAttachmentsAndSound, Temp_object_Variable) == 0x000010, "Member 'GCNL_RangedFlashlight_C_HandleAttachmentsAndSound::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(GCNL_RangedFlashlight_C_HandleAttachmentsAndSound, Temp_object_Variable_1) == 0x000018, "Member 'GCNL_RangedFlashlight_C_HandleAttachmentsAndSound::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(GCNL_RangedFlashlight_C_HandleAttachmentsAndSound, K2Node_DynamicCast_AsB_Ranged_Flashlight) == 0x000020, "Member 'GCNL_RangedFlashlight_C_HandleAttachmentsAndSound::K2Node_DynamicCast_AsB_Ranged_Flashlight' has a wrong offset!");
static_assert(offsetof(GCNL_RangedFlashlight_C_HandleAttachmentsAndSound, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'GCNL_RangedFlashlight_C_HandleAttachmentsAndSound::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GCNL_RangedFlashlight_C_HandleAttachmentsAndSound, Temp_bool_Variable) == 0x000029, "Member 'GCNL_RangedFlashlight_C_HandleAttachmentsAndSound::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(GCNL_RangedFlashlight_C_HandleAttachmentsAndSound, K2Node_Select_Default) == 0x000030, "Member 'GCNL_RangedFlashlight_C_HandleAttachmentsAndSound::K2Node_Select_Default' has a wrong offset!");

// Function GCNL_RangedFlashlight.GCNL_RangedFlashlight_C.SetWeaponMeshEmissive
// 0x0038 (0x0038 - 0x0000)
struct GCNL_RangedFlashlight_C_SetWeaponMeshEmissive final
{
public:
	class AFortWeapon*                            Flashlight;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable;                              // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A[0x2];                                       // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_Select_Default;                             // 0x001C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_LinearColorToVector_ReturnValue;     // 0x002C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GCNL_RangedFlashlight_C_SetWeaponMeshEmissive) == 0x000008, "Wrong alignment on GCNL_RangedFlashlight_C_SetWeaponMeshEmissive");
static_assert(sizeof(GCNL_RangedFlashlight_C_SetWeaponMeshEmissive) == 0x000038, "Wrong size on GCNL_RangedFlashlight_C_SetWeaponMeshEmissive");
static_assert(offsetof(GCNL_RangedFlashlight_C_SetWeaponMeshEmissive, Flashlight) == 0x000000, "Member 'GCNL_RangedFlashlight_C_SetWeaponMeshEmissive::Flashlight' has a wrong offset!");
static_assert(offsetof(GCNL_RangedFlashlight_C_SetWeaponMeshEmissive, Temp_struct_Variable) == 0x000008, "Member 'GCNL_RangedFlashlight_C_SetWeaponMeshEmissive::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(GCNL_RangedFlashlight_C_SetWeaponMeshEmissive, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'GCNL_RangedFlashlight_C_SetWeaponMeshEmissive::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCNL_RangedFlashlight_C_SetWeaponMeshEmissive, Temp_bool_Variable) == 0x000019, "Member 'GCNL_RangedFlashlight_C_SetWeaponMeshEmissive::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(GCNL_RangedFlashlight_C_SetWeaponMeshEmissive, K2Node_Select_Default) == 0x00001C, "Member 'GCNL_RangedFlashlight_C_SetWeaponMeshEmissive::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(GCNL_RangedFlashlight_C_SetWeaponMeshEmissive, CallFunc_Conv_LinearColorToVector_ReturnValue) == 0x00002C, "Member 'GCNL_RangedFlashlight_C_SetWeaponMeshEmissive::CallFunc_Conv_LinearColorToVector_ReturnValue' has a wrong offset!");

// Function GCNL_RangedFlashlight.GCNL_RangedFlashlight_C.ToggleFlash
// 0x000C (0x000C - 0x0000)
struct GCNL_RangedFlashlight_C_ToggleFlash final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GCNL_RangedFlashlight_C_ToggleFlash) == 0x000004, "Wrong alignment on GCNL_RangedFlashlight_C_ToggleFlash");
static_assert(sizeof(GCNL_RangedFlashlight_C_ToggleFlash) == 0x00000C, "Wrong size on GCNL_RangedFlashlight_C_ToggleFlash");
static_assert(offsetof(GCNL_RangedFlashlight_C_ToggleFlash, ReturnValue) == 0x000000, "Member 'GCNL_RangedFlashlight_C_ToggleFlash::ReturnValue' has a wrong offset!");
static_assert(offsetof(GCNL_RangedFlashlight_C_ToggleFlash, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000004, "Member 'GCNL_RangedFlashlight_C_ToggleFlash::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCNL_RangedFlashlight_C_ToggleFlash, CallFunc_Less_FloatFloat_ReturnValue) == 0x000008, "Member 'GCNL_RangedFlashlight_C_ToggleFlash::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");

// Function GCNL_RangedFlashlight.GCNL_RangedFlashlight_C.CheckToPulseFlash
// 0x0028 (0x0028 - 0x0000)
struct GCNL_RangedFlashlight_C_CheckToPulseFlash final
{
public:
	TDelegate<void()>                             Delegate;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor)
	float                                         PulseTime;                                         // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0018(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ToggleFlash_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GCNL_RangedFlashlight_C_CheckToPulseFlash) == 0x000008, "Wrong alignment on GCNL_RangedFlashlight_C_CheckToPulseFlash");
static_assert(sizeof(GCNL_RangedFlashlight_C_CheckToPulseFlash) == 0x000028, "Wrong size on GCNL_RangedFlashlight_C_CheckToPulseFlash");
static_assert(offsetof(GCNL_RangedFlashlight_C_CheckToPulseFlash, Delegate) == 0x000000, "Member 'GCNL_RangedFlashlight_C_CheckToPulseFlash::Delegate' has a wrong offset!");
static_assert(offsetof(GCNL_RangedFlashlight_C_CheckToPulseFlash, PulseTime) == 0x000010, "Member 'GCNL_RangedFlashlight_C_CheckToPulseFlash::PulseTime' has a wrong offset!");
static_assert(offsetof(GCNL_RangedFlashlight_C_CheckToPulseFlash, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000018, "Member 'GCNL_RangedFlashlight_C_CheckToPulseFlash::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCNL_RangedFlashlight_C_CheckToPulseFlash, CallFunc_ToggleFlash_ReturnValue) == 0x000020, "Member 'GCNL_RangedFlashlight_C_CheckToPulseFlash::CallFunc_ToggleFlash_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCNL_RangedFlashlight_C_CheckToPulseFlash, CallFunc_Not_PreBool_ReturnValue) == 0x000021, "Member 'GCNL_RangedFlashlight_C_CheckToPulseFlash::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCNL_RangedFlashlight_C_CheckToPulseFlash, CallFunc_BooleanAND_ReturnValue) == 0x000022, "Member 'GCNL_RangedFlashlight_C_CheckToPulseFlash::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

}

