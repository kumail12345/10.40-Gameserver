#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_Prj_Athena_BadgerBangs

#include "Basic.hpp"

#include "GameplayAbilities_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "Engine_structs.hpp"
#include "B_Prj_Athena_Grenade_Base_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass B_Prj_Athena_BadgerBangs.B_Prj_Athena_BadgerBangs_C
// 0x0318 (0x0B28 - 0x0810)
class AB_Prj_Athena_BadgerBangs_C final : public AB_Prj_Athena_Grenade_Base_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_B_Prj_Athena_BadgerBangs_C;         // 0x0810(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UParticleSystemComponent*               P_BlackMonday_BatarangSpin_Mesh;                   // 0x0818(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       ProximityDetection;                                // 0x0820(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        Ashton_Chicago_Primary_Loop_Cue;                   // 0x0828(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UArrowComponent*                        Arrow1;                                            // 0x0830(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               P_Ashton_Chicago_ShieldTrail;                      // 0x0838(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UArrowComponent*                        Arrow;                                             // 0x0840(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 SkeletalMesh;                                      // 0x0848(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         Timeline_0_NewTrack_0_62A04B144D127E4EED9D49A4E5DF71D5; // 0x0850(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Timeline_0__Direction_62A04B144D127E4EED9D49A4E5DF71D5; // 0x0854(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_855[0x3];                                      // 0x0855(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Timeline_0;                                        // 0x0858(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerPawn*                        OwningPlayerPawn;                                  // 0x0860(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bTargetAcquired;                                   // 0x0868(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor)
	uint8                                         Pad_869[0x7];                                      // 0x0869(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 ShieldTarget;                                      // 0x0870(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         ActorsToIgnoreForTargeting;                        // 0x0878(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance)
	TArray<class AFortPlayerPawn*>                PawnsToTravelTo;                                   // 0x0888(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance)
	struct FLinearColor                           FX_TrailEmisColor;                                 // 0x0898(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ProjectileHitLoc;                                  // 0x08A8(0x000C)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bDebug;                                            // 0x08B4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8B5[0x3];                                      // 0x08B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 HitActor;                                          // 0x08B8(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ProjectileHitNormal;                               // 0x08C0(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CatchEventTag;                                     // 0x08CC(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8D4[0x4];                                      // 0x08D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayEventData                     CatchEventPayload;                                 // 0x08D8(0x00B0)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FTimerHandle                           ProjectileRotationTimer;                           // 0x0988(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  ChangeEquipmentTag;                                // 0x0990(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	class AActor*                                 HomingTarget;                                      // 0x09B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TargetHomingOffset;                                // 0x09B8(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9C4[0x4];                                      // 0x09C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             HitPlayerSoundCue;                                 // 0x09C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             HitEnvSoundCue;                                    // 0x09D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FScalableFloat                         DataHomingRectHeightandWidth;                      // 0x09D8(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         DataHomingRange;                                   // 0x09F8(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	class USoundBase*                             Cue_CloseSound;                                    // 0x0A18(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Cue_DistantSound;                                  // 0x0A20(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerPawn*                        HitPlayerNotify;                                   // 0x0A28(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Hits;                                              // 0x0A30(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A34[0x4];                                      // 0x0A34(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           ReturnTimer;                                       // 0x0A38(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             LastHit;                                           // 0x0A40(0x0088)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         Prj_InitialRotation;                               // 0x0AC8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Prj_InitialRotation_Speed;                         // 0x0ACC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LastVelocity;                                      // 0x0AD0(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               LastRotation;                                      // 0x0ADC(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FGameplayTag                           CameraShakeGC;                                     // 0x0AE8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TMulticastInlineDelegate<void()>              ImpactNormalDispatcher;                            // 0x0AF0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          IsDead;                                            // 0x0B00(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          HasHitWater;                                       // 0x0B01(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B02[0x6];                                      // 0x0B02(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FScalableFloat                         ProxTriggerRadius;                                 // 0x0B08(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void ExecuteUbergraph_B_Prj_Athena_BadgerBangs(int32 EntryPoint);
	void Explode(class AActor* DestroyedActor);
	void StopHoming();
	void BndEvt__ProximityDetection_K2Node_ComponentBoundEvent_4_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void BndEvt__CapsuleComponent_K2Node_ComponentBoundEvent_3_ComponentHitSignature__DelegateSignature(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
	void BndEvt__CapsuleComponent_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void Prj_InitialRotator_Anticlockwise();
	void Prj_InitialRotator_Clockwise();
	void SpawnBGA(const struct FHitResult& HitResult);
	void OnHitSomething(const struct FHitResult& InputPin);
	void HitWorld(class USoundBase* Sound, const struct FVector& Location);
	void HitExplosionTrigger(class AActor* HitActor_0);
	void BndEvt__ProjectileMovementComponent_K2Node_ComponentBoundEvent_2_ActorComponentActivatedSignature__DelegateSignature(class UActorComponent* Component, bool bReset);
	void RotatePrj();
	void ReceiveBeginPlay();
	void Timeline_0__UpdateFunc();
	void Timeline_0__FinishedFunc();
	void OnRep_PlayerLocation();
	void OnRep_Target();
	void OnRep_HitLocation();
	void PrintActorsFromArray(TArray<class AActor*>& ActorArray);
	void OnRep_bHit();
	void SetHomingVars(class AActor* HomingTarget_0);
	void PlayHitPawnSounds(class AActor* HitActor_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"B_Prj_Athena_BadgerBangs_C">();
	}
	static class AB_Prj_Athena_BadgerBangs_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AB_Prj_Athena_BadgerBangs_C>();
	}
};
static_assert(alignof(AB_Prj_Athena_BadgerBangs_C) == 0x000008, "Wrong alignment on AB_Prj_Athena_BadgerBangs_C");
static_assert(sizeof(AB_Prj_Athena_BadgerBangs_C) == 0x000B28, "Wrong size on AB_Prj_Athena_BadgerBangs_C");
static_assert(offsetof(AB_Prj_Athena_BadgerBangs_C, UberGraphFrame_B_Prj_Athena_BadgerBangs_C) == 0x000810, "Member 'AB_Prj_Athena_BadgerBangs_C::UberGraphFrame_B_Prj_Athena_BadgerBangs_C' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_BadgerBangs_C, P_BlackMonday_BatarangSpin_Mesh) == 0x000818, "Member 'AB_Prj_Athena_BadgerBangs_C::P_BlackMonday_BatarangSpin_Mesh' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_BadgerBangs_C, ProximityDetection) == 0x000820, "Member 'AB_Prj_Athena_BadgerBangs_C::ProximityDetection' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_BadgerBangs_C, Ashton_Chicago_Primary_Loop_Cue) == 0x000828, "Member 'AB_Prj_Athena_BadgerBangs_C::Ashton_Chicago_Primary_Loop_Cue' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_BadgerBangs_C, Arrow1) == 0x000830, "Member 'AB_Prj_Athena_BadgerBangs_C::Arrow1' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_BadgerBangs_C, P_Ashton_Chicago_ShieldTrail) == 0x000838, "Member 'AB_Prj_Athena_BadgerBangs_C::P_Ashton_Chicago_ShieldTrail' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_BadgerBangs_C, Arrow) == 0x000840, "Member 'AB_Prj_Athena_BadgerBangs_C::Arrow' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_BadgerBangs_C, SkeletalMesh) == 0x000848, "Member 'AB_Prj_Athena_BadgerBangs_C::SkeletalMesh' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_BadgerBangs_C, Timeline_0_NewTrack_0_62A04B144D127E4EED9D49A4E5DF71D5) == 0x000850, "Member 'AB_Prj_Athena_BadgerBangs_C::Timeline_0_NewTrack_0_62A04B144D127E4EED9D49A4E5DF71D5' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_BadgerBangs_C, Timeline_0__Direction_62A04B144D127E4EED9D49A4E5DF71D5) == 0x000854, "Member 'AB_Prj_Athena_BadgerBangs_C::Timeline_0__Direction_62A04B144D127E4EED9D49A4E5DF71D5' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_BadgerBangs_C, Timeline_0) == 0x000858, "Member 'AB_Prj_Athena_BadgerBangs_C::Timeline_0' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_BadgerBangs_C, OwningPlayerPawn) == 0x000860, "Member 'AB_Prj_Athena_BadgerBangs_C::OwningPlayerPawn' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_BadgerBangs_C, bTargetAcquired) == 0x000868, "Member 'AB_Prj_Athena_BadgerBangs_C::bTargetAcquired' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_BadgerBangs_C, ShieldTarget) == 0x000870, "Member 'AB_Prj_Athena_BadgerBangs_C::ShieldTarget' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_BadgerBangs_C, ActorsToIgnoreForTargeting) == 0x000878, "Member 'AB_Prj_Athena_BadgerBangs_C::ActorsToIgnoreForTargeting' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_BadgerBangs_C, PawnsToTravelTo) == 0x000888, "Member 'AB_Prj_Athena_BadgerBangs_C::PawnsToTravelTo' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_BadgerBangs_C, FX_TrailEmisColor) == 0x000898, "Member 'AB_Prj_Athena_BadgerBangs_C::FX_TrailEmisColor' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_BadgerBangs_C, ProjectileHitLoc) == 0x0008A8, "Member 'AB_Prj_Athena_BadgerBangs_C::ProjectileHitLoc' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_BadgerBangs_C, bDebug) == 0x0008B4, "Member 'AB_Prj_Athena_BadgerBangs_C::bDebug' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_BadgerBangs_C, HitActor) == 0x0008B8, "Member 'AB_Prj_Athena_BadgerBangs_C::HitActor' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_BadgerBangs_C, ProjectileHitNormal) == 0x0008C0, "Member 'AB_Prj_Athena_BadgerBangs_C::ProjectileHitNormal' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_BadgerBangs_C, CatchEventTag) == 0x0008CC, "Member 'AB_Prj_Athena_BadgerBangs_C::CatchEventTag' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_BadgerBangs_C, CatchEventPayload) == 0x0008D8, "Member 'AB_Prj_Athena_BadgerBangs_C::CatchEventPayload' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_BadgerBangs_C, ProjectileRotationTimer) == 0x000988, "Member 'AB_Prj_Athena_BadgerBangs_C::ProjectileRotationTimer' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_BadgerBangs_C, ChangeEquipmentTag) == 0x000990, "Member 'AB_Prj_Athena_BadgerBangs_C::ChangeEquipmentTag' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_BadgerBangs_C, HomingTarget) == 0x0009B0, "Member 'AB_Prj_Athena_BadgerBangs_C::HomingTarget' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_BadgerBangs_C, TargetHomingOffset) == 0x0009B8, "Member 'AB_Prj_Athena_BadgerBangs_C::TargetHomingOffset' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_BadgerBangs_C, HitPlayerSoundCue) == 0x0009C8, "Member 'AB_Prj_Athena_BadgerBangs_C::HitPlayerSoundCue' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_BadgerBangs_C, HitEnvSoundCue) == 0x0009D0, "Member 'AB_Prj_Athena_BadgerBangs_C::HitEnvSoundCue' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_BadgerBangs_C, DataHomingRectHeightandWidth) == 0x0009D8, "Member 'AB_Prj_Athena_BadgerBangs_C::DataHomingRectHeightandWidth' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_BadgerBangs_C, DataHomingRange) == 0x0009F8, "Member 'AB_Prj_Athena_BadgerBangs_C::DataHomingRange' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_BadgerBangs_C, Cue_CloseSound) == 0x000A18, "Member 'AB_Prj_Athena_BadgerBangs_C::Cue_CloseSound' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_BadgerBangs_C, Cue_DistantSound) == 0x000A20, "Member 'AB_Prj_Athena_BadgerBangs_C::Cue_DistantSound' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_BadgerBangs_C, HitPlayerNotify) == 0x000A28, "Member 'AB_Prj_Athena_BadgerBangs_C::HitPlayerNotify' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_BadgerBangs_C, Hits) == 0x000A30, "Member 'AB_Prj_Athena_BadgerBangs_C::Hits' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_BadgerBangs_C, ReturnTimer) == 0x000A38, "Member 'AB_Prj_Athena_BadgerBangs_C::ReturnTimer' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_BadgerBangs_C, LastHit) == 0x000A40, "Member 'AB_Prj_Athena_BadgerBangs_C::LastHit' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_BadgerBangs_C, Prj_InitialRotation) == 0x000AC8, "Member 'AB_Prj_Athena_BadgerBangs_C::Prj_InitialRotation' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_BadgerBangs_C, Prj_InitialRotation_Speed) == 0x000ACC, "Member 'AB_Prj_Athena_BadgerBangs_C::Prj_InitialRotation_Speed' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_BadgerBangs_C, LastVelocity) == 0x000AD0, "Member 'AB_Prj_Athena_BadgerBangs_C::LastVelocity' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_BadgerBangs_C, LastRotation) == 0x000ADC, "Member 'AB_Prj_Athena_BadgerBangs_C::LastRotation' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_BadgerBangs_C, CameraShakeGC) == 0x000AE8, "Member 'AB_Prj_Athena_BadgerBangs_C::CameraShakeGC' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_BadgerBangs_C, ImpactNormalDispatcher) == 0x000AF0, "Member 'AB_Prj_Athena_BadgerBangs_C::ImpactNormalDispatcher' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_BadgerBangs_C, IsDead) == 0x000B00, "Member 'AB_Prj_Athena_BadgerBangs_C::IsDead' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_BadgerBangs_C, HasHitWater) == 0x000B01, "Member 'AB_Prj_Athena_BadgerBangs_C::HasHitWater' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_BadgerBangs_C, ProxTriggerRadius) == 0x000B08, "Member 'AB_Prj_Athena_BadgerBangs_C::ProxTriggerRadius' has a wrong offset!");

}

