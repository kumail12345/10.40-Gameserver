#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_Ranged_Dual_Generic_MountedTurret

#include "Basic.hpp"

#include "En_ShellTypes_01_structs.hpp"
#include "Engine_structs.hpp"
#include "E_MountedTurret_FireStates_structs.hpp"
#include "FortniteGame_structs.hpp"
#include "FortniteGame_classes.hpp"
#include "CoreUObject_structs.hpp"
#include "GameplayTags_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass B_Ranged_Dual_Generic_MountedTurret.B_Ranged_Dual_Generic_MountedTurret_C
// 0x01A0 (0x0EE8 - 0x0D48)
class AB_Ranged_Dual_Generic_MountedTurret_C : public AFortWeaponRangedDualMountedTurret
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0D48(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UParticleSystemComponent*               LeftReload_Empty_;                                 // 0x0D50(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               LeftShells_Empty_;                                 // 0x0D58(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               LeftMuzzle_Empty_;                                 // 0x0D60(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               Reload_Empty_;                                     // 0x0D68(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               Shells_empty_;                                     // 0x0D70(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   ScopeMesh1P;                                       // 0x0D78(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               Muzzle_Empty_;                                     // 0x0D80(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        MuzzleParticleSystem;                              // 0x0D88(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        WeaponDurabilityDestroyEffect;                     // 0x0D90(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        WeaponDurabilityDestroyEffectIcon;                 // 0x0D98(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UseDestroyEffect;                                  // 0x0DA0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Use_Reload_Particles;                              // 0x0DA1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DA2[0x6];                                      // 0x0DA2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystem*                        Reload_ParticleSystem;                             // 0x0DA8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LastPlayFXTime;                                    // 0x0DB0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MinPlayFXTime;                                     // 0x0DB4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UseShellsOnFire_;                                  // 0x0DB8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          UseShellsOnReload_;                                // 0x0DB9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          UseShellsOnPump_;                                  // 0x0DBA(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DBB[0x5];                                      // 0x0DBB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystem*                        ShellsParticleSystemTemplate;                      // 0x0DC0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   ReloadSocketName;                                  // 0x0DC8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AFortAIPawn*>                    Array_Of_Active_Enemy_AI;                          // 0x0DD0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance)
	bool                                          Scope___Render_Enemies_To_Custom_Depth_Buffer;     // 0x0DE0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	uint8                                         Pad_DE1[0x3];                                      // 0x0DE1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Shells_Socket_Name;                                // 0x0DE4(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	En_ShellTypes_01                              ShellTypeSelect;                                   // 0x0DEC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DED[0x3];                                      // 0x0DED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Shells_Spawn_Rate_Scale;                           // 0x0DF0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ShellsRotationRate;                                // 0x0DF4(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Shells_Velocity;                                   // 0x0E00(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Shells_Gravity;                                    // 0x0E0C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Shells_Lifetime;                                   // 0x0E18(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Shells_Size;                                       // 0x0E1C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Shells_Time_Dilation;                              // 0x0E28(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Target_Scope_Vignette_Blur_Screen_Percentage;      // 0x0E2C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Scope_Camera_Offset_Amount;                        // 0x0E30(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          SmallShells;                                       // 0x0E34(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          MediumShells;                                      // 0x0E35(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          LargeShells;                                       // 0x0E36(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          ShotgunShells;                                     // 0x0E37(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          EnergyShells;                                      // 0x0E38(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E39[0x3];                                      // 0x0E39(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Inherit_Parent_Velocity;                           // 0x0E3C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Cylindrical_Radius;                                // 0x0E40(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Cylindrical_Height;                                // 0x0E44(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DebugShellsSocket_;                                // 0x0E48(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Use_2_Post_Processes_For_the_Scope;                // 0x0E49(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	uint8                                         Pad_E4A[0x6];                                      // 0x0E4A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             Sound_ScopeZoomIn;                                 // 0x0E50(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Sound_ScopeZoomOut;                                // 0x0E58(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               Alteration_Ambient_PS;                             // 0x0E60(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  ReticleHUDElementTags;                             // 0x0E68(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          Is_Wind_Enabled;                                   // 0x0E88(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E89[0x7];                                      // 0x0E89(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystem*                        MuzzleWindParticleSystem;                          // 0x0E90(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        MuzzleParticleSystem1P;                            // 0x0E98(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPostProcessComponent*                  DownScopePostProcessSpawned;                       // 0x0EA0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPostProcessComponent*                  DownScopePostProcessSpawned2;                      // 0x0EA8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               MuzzleWindParticleSpawned;                         // 0x0EB0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDualWeaponHand                               LastHandFired;                                     // 0x0EB8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EB9[0x7];                                      // 0x0EB9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerPawn*                        PlayerPawn;                                        // 0x0EC0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           StartHeatingTimer;                                 // 0x0EC8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           StartCoolingTimer;                                 // 0x0ED0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	E_MountedTurret_FireStates                    FireState;                                         // 0x0ED8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_ED9[0x7];                                      // 0x0ED9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             Sound_OnFailToFireWhenOverheated;                  // 0x0EE0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_B_Ranged_Dual_Generic_MountedTurret(int32 EntryPoint);
	void OnLocalFailedToFireWhenOverheated();
	void OnFinishedCooling();
	void OnStartCooling();
	void OnStartHeating();
	void OnStartOverheated();
	void BindOnHandFired();
	void HandFired(EDualWeaponHand Hand, bool bPersistantFire);
	void ShowWeapon();
	void HideWeapon();
	void ShowWeaponMesh();
	void HideWeaponMesh();
	void OnWeaponVisibilityChanged(bool bVisible);
	void ReceiveBeginPlay();
	void SetWeaponPierceThrough_ClientRep(bool Enable, int32 TargetLimit);
	void SetWeaponPierceThrough(bool Enable, int32 TargetLimit);
	void OnInitCosmeticAlterations(const struct FFortCosmeticModification& CosmeticMod);
	void OnInitAlteration(class UFortAlterationItemDefinition* NewAlteration);
	void OnWeaponAttached();
	void Update_Enemy_Custom_Depths(bool Enable_Or_Disable, int32 StencilBufferValue);
	void K2_OnUnEquip();
	void OnSetTargeting(bool bNewIsTargeting);
	void OnPlayReloadFX(EFortReloadFXState ReloadStage);
	void OnStopWeaponFireFX();
	void OnPlayWeaponFireFX(bool bPersistentFire, bool bSecondaryFire);
	void OnLoaded_1E63D17A42E49E043370B58CD8F301C5(class UObject* Loaded);
	void OnLoaded_BCE7AA6D424444D979EECCB29BA62459(class UObject* Loaded);
	void OnLoaded_8E55310B48630E205569E8A245229E05(class UObject* Loaded);
	void OnLoaded_A62EBF3C40D050102770839C33BDCD2B(class UObject* Loaded);
	void UserConstructionScript();
	void AddRandomScale(bool Offhand);
	void SetWpnRarity();
	void Muzzle_Flash_FX(bool Persistent_Fire, bool Offhand);
	void Muzzle_Play_Reload_FX(EFortReloadFXState Selection);
	void UpdateShellEmittersFX(class UParticleSystemComponent* PS);
	void SetupShellFX();
	void DeactivateShellsFX();
	void ActivateShellsFX(bool Bool, bool Offhand);
	void ActivateReloadSmokeFX();
	void DeactivateReloadSmokeFX();
	void DeactivateMuzzleFX();
	void ActivateOrDeactivateWindParticle(bool bNewActive);
	void HideReticle();
	void ShowReticle();
	void SetActiveAlterationIdleParticles(bool Active, bool Reset);
	void SetPostProcessParams(float InputPin);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"B_Ranged_Dual_Generic_MountedTurret_C">();
	}
	static class AB_Ranged_Dual_Generic_MountedTurret_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AB_Ranged_Dual_Generic_MountedTurret_C>();
	}
};
static_assert(alignof(AB_Ranged_Dual_Generic_MountedTurret_C) == 0x000008, "Wrong alignment on AB_Ranged_Dual_Generic_MountedTurret_C");
static_assert(sizeof(AB_Ranged_Dual_Generic_MountedTurret_C) == 0x000EE8, "Wrong size on AB_Ranged_Dual_Generic_MountedTurret_C");
static_assert(offsetof(AB_Ranged_Dual_Generic_MountedTurret_C, UberGraphFrame) == 0x000D48, "Member 'AB_Ranged_Dual_Generic_MountedTurret_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AB_Ranged_Dual_Generic_MountedTurret_C, LeftReload_Empty_) == 0x000D50, "Member 'AB_Ranged_Dual_Generic_MountedTurret_C::LeftReload_Empty_' has a wrong offset!");
static_assert(offsetof(AB_Ranged_Dual_Generic_MountedTurret_C, LeftShells_Empty_) == 0x000D58, "Member 'AB_Ranged_Dual_Generic_MountedTurret_C::LeftShells_Empty_' has a wrong offset!");
static_assert(offsetof(AB_Ranged_Dual_Generic_MountedTurret_C, LeftMuzzle_Empty_) == 0x000D60, "Member 'AB_Ranged_Dual_Generic_MountedTurret_C::LeftMuzzle_Empty_' has a wrong offset!");
static_assert(offsetof(AB_Ranged_Dual_Generic_MountedTurret_C, Reload_Empty_) == 0x000D68, "Member 'AB_Ranged_Dual_Generic_MountedTurret_C::Reload_Empty_' has a wrong offset!");
static_assert(offsetof(AB_Ranged_Dual_Generic_MountedTurret_C, Shells_empty_) == 0x000D70, "Member 'AB_Ranged_Dual_Generic_MountedTurret_C::Shells_empty_' has a wrong offset!");
static_assert(offsetof(AB_Ranged_Dual_Generic_MountedTurret_C, ScopeMesh1P) == 0x000D78, "Member 'AB_Ranged_Dual_Generic_MountedTurret_C::ScopeMesh1P' has a wrong offset!");
static_assert(offsetof(AB_Ranged_Dual_Generic_MountedTurret_C, Muzzle_Empty_) == 0x000D80, "Member 'AB_Ranged_Dual_Generic_MountedTurret_C::Muzzle_Empty_' has a wrong offset!");
static_assert(offsetof(AB_Ranged_Dual_Generic_MountedTurret_C, MuzzleParticleSystem) == 0x000D88, "Member 'AB_Ranged_Dual_Generic_MountedTurret_C::MuzzleParticleSystem' has a wrong offset!");
static_assert(offsetof(AB_Ranged_Dual_Generic_MountedTurret_C, WeaponDurabilityDestroyEffect) == 0x000D90, "Member 'AB_Ranged_Dual_Generic_MountedTurret_C::WeaponDurabilityDestroyEffect' has a wrong offset!");
static_assert(offsetof(AB_Ranged_Dual_Generic_MountedTurret_C, WeaponDurabilityDestroyEffectIcon) == 0x000D98, "Member 'AB_Ranged_Dual_Generic_MountedTurret_C::WeaponDurabilityDestroyEffectIcon' has a wrong offset!");
static_assert(offsetof(AB_Ranged_Dual_Generic_MountedTurret_C, UseDestroyEffect) == 0x000DA0, "Member 'AB_Ranged_Dual_Generic_MountedTurret_C::UseDestroyEffect' has a wrong offset!");
static_assert(offsetof(AB_Ranged_Dual_Generic_MountedTurret_C, Use_Reload_Particles) == 0x000DA1, "Member 'AB_Ranged_Dual_Generic_MountedTurret_C::Use_Reload_Particles' has a wrong offset!");
static_assert(offsetof(AB_Ranged_Dual_Generic_MountedTurret_C, Reload_ParticleSystem) == 0x000DA8, "Member 'AB_Ranged_Dual_Generic_MountedTurret_C::Reload_ParticleSystem' has a wrong offset!");
static_assert(offsetof(AB_Ranged_Dual_Generic_MountedTurret_C, LastPlayFXTime) == 0x000DB0, "Member 'AB_Ranged_Dual_Generic_MountedTurret_C::LastPlayFXTime' has a wrong offset!");
static_assert(offsetof(AB_Ranged_Dual_Generic_MountedTurret_C, MinPlayFXTime) == 0x000DB4, "Member 'AB_Ranged_Dual_Generic_MountedTurret_C::MinPlayFXTime' has a wrong offset!");
static_assert(offsetof(AB_Ranged_Dual_Generic_MountedTurret_C, UseShellsOnFire_) == 0x000DB8, "Member 'AB_Ranged_Dual_Generic_MountedTurret_C::UseShellsOnFire_' has a wrong offset!");
static_assert(offsetof(AB_Ranged_Dual_Generic_MountedTurret_C, UseShellsOnReload_) == 0x000DB9, "Member 'AB_Ranged_Dual_Generic_MountedTurret_C::UseShellsOnReload_' has a wrong offset!");
static_assert(offsetof(AB_Ranged_Dual_Generic_MountedTurret_C, UseShellsOnPump_) == 0x000DBA, "Member 'AB_Ranged_Dual_Generic_MountedTurret_C::UseShellsOnPump_' has a wrong offset!");
static_assert(offsetof(AB_Ranged_Dual_Generic_MountedTurret_C, ShellsParticleSystemTemplate) == 0x000DC0, "Member 'AB_Ranged_Dual_Generic_MountedTurret_C::ShellsParticleSystemTemplate' has a wrong offset!");
static_assert(offsetof(AB_Ranged_Dual_Generic_MountedTurret_C, ReloadSocketName) == 0x000DC8, "Member 'AB_Ranged_Dual_Generic_MountedTurret_C::ReloadSocketName' has a wrong offset!");
static_assert(offsetof(AB_Ranged_Dual_Generic_MountedTurret_C, Array_Of_Active_Enemy_AI) == 0x000DD0, "Member 'AB_Ranged_Dual_Generic_MountedTurret_C::Array_Of_Active_Enemy_AI' has a wrong offset!");
static_assert(offsetof(AB_Ranged_Dual_Generic_MountedTurret_C, Scope___Render_Enemies_To_Custom_Depth_Buffer) == 0x000DE0, "Member 'AB_Ranged_Dual_Generic_MountedTurret_C::Scope___Render_Enemies_To_Custom_Depth_Buffer' has a wrong offset!");
static_assert(offsetof(AB_Ranged_Dual_Generic_MountedTurret_C, Shells_Socket_Name) == 0x000DE4, "Member 'AB_Ranged_Dual_Generic_MountedTurret_C::Shells_Socket_Name' has a wrong offset!");
static_assert(offsetof(AB_Ranged_Dual_Generic_MountedTurret_C, ShellTypeSelect) == 0x000DEC, "Member 'AB_Ranged_Dual_Generic_MountedTurret_C::ShellTypeSelect' has a wrong offset!");
static_assert(offsetof(AB_Ranged_Dual_Generic_MountedTurret_C, Shells_Spawn_Rate_Scale) == 0x000DF0, "Member 'AB_Ranged_Dual_Generic_MountedTurret_C::Shells_Spawn_Rate_Scale' has a wrong offset!");
static_assert(offsetof(AB_Ranged_Dual_Generic_MountedTurret_C, ShellsRotationRate) == 0x000DF4, "Member 'AB_Ranged_Dual_Generic_MountedTurret_C::ShellsRotationRate' has a wrong offset!");
static_assert(offsetof(AB_Ranged_Dual_Generic_MountedTurret_C, Shells_Velocity) == 0x000E00, "Member 'AB_Ranged_Dual_Generic_MountedTurret_C::Shells_Velocity' has a wrong offset!");
static_assert(offsetof(AB_Ranged_Dual_Generic_MountedTurret_C, Shells_Gravity) == 0x000E0C, "Member 'AB_Ranged_Dual_Generic_MountedTurret_C::Shells_Gravity' has a wrong offset!");
static_assert(offsetof(AB_Ranged_Dual_Generic_MountedTurret_C, Shells_Lifetime) == 0x000E18, "Member 'AB_Ranged_Dual_Generic_MountedTurret_C::Shells_Lifetime' has a wrong offset!");
static_assert(offsetof(AB_Ranged_Dual_Generic_MountedTurret_C, Shells_Size) == 0x000E1C, "Member 'AB_Ranged_Dual_Generic_MountedTurret_C::Shells_Size' has a wrong offset!");
static_assert(offsetof(AB_Ranged_Dual_Generic_MountedTurret_C, Shells_Time_Dilation) == 0x000E28, "Member 'AB_Ranged_Dual_Generic_MountedTurret_C::Shells_Time_Dilation' has a wrong offset!");
static_assert(offsetof(AB_Ranged_Dual_Generic_MountedTurret_C, Target_Scope_Vignette_Blur_Screen_Percentage) == 0x000E2C, "Member 'AB_Ranged_Dual_Generic_MountedTurret_C::Target_Scope_Vignette_Blur_Screen_Percentage' has a wrong offset!");
static_assert(offsetof(AB_Ranged_Dual_Generic_MountedTurret_C, Scope_Camera_Offset_Amount) == 0x000E30, "Member 'AB_Ranged_Dual_Generic_MountedTurret_C::Scope_Camera_Offset_Amount' has a wrong offset!");
static_assert(offsetof(AB_Ranged_Dual_Generic_MountedTurret_C, SmallShells) == 0x000E34, "Member 'AB_Ranged_Dual_Generic_MountedTurret_C::SmallShells' has a wrong offset!");
static_assert(offsetof(AB_Ranged_Dual_Generic_MountedTurret_C, MediumShells) == 0x000E35, "Member 'AB_Ranged_Dual_Generic_MountedTurret_C::MediumShells' has a wrong offset!");
static_assert(offsetof(AB_Ranged_Dual_Generic_MountedTurret_C, LargeShells) == 0x000E36, "Member 'AB_Ranged_Dual_Generic_MountedTurret_C::LargeShells' has a wrong offset!");
static_assert(offsetof(AB_Ranged_Dual_Generic_MountedTurret_C, ShotgunShells) == 0x000E37, "Member 'AB_Ranged_Dual_Generic_MountedTurret_C::ShotgunShells' has a wrong offset!");
static_assert(offsetof(AB_Ranged_Dual_Generic_MountedTurret_C, EnergyShells) == 0x000E38, "Member 'AB_Ranged_Dual_Generic_MountedTurret_C::EnergyShells' has a wrong offset!");
static_assert(offsetof(AB_Ranged_Dual_Generic_MountedTurret_C, Inherit_Parent_Velocity) == 0x000E3C, "Member 'AB_Ranged_Dual_Generic_MountedTurret_C::Inherit_Parent_Velocity' has a wrong offset!");
static_assert(offsetof(AB_Ranged_Dual_Generic_MountedTurret_C, Cylindrical_Radius) == 0x000E40, "Member 'AB_Ranged_Dual_Generic_MountedTurret_C::Cylindrical_Radius' has a wrong offset!");
static_assert(offsetof(AB_Ranged_Dual_Generic_MountedTurret_C, Cylindrical_Height) == 0x000E44, "Member 'AB_Ranged_Dual_Generic_MountedTurret_C::Cylindrical_Height' has a wrong offset!");
static_assert(offsetof(AB_Ranged_Dual_Generic_MountedTurret_C, DebugShellsSocket_) == 0x000E48, "Member 'AB_Ranged_Dual_Generic_MountedTurret_C::DebugShellsSocket_' has a wrong offset!");
static_assert(offsetof(AB_Ranged_Dual_Generic_MountedTurret_C, Use_2_Post_Processes_For_the_Scope) == 0x000E49, "Member 'AB_Ranged_Dual_Generic_MountedTurret_C::Use_2_Post_Processes_For_the_Scope' has a wrong offset!");
static_assert(offsetof(AB_Ranged_Dual_Generic_MountedTurret_C, Sound_ScopeZoomIn) == 0x000E50, "Member 'AB_Ranged_Dual_Generic_MountedTurret_C::Sound_ScopeZoomIn' has a wrong offset!");
static_assert(offsetof(AB_Ranged_Dual_Generic_MountedTurret_C, Sound_ScopeZoomOut) == 0x000E58, "Member 'AB_Ranged_Dual_Generic_MountedTurret_C::Sound_ScopeZoomOut' has a wrong offset!");
static_assert(offsetof(AB_Ranged_Dual_Generic_MountedTurret_C, Alteration_Ambient_PS) == 0x000E60, "Member 'AB_Ranged_Dual_Generic_MountedTurret_C::Alteration_Ambient_PS' has a wrong offset!");
static_assert(offsetof(AB_Ranged_Dual_Generic_MountedTurret_C, ReticleHUDElementTags) == 0x000E68, "Member 'AB_Ranged_Dual_Generic_MountedTurret_C::ReticleHUDElementTags' has a wrong offset!");
static_assert(offsetof(AB_Ranged_Dual_Generic_MountedTurret_C, Is_Wind_Enabled) == 0x000E88, "Member 'AB_Ranged_Dual_Generic_MountedTurret_C::Is_Wind_Enabled' has a wrong offset!");
static_assert(offsetof(AB_Ranged_Dual_Generic_MountedTurret_C, MuzzleWindParticleSystem) == 0x000E90, "Member 'AB_Ranged_Dual_Generic_MountedTurret_C::MuzzleWindParticleSystem' has a wrong offset!");
static_assert(offsetof(AB_Ranged_Dual_Generic_MountedTurret_C, MuzzleParticleSystem1P) == 0x000E98, "Member 'AB_Ranged_Dual_Generic_MountedTurret_C::MuzzleParticleSystem1P' has a wrong offset!");
static_assert(offsetof(AB_Ranged_Dual_Generic_MountedTurret_C, DownScopePostProcessSpawned) == 0x000EA0, "Member 'AB_Ranged_Dual_Generic_MountedTurret_C::DownScopePostProcessSpawned' has a wrong offset!");
static_assert(offsetof(AB_Ranged_Dual_Generic_MountedTurret_C, DownScopePostProcessSpawned2) == 0x000EA8, "Member 'AB_Ranged_Dual_Generic_MountedTurret_C::DownScopePostProcessSpawned2' has a wrong offset!");
static_assert(offsetof(AB_Ranged_Dual_Generic_MountedTurret_C, MuzzleWindParticleSpawned) == 0x000EB0, "Member 'AB_Ranged_Dual_Generic_MountedTurret_C::MuzzleWindParticleSpawned' has a wrong offset!");
static_assert(offsetof(AB_Ranged_Dual_Generic_MountedTurret_C, LastHandFired) == 0x000EB8, "Member 'AB_Ranged_Dual_Generic_MountedTurret_C::LastHandFired' has a wrong offset!");
static_assert(offsetof(AB_Ranged_Dual_Generic_MountedTurret_C, PlayerPawn) == 0x000EC0, "Member 'AB_Ranged_Dual_Generic_MountedTurret_C::PlayerPawn' has a wrong offset!");
static_assert(offsetof(AB_Ranged_Dual_Generic_MountedTurret_C, StartHeatingTimer) == 0x000EC8, "Member 'AB_Ranged_Dual_Generic_MountedTurret_C::StartHeatingTimer' has a wrong offset!");
static_assert(offsetof(AB_Ranged_Dual_Generic_MountedTurret_C, StartCoolingTimer) == 0x000ED0, "Member 'AB_Ranged_Dual_Generic_MountedTurret_C::StartCoolingTimer' has a wrong offset!");
static_assert(offsetof(AB_Ranged_Dual_Generic_MountedTurret_C, FireState) == 0x000ED8, "Member 'AB_Ranged_Dual_Generic_MountedTurret_C::FireState' has a wrong offset!");
static_assert(offsetof(AB_Ranged_Dual_Generic_MountedTurret_C, Sound_OnFailToFireWhenOverheated) == 0x000EE0, "Member 'AB_Ranged_Dual_Generic_MountedTurret_C::Sound_OnFailToFireWhenOverheated' has a wrong offset!");

}

