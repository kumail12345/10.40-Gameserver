#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SocialSettingToggle

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function SocialSettingToggle.SocialSettingToggle_C.SetFontSize
// 0x0068 (0x0068 - 0x0000)
struct SocialSettingToggle_C_SetFontSize final
{
public:
	class UCommonTextBlock*                       Text;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         DefaultSize;                                       // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MobileSize;                                        // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateFontInfo                         TempFont;                                          // 0x0010(0x0050)(Edit, BlueprintVisible, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsMobileGame_ReturnValue;                 // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_62[0x2];                                       // 0x0062(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default;                             // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SocialSettingToggle_C_SetFontSize) == 0x000008, "Wrong alignment on SocialSettingToggle_C_SetFontSize");
static_assert(sizeof(SocialSettingToggle_C_SetFontSize) == 0x000068, "Wrong size on SocialSettingToggle_C_SetFontSize");
static_assert(offsetof(SocialSettingToggle_C_SetFontSize, Text) == 0x000000, "Member 'SocialSettingToggle_C_SetFontSize::Text' has a wrong offset!");
static_assert(offsetof(SocialSettingToggle_C_SetFontSize, DefaultSize) == 0x000008, "Member 'SocialSettingToggle_C_SetFontSize::DefaultSize' has a wrong offset!");
static_assert(offsetof(SocialSettingToggle_C_SetFontSize, MobileSize) == 0x00000C, "Member 'SocialSettingToggle_C_SetFontSize::MobileSize' has a wrong offset!");
static_assert(offsetof(SocialSettingToggle_C_SetFontSize, TempFont) == 0x000010, "Member 'SocialSettingToggle_C_SetFontSize::TempFont' has a wrong offset!");
static_assert(offsetof(SocialSettingToggle_C_SetFontSize, Temp_bool_Variable) == 0x000060, "Member 'SocialSettingToggle_C_SetFontSize::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(SocialSettingToggle_C_SetFontSize, CallFunc_IsMobileGame_ReturnValue) == 0x000061, "Member 'SocialSettingToggle_C_SetFontSize::CallFunc_IsMobileGame_ReturnValue' has a wrong offset!");
static_assert(offsetof(SocialSettingToggle_C_SetFontSize, K2Node_Select_Default) == 0x000064, "Member 'SocialSettingToggle_C_SetFontSize::K2Node_Select_Default' has a wrong offset!");

// Function SocialSettingToggle.SocialSettingToggle_C.UpdateSize
// 0x0098 (0x0098 - 0x0000)
struct SocialSettingToggle_C_UpdateSize final
{
public:
	int32                                         HeightMobile;                                      // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         HeightDefault;                                     // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LeftPaddingMobile;                                 // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                TempPadding;                                       // 0x000C(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         MobileNameBoxSize;                                 // 0x001C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DefaultNameBoxSize;                                // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              LargeSize;                                         // 0x0024(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              SmallSize;                                         // 0x002C(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsMobileGame_ReturnValue;                 // 0x0036(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_37[0x1];                                       // 0x0037(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class USizeBoxSlot*                           K2Node_DynamicCast_AsSize_Box_Slot;                // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_2;                              // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsMobileGame_ReturnValue_1;               // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_43[0x5];                                       // 0x0043(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UIconTextButton_C*                      K2Node_DynamicCast_AsIcon_Text_Button;             // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UIconTextButton_C*                      K2Node_DynamicCast_AsIcon_Text_Button_1;           // 0x0058(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsMobileGame_ReturnValue_2;               // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsMobileGame_ReturnValue_3;               // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_63[0x1];                                       // 0x0063(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              K2Node_Select_Default;                             // 0x0064(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default_1;                           // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsMobileGame_ReturnValue_4;               // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_3;                              // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_72[0x2];                                       // 0x0072(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              K2Node_Select_Default_2;                           // 0x0074(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_3;                           // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default_4;                           // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x0088(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SocialSettingToggle_C_UpdateSize) == 0x000008, "Wrong alignment on SocialSettingToggle_C_UpdateSize");
static_assert(sizeof(SocialSettingToggle_C_UpdateSize) == 0x000098, "Wrong size on SocialSettingToggle_C_UpdateSize");
static_assert(offsetof(SocialSettingToggle_C_UpdateSize, HeightMobile) == 0x000000, "Member 'SocialSettingToggle_C_UpdateSize::HeightMobile' has a wrong offset!");
static_assert(offsetof(SocialSettingToggle_C_UpdateSize, HeightDefault) == 0x000004, "Member 'SocialSettingToggle_C_UpdateSize::HeightDefault' has a wrong offset!");
static_assert(offsetof(SocialSettingToggle_C_UpdateSize, LeftPaddingMobile) == 0x000008, "Member 'SocialSettingToggle_C_UpdateSize::LeftPaddingMobile' has a wrong offset!");
static_assert(offsetof(SocialSettingToggle_C_UpdateSize, TempPadding) == 0x00000C, "Member 'SocialSettingToggle_C_UpdateSize::TempPadding' has a wrong offset!");
static_assert(offsetof(SocialSettingToggle_C_UpdateSize, MobileNameBoxSize) == 0x00001C, "Member 'SocialSettingToggle_C_UpdateSize::MobileNameBoxSize' has a wrong offset!");
static_assert(offsetof(SocialSettingToggle_C_UpdateSize, DefaultNameBoxSize) == 0x000020, "Member 'SocialSettingToggle_C_UpdateSize::DefaultNameBoxSize' has a wrong offset!");
static_assert(offsetof(SocialSettingToggle_C_UpdateSize, LargeSize) == 0x000024, "Member 'SocialSettingToggle_C_UpdateSize::LargeSize' has a wrong offset!");
static_assert(offsetof(SocialSettingToggle_C_UpdateSize, SmallSize) == 0x00002C, "Member 'SocialSettingToggle_C_UpdateSize::SmallSize' has a wrong offset!");
static_assert(offsetof(SocialSettingToggle_C_UpdateSize, Temp_bool_Variable) == 0x000034, "Member 'SocialSettingToggle_C_UpdateSize::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(SocialSettingToggle_C_UpdateSize, Temp_bool_Variable_1) == 0x000035, "Member 'SocialSettingToggle_C_UpdateSize::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(SocialSettingToggle_C_UpdateSize, CallFunc_IsMobileGame_ReturnValue) == 0x000036, "Member 'SocialSettingToggle_C_UpdateSize::CallFunc_IsMobileGame_ReturnValue' has a wrong offset!");
static_assert(offsetof(SocialSettingToggle_C_UpdateSize, K2Node_DynamicCast_AsSize_Box_Slot) == 0x000038, "Member 'SocialSettingToggle_C_UpdateSize::K2Node_DynamicCast_AsSize_Box_Slot' has a wrong offset!");
static_assert(offsetof(SocialSettingToggle_C_UpdateSize, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'SocialSettingToggle_C_UpdateSize::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(SocialSettingToggle_C_UpdateSize, Temp_bool_Variable_2) == 0x000041, "Member 'SocialSettingToggle_C_UpdateSize::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(SocialSettingToggle_C_UpdateSize, CallFunc_IsMobileGame_ReturnValue_1) == 0x000042, "Member 'SocialSettingToggle_C_UpdateSize::CallFunc_IsMobileGame_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SocialSettingToggle_C_UpdateSize, K2Node_DynamicCast_AsIcon_Text_Button) == 0x000048, "Member 'SocialSettingToggle_C_UpdateSize::K2Node_DynamicCast_AsIcon_Text_Button' has a wrong offset!");
static_assert(offsetof(SocialSettingToggle_C_UpdateSize, K2Node_DynamicCast_bSuccess_1) == 0x000050, "Member 'SocialSettingToggle_C_UpdateSize::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(SocialSettingToggle_C_UpdateSize, K2Node_DynamicCast_AsIcon_Text_Button_1) == 0x000058, "Member 'SocialSettingToggle_C_UpdateSize::K2Node_DynamicCast_AsIcon_Text_Button_1' has a wrong offset!");
static_assert(offsetof(SocialSettingToggle_C_UpdateSize, K2Node_DynamicCast_bSuccess_2) == 0x000060, "Member 'SocialSettingToggle_C_UpdateSize::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(SocialSettingToggle_C_UpdateSize, CallFunc_IsMobileGame_ReturnValue_2) == 0x000061, "Member 'SocialSettingToggle_C_UpdateSize::CallFunc_IsMobileGame_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(SocialSettingToggle_C_UpdateSize, CallFunc_IsMobileGame_ReturnValue_3) == 0x000062, "Member 'SocialSettingToggle_C_UpdateSize::CallFunc_IsMobileGame_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(SocialSettingToggle_C_UpdateSize, K2Node_Select_Default) == 0x000064, "Member 'SocialSettingToggle_C_UpdateSize::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(SocialSettingToggle_C_UpdateSize, K2Node_Select_Default_1) == 0x00006C, "Member 'SocialSettingToggle_C_UpdateSize::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(SocialSettingToggle_C_UpdateSize, CallFunc_IsMobileGame_ReturnValue_4) == 0x000070, "Member 'SocialSettingToggle_C_UpdateSize::CallFunc_IsMobileGame_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(SocialSettingToggle_C_UpdateSize, Temp_bool_Variable_3) == 0x000071, "Member 'SocialSettingToggle_C_UpdateSize::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(SocialSettingToggle_C_UpdateSize, K2Node_Select_Default_2) == 0x000074, "Member 'SocialSettingToggle_C_UpdateSize::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(SocialSettingToggle_C_UpdateSize, K2Node_Select_Default_3) == 0x00007C, "Member 'SocialSettingToggle_C_UpdateSize::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(SocialSettingToggle_C_UpdateSize, Temp_bool_Variable_4) == 0x000080, "Member 'SocialSettingToggle_C_UpdateSize::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(SocialSettingToggle_C_UpdateSize, K2Node_Select_Default_4) == 0x000084, "Member 'SocialSettingToggle_C_UpdateSize::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(SocialSettingToggle_C_UpdateSize, K2Node_MakeStruct_Margin) == 0x000088, "Member 'SocialSettingToggle_C_UpdateSize::K2Node_MakeStruct_Margin' has a wrong offset!");

// Function SocialSettingToggle.SocialSettingToggle_C.ExecuteUbergraph_SocialSettingToggle
// 0x0004 (0x0004 - 0x0000)
struct SocialSettingToggle_C_ExecuteUbergraph_SocialSettingToggle final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SocialSettingToggle_C_ExecuteUbergraph_SocialSettingToggle) == 0x000004, "Wrong alignment on SocialSettingToggle_C_ExecuteUbergraph_SocialSettingToggle");
static_assert(sizeof(SocialSettingToggle_C_ExecuteUbergraph_SocialSettingToggle) == 0x000004, "Wrong size on SocialSettingToggle_C_ExecuteUbergraph_SocialSettingToggle");
static_assert(offsetof(SocialSettingToggle_C_ExecuteUbergraph_SocialSettingToggle, EntryPoint) == 0x000000, "Member 'SocialSettingToggle_C_ExecuteUbergraph_SocialSettingToggle::EntryPoint' has a wrong offset!");

}

