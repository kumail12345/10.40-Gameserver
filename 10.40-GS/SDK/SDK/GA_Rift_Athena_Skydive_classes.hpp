#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_Rift_Athena_Skydive

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "Engine_structs.hpp"
#include "FortniteGame_classes.hpp"
#include "CoreUObject_structs.hpp"
#include "GameplayAbilities_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass GA_Rift_Athena_Skydive.GA_Rift_Athena_Skydive_C
// 0x00B8 (0x0A18 - 0x0960)
class UGA_Rift_Athena_Skydive_C final : public UFortGameplayAbility
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0960(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UAnimMontage*                           FallingAnimation;                                  // 0x0968(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Hangtimee;                                         // 0x0970(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_974[0x4];                                      // 0x0974(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 VehicleSkelMesh;                                   // 0x0978(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FScalableFloat                         HangTime;                                          // 0x0980(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FGameplayTag                           EventTag;                                          // 0x09A0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FScalableFloat                         KickFromVehicle_;                                  // 0x09A8(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	class USoundBase*                             LocalPlayerSound;                                  // 0x09C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 GameplayCueGE;                                     // 0x09D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerPawn*                        PlayerPawn;                                        // 0x09D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bHolstered;                                        // 0x09E0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9E1[0x3];                                      // 0x09E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   RiftSkydiveHolster;                                // 0x09E4(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ImpulseStrength;                                   // 0x09EC(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bNeedsInputEnable;                                 // 0x09F8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9F9[0x7];                                      // 0x09F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           SafetyTimer;                                       // 0x0A00(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FVector                                NewVar_0;                                          // 0x0A08(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_GA_Rift_Athena_Skydive(int32 EntryPoint);
	void OnDestroyed_Event_0(class AActor* DestroyedActor);
	void SetPlayerToSkydive();
	void K2_ActivateAbility();
	void OnChange_16E0EB444DDAC48E8E9CC99B762C0DC5(EMovementMode NewMovementMode);
	void OnCompleted_AA0523504B7CA4F488E1E6A11F48308A();
	void OnBlendOut_AA0523504B7CA4F488E1E6A11F48308A();
	void OnInterrupted_AA0523504B7CA4F488E1E6A11F48308A();
	void OnCancelled_AA0523504B7CA4F488E1E6A11F48308A();
	void K2_OnEndAbility(bool bWasCancelled);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GA_Rift_Athena_Skydive_C">();
	}
	static class UGA_Rift_Athena_Skydive_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGA_Rift_Athena_Skydive_C>();
	}
};
static_assert(alignof(UGA_Rift_Athena_Skydive_C) == 0x000008, "Wrong alignment on UGA_Rift_Athena_Skydive_C");
static_assert(sizeof(UGA_Rift_Athena_Skydive_C) == 0x000A18, "Wrong size on UGA_Rift_Athena_Skydive_C");
static_assert(offsetof(UGA_Rift_Athena_Skydive_C, UberGraphFrame) == 0x000960, "Member 'UGA_Rift_Athena_Skydive_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UGA_Rift_Athena_Skydive_C, FallingAnimation) == 0x000968, "Member 'UGA_Rift_Athena_Skydive_C::FallingAnimation' has a wrong offset!");
static_assert(offsetof(UGA_Rift_Athena_Skydive_C, Hangtimee) == 0x000970, "Member 'UGA_Rift_Athena_Skydive_C::Hangtimee' has a wrong offset!");
static_assert(offsetof(UGA_Rift_Athena_Skydive_C, VehicleSkelMesh) == 0x000978, "Member 'UGA_Rift_Athena_Skydive_C::VehicleSkelMesh' has a wrong offset!");
static_assert(offsetof(UGA_Rift_Athena_Skydive_C, HangTime) == 0x000980, "Member 'UGA_Rift_Athena_Skydive_C::HangTime' has a wrong offset!");
static_assert(offsetof(UGA_Rift_Athena_Skydive_C, EventTag) == 0x0009A0, "Member 'UGA_Rift_Athena_Skydive_C::EventTag' has a wrong offset!");
static_assert(offsetof(UGA_Rift_Athena_Skydive_C, KickFromVehicle_) == 0x0009A8, "Member 'UGA_Rift_Athena_Skydive_C::KickFromVehicle_' has a wrong offset!");
static_assert(offsetof(UGA_Rift_Athena_Skydive_C, LocalPlayerSound) == 0x0009C8, "Member 'UGA_Rift_Athena_Skydive_C::LocalPlayerSound' has a wrong offset!");
static_assert(offsetof(UGA_Rift_Athena_Skydive_C, GameplayCueGE) == 0x0009D0, "Member 'UGA_Rift_Athena_Skydive_C::GameplayCueGE' has a wrong offset!");
static_assert(offsetof(UGA_Rift_Athena_Skydive_C, PlayerPawn) == 0x0009D8, "Member 'UGA_Rift_Athena_Skydive_C::PlayerPawn' has a wrong offset!");
static_assert(offsetof(UGA_Rift_Athena_Skydive_C, bHolstered) == 0x0009E0, "Member 'UGA_Rift_Athena_Skydive_C::bHolstered' has a wrong offset!");
static_assert(offsetof(UGA_Rift_Athena_Skydive_C, RiftSkydiveHolster) == 0x0009E4, "Member 'UGA_Rift_Athena_Skydive_C::RiftSkydiveHolster' has a wrong offset!");
static_assert(offsetof(UGA_Rift_Athena_Skydive_C, ImpulseStrength) == 0x0009EC, "Member 'UGA_Rift_Athena_Skydive_C::ImpulseStrength' has a wrong offset!");
static_assert(offsetof(UGA_Rift_Athena_Skydive_C, bNeedsInputEnable) == 0x0009F8, "Member 'UGA_Rift_Athena_Skydive_C::bNeedsInputEnable' has a wrong offset!");
static_assert(offsetof(UGA_Rift_Athena_Skydive_C, SafetyTimer) == 0x000A00, "Member 'UGA_Rift_Athena_Skydive_C::SafetyTimer' has a wrong offset!");
static_assert(offsetof(UGA_Rift_Athena_Skydive_C, NewVar_0) == 0x000A08, "Member 'UGA_Rift_Athena_Skydive_C::NewVar_0' has a wrong offset!");

}

