#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ChallengeTile_Weekly

#include "Basic.hpp"

#include "ChallengeTile_Weekly_classes.hpp"
#include "ChallengeTile_Weekly_parameters.hpp"


namespace SDK
{

// Function ChallengeTile_Weekly.ChallengeTile_Weekly_C.SetDynamicColors
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UImage*                           WeeklyDynamicMaterialTarget                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FFortChallengeSetStyle           FortChallengeSetStyle                                  (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UChallengeTile_Weekly_C::SetDynamicColors(class UImage* WeeklyDynamicMaterialTarget, const struct FFortChallengeSetStyle& FortChallengeSetStyle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ChallengeTile_Weekly_C", "SetDynamicColors");

	Params::ChallengeTile_Weekly_C_SetDynamicColors Parms{};

	Parms.WeeklyDynamicMaterialTarget = WeeklyDynamicMaterialTarget;
	Parms.FortChallengeSetStyle = std::move(FortChallengeSetStyle);

	UObject::ProcessEvent(Func, &Parms);
}


// Function ChallengeTile_Weekly.ChallengeTile_Weekly_C.OnChallengeSetEstablished
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// struct FFortChallengeSetStyle           DisplayStyle                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// bool                                    bIsComplete                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bIsLocked                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UChallengeTile_Weekly_C::OnChallengeSetEstablished(const struct FFortChallengeSetStyle& DisplayStyle, bool bIsComplete, bool bIsLocked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ChallengeTile_Weekly_C", "OnChallengeSetEstablished");

	Params::ChallengeTile_Weekly_C_OnChallengeSetEstablished Parms{};

	Parms.DisplayStyle = std::move(DisplayStyle);
	Parms.bIsComplete = bIsComplete;
	Parms.bIsLocked = bIsLocked;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ChallengeTile_Weekly.ChallengeTile_Weekly_C.BP_OnHovered
// (Event, Protected, BlueprintEvent)

void UChallengeTile_Weekly_C::BP_OnHovered()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ChallengeTile_Weekly_C", "BP_OnHovered");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ChallengeTile_Weekly.ChallengeTile_Weekly_C.BP_OnUnhovered
// (Event, Protected, BlueprintEvent)

void UChallengeTile_Weekly_C::BP_OnUnhovered()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ChallengeTile_Weekly_C", "BP_OnUnhovered");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ChallengeTile_Weekly.ChallengeTile_Weekly_C.OnContainsPartyAssistedChallengeChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bHasPartyAssistedChallenge                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UChallengeTile_Weekly_C::OnContainsPartyAssistedChallengeChanged(bool bHasPartyAssistedChallenge)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ChallengeTile_Weekly_C", "OnContainsPartyAssistedChallengeChanged");

	Params::ChallengeTile_Weekly_C_OnContainsPartyAssistedChallengeChanged Parms{};

	Parms.bHasPartyAssistedChallenge = bHasPartyAssistedChallenge;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ChallengeTile_Weekly.ChallengeTile_Weekly_C.ExecuteUbergraph_ChallengeTile_Weekly
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UChallengeTile_Weekly_C::ExecuteUbergraph_ChallengeTile_Weekly(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ChallengeTile_Weekly_C", "ExecuteUbergraph_ChallengeTile_Weekly");

	Params::ChallengeTile_Weekly_C_ExecuteUbergraph_ChallengeTile_Weekly Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}

}

