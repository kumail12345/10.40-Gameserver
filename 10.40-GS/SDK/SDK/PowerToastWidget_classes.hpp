#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PowerToastWidget

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FortniteUI_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass PowerToastWidget.PowerToastWidget_C
// 0x0058 (0x02C8 - 0x0270)
class UPowerToastWidget_C final : public UFortPlayerPowerRatingToast
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0270(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       LookAtMe;                                          // 0x0278(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Outro;                                             // 0x0280(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Intro;                                             // 0x0288(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 Image_2;                                           // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_Power;                                       // 0x0298(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 LineSeparator;                                     // 0x02A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 PowerIconGlow;                                     // 0x02A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UFortUINotification*                    ToastNotification;                                 // 0x02B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AnimationFinishedDelay;                            // 0x02B8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2BC[0x4];                                      // 0x02BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           AnimationDelayTimer;                               // 0x02C0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_PowerToastWidget(int32 EntryPoint);
	void HandleAnimationDelay();
	void OnMouseEnter(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	void OnMouseLeave(const struct FPointerEvent& MouseEvent);
	void ShowToast();
	void WidgetAnimationEvt_Intro_K2Node_WidgetAnimationEvent_0();
	void WidgetAnimationEvt_Outro_K2Node_WidgetAnimationEvent_1();
	void WidgetAnimationEvt_Outro_K2Node_WidgetAnimationEvent_2();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"PowerToastWidget_C">();
	}
	static class UPowerToastWidget_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPowerToastWidget_C>();
	}
};
static_assert(alignof(UPowerToastWidget_C) == 0x000008, "Wrong alignment on UPowerToastWidget_C");
static_assert(sizeof(UPowerToastWidget_C) == 0x0002C8, "Wrong size on UPowerToastWidget_C");
static_assert(offsetof(UPowerToastWidget_C, UberGraphFrame) == 0x000270, "Member 'UPowerToastWidget_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UPowerToastWidget_C, LookAtMe) == 0x000278, "Member 'UPowerToastWidget_C::LookAtMe' has a wrong offset!");
static_assert(offsetof(UPowerToastWidget_C, Outro) == 0x000280, "Member 'UPowerToastWidget_C::Outro' has a wrong offset!");
static_assert(offsetof(UPowerToastWidget_C, Intro) == 0x000288, "Member 'UPowerToastWidget_C::Intro' has a wrong offset!");
static_assert(offsetof(UPowerToastWidget_C, Image_2) == 0x000290, "Member 'UPowerToastWidget_C::Image_2' has a wrong offset!");
static_assert(offsetof(UPowerToastWidget_C, Image_Power) == 0x000298, "Member 'UPowerToastWidget_C::Image_Power' has a wrong offset!");
static_assert(offsetof(UPowerToastWidget_C, LineSeparator) == 0x0002A0, "Member 'UPowerToastWidget_C::LineSeparator' has a wrong offset!");
static_assert(offsetof(UPowerToastWidget_C, PowerIconGlow) == 0x0002A8, "Member 'UPowerToastWidget_C::PowerIconGlow' has a wrong offset!");
static_assert(offsetof(UPowerToastWidget_C, ToastNotification) == 0x0002B0, "Member 'UPowerToastWidget_C::ToastNotification' has a wrong offset!");
static_assert(offsetof(UPowerToastWidget_C, AnimationFinishedDelay) == 0x0002B8, "Member 'UPowerToastWidget_C::AnimationFinishedDelay' has a wrong offset!");
static_assert(offsetof(UPowerToastWidget_C, AnimationDelayTimer) == 0x0002C0, "Member 'UPowerToastWidget_C::AnimationDelayTimer' has a wrong offset!");

}

