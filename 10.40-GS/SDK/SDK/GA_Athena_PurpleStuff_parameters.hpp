#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_Athena_PurpleStuff

#include "Basic.hpp"

#include "GameplayAbilities_structs.hpp"
#include "GameplayTags_structs.hpp"


namespace SDK::Params
{

// Function GA_Athena_PurpleStuff.GA_Athena_PurpleStuff_C.K2_CanActivateAbility
// 0x0080 (0x0080 - 0x0000)
struct GA_Athena_PurpleStuff_C_K2_CanActivateAbility final
{
public:
	struct FGameplayAbilityActorInfo              ActorInfo;                                         // 0x0000(0x0040)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference)
	struct FGameplayTagContainer                  RelevantTags;                                      // 0x0040(0x0020)(Parm, OutParm)
	bool                                          ReturnValue;                                       // 0x0060(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_62[0x6];                                       // 0x0062(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> K2Node_DynamicCast_AsGameplay_Tag_Asset_Interface; // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue;       // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GA_Athena_PurpleStuff_C_K2_CanActivateAbility) == 0x000008, "Wrong alignment on GA_Athena_PurpleStuff_C_K2_CanActivateAbility");
static_assert(sizeof(GA_Athena_PurpleStuff_C_K2_CanActivateAbility) == 0x000080, "Wrong size on GA_Athena_PurpleStuff_C_K2_CanActivateAbility");
static_assert(offsetof(GA_Athena_PurpleStuff_C_K2_CanActivateAbility, ActorInfo) == 0x000000, "Member 'GA_Athena_PurpleStuff_C_K2_CanActivateAbility::ActorInfo' has a wrong offset!");
static_assert(offsetof(GA_Athena_PurpleStuff_C_K2_CanActivateAbility, RelevantTags) == 0x000040, "Member 'GA_Athena_PurpleStuff_C_K2_CanActivateAbility::RelevantTags' has a wrong offset!");
static_assert(offsetof(GA_Athena_PurpleStuff_C_K2_CanActivateAbility, ReturnValue) == 0x000060, "Member 'GA_Athena_PurpleStuff_C_K2_CanActivateAbility::ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_PurpleStuff_C_K2_CanActivateAbility, Temp_bool_Variable) == 0x000061, "Member 'GA_Athena_PurpleStuff_C_K2_CanActivateAbility::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(GA_Athena_PurpleStuff_C_K2_CanActivateAbility, K2Node_DynamicCast_AsGameplay_Tag_Asset_Interface) == 0x000068, "Member 'GA_Athena_PurpleStuff_C_K2_CanActivateAbility::K2Node_DynamicCast_AsGameplay_Tag_Asset_Interface' has a wrong offset!");
static_assert(offsetof(GA_Athena_PurpleStuff_C_K2_CanActivateAbility, K2Node_DynamicCast_bSuccess) == 0x000078, "Member 'GA_Athena_PurpleStuff_C_K2_CanActivateAbility::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_Athena_PurpleStuff_C_K2_CanActivateAbility, CallFunc_HasMatchingGameplayTag_ReturnValue) == 0x000079, "Member 'GA_Athena_PurpleStuff_C_K2_CanActivateAbility::CallFunc_HasMatchingGameplayTag_ReturnValue' has a wrong offset!");

}

