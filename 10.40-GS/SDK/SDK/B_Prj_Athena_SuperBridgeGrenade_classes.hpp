#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_Prj_Athena_SuperBridgeGrenade

#include "Basic.hpp"

#include "FortniteGame_classes.hpp"
#include "CoreUObject_structs.hpp"
#include "ECardinalDirection_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass B_Prj_Athena_SuperBridgeGrenade.B_Prj_Athena_SuperBridgeGrenade_C
// 0x0220 (0x09B8 - 0x0798)
class AB_Prj_Athena_SuperBridgeGrenade_C final : public AFortSuperTowerGrenadeProjectile
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0798(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UParticleSystemComponent*               ParticleSystem;                                    // 0x07A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Mesh;                                              // 0x07A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URotatingMovementComponent*             RotatingMovement;                                  // 0x07B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                BaseDestination;                                   // 0x07B8(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C4[0x4];                                      // 0x07C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystem*                        P_BuildBuilding;                                   // 0x07C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Cue_CloseSound;                                    // 0x07D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Cue_DistantSound;                                  // 0x07D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                GridExplosionOffset;                               // 0x07E0(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         GridSizeXY;                                        // 0x07EC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         GridSizeZ;                                         // 0x07F0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         GridYOffset;                                       // 0x07F4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         GridZOffset;                                       // 0x07F8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECardinalDirection                            CardinalDirection;                                 // 0x07FC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7FD[0x3];                                      // 0x07FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<ECardinalDirection, float>               OrientationYawOffsets;                             // 0x0800(0x0050)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	TMap<ECardinalDirection, struct FVector>      OrientationLocationOffsets;                        // 0x0850(0x0050)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	bool                                          IsDebug;                                           // 0x08A0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8A1[0x3];                                      // 0x08A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         TireBuildDelay;                                    // 0x08A4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FVector>                        ClearedCells_Normal;                               // 0x08A8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	struct FVector                                LastBounceLocation;                                // 0x08B8(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MinBounceDistance;                                 // 0x08C4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LastBounceTime;                                    // 0x08C8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MinTimeBetweenBounces;                             // 0x08CC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             BounceSound;                                       // 0x08D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FVector>                        ClearedCells_Underground;                          // 0x08D8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	TArray<class UClass*>                         BGAClasses_Tires;                                  // 0x08E8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	TArray<struct FVector>                        BGALocations_Tires;                                // 0x08F8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	TArray<struct FRotator>                       BGARotations_Tires;                                // 0x0908(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	TMap<ECardinalDirection, struct FVector>      OrientationDoortraceOffsets;                       // 0x0918(0x0050)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	struct FVector                                DoorTraceOffsetHigh;                               // 0x0968(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                DoorTraceOffsetLow;                                // 0x0974(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          b_HitTerrain;                                      // 0x0980(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_981[0x7];                                      // 0x0981(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             InAirLoopSound;                                    // 0x0988(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        InAirLoopComponent;                                // 0x0990(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BounceTimeout;                                     // 0x0998(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99C[0x4];                                      // 0x099C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 BuilderClass;                                      // 0x09A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 BuilderClassBasement;                              // 0x09A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          b_SpawnTires;                                      // 0x09B0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_B_Prj_Athena_SuperBridgeGrenade(int32 EntryPoint);
	void ReceiveBeginPlay();
	void UserConstructionScript();
	void SetBaseDestination(const struct FHitResult& Hit);
	void CreateBaseSection(const struct FVector& ReferenceLocation, const TArray<class UClass*>& BGAClassArray, TArray<struct FVector>& BGALocationArray, TArray<struct FRotator>& BGARotationArray);
	void ClearAndBuild(TArray<struct FVector>& ClearedGridCells, const TArray<class UClass*>& BGAClassArray, TArray<struct FVector>& BGALocationArray, TArray<struct FRotator>& BGARotationArray, bool DestroyFloorsQuickly);
	void SpawnTires(const struct FVector& ReferenceLocation);
	void HandleProps(TArray<class AActor*>& Array);
	void CalculateCardinalDirection();
	void CallDynamicBuilder(class UClass* Class_0, const struct FVector& Location);
	void ClearOnly(TArray<struct FVector>& ClearedGridCells, bool DestroyFloorsQuickly);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"B_Prj_Athena_SuperBridgeGrenade_C">();
	}
	static class AB_Prj_Athena_SuperBridgeGrenade_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AB_Prj_Athena_SuperBridgeGrenade_C>();
	}
};
static_assert(alignof(AB_Prj_Athena_SuperBridgeGrenade_C) == 0x000008, "Wrong alignment on AB_Prj_Athena_SuperBridgeGrenade_C");
static_assert(sizeof(AB_Prj_Athena_SuperBridgeGrenade_C) == 0x0009B8, "Wrong size on AB_Prj_Athena_SuperBridgeGrenade_C");
static_assert(offsetof(AB_Prj_Athena_SuperBridgeGrenade_C, UberGraphFrame) == 0x000798, "Member 'AB_Prj_Athena_SuperBridgeGrenade_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_SuperBridgeGrenade_C, ParticleSystem) == 0x0007A0, "Member 'AB_Prj_Athena_SuperBridgeGrenade_C::ParticleSystem' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_SuperBridgeGrenade_C, Mesh) == 0x0007A8, "Member 'AB_Prj_Athena_SuperBridgeGrenade_C::Mesh' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_SuperBridgeGrenade_C, RotatingMovement) == 0x0007B0, "Member 'AB_Prj_Athena_SuperBridgeGrenade_C::RotatingMovement' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_SuperBridgeGrenade_C, BaseDestination) == 0x0007B8, "Member 'AB_Prj_Athena_SuperBridgeGrenade_C::BaseDestination' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_SuperBridgeGrenade_C, P_BuildBuilding) == 0x0007C8, "Member 'AB_Prj_Athena_SuperBridgeGrenade_C::P_BuildBuilding' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_SuperBridgeGrenade_C, Cue_CloseSound) == 0x0007D0, "Member 'AB_Prj_Athena_SuperBridgeGrenade_C::Cue_CloseSound' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_SuperBridgeGrenade_C, Cue_DistantSound) == 0x0007D8, "Member 'AB_Prj_Athena_SuperBridgeGrenade_C::Cue_DistantSound' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_SuperBridgeGrenade_C, GridExplosionOffset) == 0x0007E0, "Member 'AB_Prj_Athena_SuperBridgeGrenade_C::GridExplosionOffset' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_SuperBridgeGrenade_C, GridSizeXY) == 0x0007EC, "Member 'AB_Prj_Athena_SuperBridgeGrenade_C::GridSizeXY' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_SuperBridgeGrenade_C, GridSizeZ) == 0x0007F0, "Member 'AB_Prj_Athena_SuperBridgeGrenade_C::GridSizeZ' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_SuperBridgeGrenade_C, GridYOffset) == 0x0007F4, "Member 'AB_Prj_Athena_SuperBridgeGrenade_C::GridYOffset' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_SuperBridgeGrenade_C, GridZOffset) == 0x0007F8, "Member 'AB_Prj_Athena_SuperBridgeGrenade_C::GridZOffset' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_SuperBridgeGrenade_C, CardinalDirection) == 0x0007FC, "Member 'AB_Prj_Athena_SuperBridgeGrenade_C::CardinalDirection' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_SuperBridgeGrenade_C, OrientationYawOffsets) == 0x000800, "Member 'AB_Prj_Athena_SuperBridgeGrenade_C::OrientationYawOffsets' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_SuperBridgeGrenade_C, OrientationLocationOffsets) == 0x000850, "Member 'AB_Prj_Athena_SuperBridgeGrenade_C::OrientationLocationOffsets' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_SuperBridgeGrenade_C, IsDebug) == 0x0008A0, "Member 'AB_Prj_Athena_SuperBridgeGrenade_C::IsDebug' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_SuperBridgeGrenade_C, TireBuildDelay) == 0x0008A4, "Member 'AB_Prj_Athena_SuperBridgeGrenade_C::TireBuildDelay' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_SuperBridgeGrenade_C, ClearedCells_Normal) == 0x0008A8, "Member 'AB_Prj_Athena_SuperBridgeGrenade_C::ClearedCells_Normal' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_SuperBridgeGrenade_C, LastBounceLocation) == 0x0008B8, "Member 'AB_Prj_Athena_SuperBridgeGrenade_C::LastBounceLocation' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_SuperBridgeGrenade_C, MinBounceDistance) == 0x0008C4, "Member 'AB_Prj_Athena_SuperBridgeGrenade_C::MinBounceDistance' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_SuperBridgeGrenade_C, LastBounceTime) == 0x0008C8, "Member 'AB_Prj_Athena_SuperBridgeGrenade_C::LastBounceTime' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_SuperBridgeGrenade_C, MinTimeBetweenBounces) == 0x0008CC, "Member 'AB_Prj_Athena_SuperBridgeGrenade_C::MinTimeBetweenBounces' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_SuperBridgeGrenade_C, BounceSound) == 0x0008D0, "Member 'AB_Prj_Athena_SuperBridgeGrenade_C::BounceSound' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_SuperBridgeGrenade_C, ClearedCells_Underground) == 0x0008D8, "Member 'AB_Prj_Athena_SuperBridgeGrenade_C::ClearedCells_Underground' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_SuperBridgeGrenade_C, BGAClasses_Tires) == 0x0008E8, "Member 'AB_Prj_Athena_SuperBridgeGrenade_C::BGAClasses_Tires' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_SuperBridgeGrenade_C, BGALocations_Tires) == 0x0008F8, "Member 'AB_Prj_Athena_SuperBridgeGrenade_C::BGALocations_Tires' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_SuperBridgeGrenade_C, BGARotations_Tires) == 0x000908, "Member 'AB_Prj_Athena_SuperBridgeGrenade_C::BGARotations_Tires' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_SuperBridgeGrenade_C, OrientationDoortraceOffsets) == 0x000918, "Member 'AB_Prj_Athena_SuperBridgeGrenade_C::OrientationDoortraceOffsets' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_SuperBridgeGrenade_C, DoorTraceOffsetHigh) == 0x000968, "Member 'AB_Prj_Athena_SuperBridgeGrenade_C::DoorTraceOffsetHigh' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_SuperBridgeGrenade_C, DoorTraceOffsetLow) == 0x000974, "Member 'AB_Prj_Athena_SuperBridgeGrenade_C::DoorTraceOffsetLow' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_SuperBridgeGrenade_C, b_HitTerrain) == 0x000980, "Member 'AB_Prj_Athena_SuperBridgeGrenade_C::b_HitTerrain' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_SuperBridgeGrenade_C, InAirLoopSound) == 0x000988, "Member 'AB_Prj_Athena_SuperBridgeGrenade_C::InAirLoopSound' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_SuperBridgeGrenade_C, InAirLoopComponent) == 0x000990, "Member 'AB_Prj_Athena_SuperBridgeGrenade_C::InAirLoopComponent' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_SuperBridgeGrenade_C, BounceTimeout) == 0x000998, "Member 'AB_Prj_Athena_SuperBridgeGrenade_C::BounceTimeout' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_SuperBridgeGrenade_C, BuilderClass) == 0x0009A0, "Member 'AB_Prj_Athena_SuperBridgeGrenade_C::BuilderClass' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_SuperBridgeGrenade_C, BuilderClassBasement) == 0x0009A8, "Member 'AB_Prj_Athena_SuperBridgeGrenade_C::BuilderClassBasement' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_SuperBridgeGrenade_C, b_SpawnTires) == 0x0009B0, "Member 'AB_Prj_Athena_SuperBridgeGrenade_C::b_SpawnTires' has a wrong offset!");

}

