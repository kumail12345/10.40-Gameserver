#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BGA_Athena_JollyRascal_MainDrop

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "Engine_structs.hpp"
#include "FortniteGame_structs.hpp"
#include "FortniteGame_classes.hpp"
#include "GameplayAbilities_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BGA_Athena_JollyRascal_MainDrop.BGA_Athena_JollyRascal_MainDrop_C
// 0x04C8 (0x0C30 - 0x0768)
class ABGA_Athena_JollyRascal_MainDrop_C final : public ABuildingGameplayActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0768(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class URotatingMovementComponent*             RotatingMovement;                                  // 0x0770(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               FallFX;                                            // 0x0778(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       PawnCollision;                                     // 0x0780(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Parent;                                            // 0x0788(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UFortProjectileMovementComponent*       FortProjectileMovement;                            // 0x0790(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        Audio;                                             // 0x0798(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   FallingMesh;                                       // 0x07A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         SyncLocation_Lerp_9EF536354F7BF2B7102065A3B812B3A9; // 0x07A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            SyncLocation__Direction_9EF536354F7BF2B7102065A3B812B3A9; // 0x07AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7AD[0x3];                                      // 0x07AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     SyncLocation;                                      // 0x07B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         VelOverTime_Vel_BBA7FD5D4E4CE7E0F62240B0989A892A;  // 0x07B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            VelOverTime__Direction_BBA7FD5D4E4CE7E0F62240B0989A892A; // 0x07BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7BD[0x3];                                      // 0x07BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     VelOverTime;                                       // 0x07C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           GC_Destroy;                                        // 0x07C8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 GE_FinalEnvironmentalDamage;                       // 0x07D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 GE_EnvironmentalDamage;                            // 0x07D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<EObjectTypeQuery>                      OverlapBuildingObjectType;                         // 0x07E0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	TArray<class AActor*>                         OverlapBuildingActorsToIgnore;                     // 0x07F0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance)
	float                                         OverlapBuildingRadius;                             // 0x0800(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                OverlapOffset;                                     // 0x0804(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LineTraceOffset;                                   // 0x0810(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                GroundLocation;                                    // 0x081C(0x000C)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          FoundHit;                                          // 0x0828(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_829[0x3];                                      // 0x0829(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             NullHit;                                           // 0x082C(0x0088)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          PendingKill;                                       // 0x08B4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8B5[0x3];                                      // 0x08B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         TimeTraceTick;                                     // 0x08B8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8BC[0x4];                                      // 0x08BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           Timer_Trace;                                       // 0x08C0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	int32                                         MeshInt;                                           // 0x08C8(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_8CC[0x4];                                      // 0x08CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UStaticMesh*>                    Meshs;                                             // 0x08D0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	struct FGameplayTag                           GC_Spawn;                                          // 0x08E0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FScalableFloat                         Row_OverlapRadiusEnvironment;                      // 0x08E8(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FVector                                Velocity;                                          // 0x0908(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         KnockMag;                                          // 0x0914(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         KnockAddedZ;                                       // 0x0918(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91C[0x4];                                      // 0x091C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 GE_FinalPlayerDamage;                              // 0x0920(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 GE_PlayerDamage;                                   // 0x0928(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FScalableFloat                         Row_OverlapRadiusPawn;                             // 0x0930(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UClass*                                 GE_FinalVehicleDamage;                             // 0x0950(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 GE_VehicleDamage;                                  // 0x0958(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FScalableFloat                         Row_KnockMag;                                      // 0x0960(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         Row_KnockAddedZ;                                   // 0x0980(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UMaterialInterface*>             MeshMaterials;                                     // 0x09A0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	TMap<int32, struct FTransform>                MapMeshTransforms;                                 // 0x09B0(0x0050)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	TArray<class AActor*>                         HitPawns;                                          // 0x0A00(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance)
	TArray<EObjectTypeQuery>                      FinalHitObjectType;                                // 0x0A10(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	struct FScalableFloat                         Row_FinalPawnOverlap;                              // 0x0A20(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<int32, class UClass*>                    Map_Prop;                                          // 0x0A40(0x0050)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	struct FTimerHandle                           Timer_TraceClient;                                 // 0x0A90(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 GE_PropBonusHP;                                    // 0x0A98(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FScalableFloat                         Row_FinalEnvOverlap;                               // 0x0AA0(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          BlazerBlocked;                                     // 0x0AC0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_AC1[0x3];                                      // 0x0AC1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                HitUndamagableTraceOffset;                         // 0x0AC4(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         HitUndamagableTaceRadius;                          // 0x0AD0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitUnbreakableGroundOffset;                        // 0x0AD4(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             MeshOffsetTransform;                               // 0x0AE0(0x0030)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	TMap<int32, class UClass*>                    Map_GEPrimary;                                     // 0x0B10(0x0050)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	TMap<int32, class UClass*>                    Map_GEFinal;                                       // 0x0B60(0x0050)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	class USoundBase*                             KillSound;                                         // 0x0BB0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Delay_DelayedFinalHit;                             // 0x0BB8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BBC[0x4];                                      // 0x0BBC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABuildingSMActor*                       SpawnedProp;                                       // 0x0BC0(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DeimosImpulseMult;                                 // 0x0BC8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          MeshHidden;                                        // 0x0BCC(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor)
	uint8                                         Pad_BCD[0x3];                                      // 0x0BCD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           T_UnbreakableBGA;                                  // 0x0BD0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEffectContextHandle           MyFortContext;                                     // 0x0BD8(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          SendQuestEvent;                                    // 0x0BF0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BF1[0x3];                                      // 0x0BF1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   QuestBackendName;                                  // 0x0BF4(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BFC[0x4];                                      // 0x0BFC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  QuestTargetTag;                                    // 0x0C00(0x0020)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	int32                                         QuestCount;                                        // 0x0C20(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           T_Bush;                                            // 0x0C24(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BGA_Athena_JollyRascal_MainDrop(int32 EntryPoint);
	void DelayedFinalHit();
	void FallFasterOverTime();
	void HitBlazer();
	void ClientTickDistCheck();
	void SpawnProp();
	void FinalHit();
	void BndEvt__PawnCollision_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void SelectMesh();
	void Traceforworld();
	void DestroyOnTick();
	void ReceiveBeginPlay();
	void HideAndKill();
	void SyncLocation__UpdateFunc();
	void SyncLocation__FinishedFunc();
	void VelOverTime__UpdateFunc();
	void VelOverTime__FinishedFunc();
	void UserConstructionScript();
	void DistanceCheck();
	void SetStartingValues();
	void DistanceCheckClient();
	struct FVector GetFinalLocation();
	bool LineTraceForBlocking(class AActor* Target, bool ShouldDoBlockingCast);
	void SelectGEs();
	bool CheckForCanBeDamaged(class AActor* Target);
	void OnRep_MeshHidden();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BGA_Athena_JollyRascal_MainDrop_C">();
	}
	static class ABGA_Athena_JollyRascal_MainDrop_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABGA_Athena_JollyRascal_MainDrop_C>();
	}
};
static_assert(alignof(ABGA_Athena_JollyRascal_MainDrop_C) == 0x000010, "Wrong alignment on ABGA_Athena_JollyRascal_MainDrop_C");
static_assert(sizeof(ABGA_Athena_JollyRascal_MainDrop_C) == 0x000C30, "Wrong size on ABGA_Athena_JollyRascal_MainDrop_C");
static_assert(offsetof(ABGA_Athena_JollyRascal_MainDrop_C, UberGraphFrame) == 0x000768, "Member 'ABGA_Athena_JollyRascal_MainDrop_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_JollyRascal_MainDrop_C, RotatingMovement) == 0x000770, "Member 'ABGA_Athena_JollyRascal_MainDrop_C::RotatingMovement' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_JollyRascal_MainDrop_C, FallFX) == 0x000778, "Member 'ABGA_Athena_JollyRascal_MainDrop_C::FallFX' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_JollyRascal_MainDrop_C, PawnCollision) == 0x000780, "Member 'ABGA_Athena_JollyRascal_MainDrop_C::PawnCollision' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_JollyRascal_MainDrop_C, Parent) == 0x000788, "Member 'ABGA_Athena_JollyRascal_MainDrop_C::Parent' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_JollyRascal_MainDrop_C, FortProjectileMovement) == 0x000790, "Member 'ABGA_Athena_JollyRascal_MainDrop_C::FortProjectileMovement' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_JollyRascal_MainDrop_C, Audio) == 0x000798, "Member 'ABGA_Athena_JollyRascal_MainDrop_C::Audio' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_JollyRascal_MainDrop_C, FallingMesh) == 0x0007A0, "Member 'ABGA_Athena_JollyRascal_MainDrop_C::FallingMesh' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_JollyRascal_MainDrop_C, SyncLocation_Lerp_9EF536354F7BF2B7102065A3B812B3A9) == 0x0007A8, "Member 'ABGA_Athena_JollyRascal_MainDrop_C::SyncLocation_Lerp_9EF536354F7BF2B7102065A3B812B3A9' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_JollyRascal_MainDrop_C, SyncLocation__Direction_9EF536354F7BF2B7102065A3B812B3A9) == 0x0007AC, "Member 'ABGA_Athena_JollyRascal_MainDrop_C::SyncLocation__Direction_9EF536354F7BF2B7102065A3B812B3A9' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_JollyRascal_MainDrop_C, SyncLocation) == 0x0007B0, "Member 'ABGA_Athena_JollyRascal_MainDrop_C::SyncLocation' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_JollyRascal_MainDrop_C, VelOverTime_Vel_BBA7FD5D4E4CE7E0F62240B0989A892A) == 0x0007B8, "Member 'ABGA_Athena_JollyRascal_MainDrop_C::VelOverTime_Vel_BBA7FD5D4E4CE7E0F62240B0989A892A' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_JollyRascal_MainDrop_C, VelOverTime__Direction_BBA7FD5D4E4CE7E0F62240B0989A892A) == 0x0007BC, "Member 'ABGA_Athena_JollyRascal_MainDrop_C::VelOverTime__Direction_BBA7FD5D4E4CE7E0F62240B0989A892A' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_JollyRascal_MainDrop_C, VelOverTime) == 0x0007C0, "Member 'ABGA_Athena_JollyRascal_MainDrop_C::VelOverTime' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_JollyRascal_MainDrop_C, GC_Destroy) == 0x0007C8, "Member 'ABGA_Athena_JollyRascal_MainDrop_C::GC_Destroy' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_JollyRascal_MainDrop_C, GE_FinalEnvironmentalDamage) == 0x0007D0, "Member 'ABGA_Athena_JollyRascal_MainDrop_C::GE_FinalEnvironmentalDamage' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_JollyRascal_MainDrop_C, GE_EnvironmentalDamage) == 0x0007D8, "Member 'ABGA_Athena_JollyRascal_MainDrop_C::GE_EnvironmentalDamage' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_JollyRascal_MainDrop_C, OverlapBuildingObjectType) == 0x0007E0, "Member 'ABGA_Athena_JollyRascal_MainDrop_C::OverlapBuildingObjectType' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_JollyRascal_MainDrop_C, OverlapBuildingActorsToIgnore) == 0x0007F0, "Member 'ABGA_Athena_JollyRascal_MainDrop_C::OverlapBuildingActorsToIgnore' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_JollyRascal_MainDrop_C, OverlapBuildingRadius) == 0x000800, "Member 'ABGA_Athena_JollyRascal_MainDrop_C::OverlapBuildingRadius' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_JollyRascal_MainDrop_C, OverlapOffset) == 0x000804, "Member 'ABGA_Athena_JollyRascal_MainDrop_C::OverlapOffset' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_JollyRascal_MainDrop_C, LineTraceOffset) == 0x000810, "Member 'ABGA_Athena_JollyRascal_MainDrop_C::LineTraceOffset' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_JollyRascal_MainDrop_C, GroundLocation) == 0x00081C, "Member 'ABGA_Athena_JollyRascal_MainDrop_C::GroundLocation' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_JollyRascal_MainDrop_C, FoundHit) == 0x000828, "Member 'ABGA_Athena_JollyRascal_MainDrop_C::FoundHit' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_JollyRascal_MainDrop_C, NullHit) == 0x00082C, "Member 'ABGA_Athena_JollyRascal_MainDrop_C::NullHit' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_JollyRascal_MainDrop_C, PendingKill) == 0x0008B4, "Member 'ABGA_Athena_JollyRascal_MainDrop_C::PendingKill' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_JollyRascal_MainDrop_C, TimeTraceTick) == 0x0008B8, "Member 'ABGA_Athena_JollyRascal_MainDrop_C::TimeTraceTick' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_JollyRascal_MainDrop_C, Timer_Trace) == 0x0008C0, "Member 'ABGA_Athena_JollyRascal_MainDrop_C::Timer_Trace' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_JollyRascal_MainDrop_C, MeshInt) == 0x0008C8, "Member 'ABGA_Athena_JollyRascal_MainDrop_C::MeshInt' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_JollyRascal_MainDrop_C, Meshs) == 0x0008D0, "Member 'ABGA_Athena_JollyRascal_MainDrop_C::Meshs' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_JollyRascal_MainDrop_C, GC_Spawn) == 0x0008E0, "Member 'ABGA_Athena_JollyRascal_MainDrop_C::GC_Spawn' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_JollyRascal_MainDrop_C, Row_OverlapRadiusEnvironment) == 0x0008E8, "Member 'ABGA_Athena_JollyRascal_MainDrop_C::Row_OverlapRadiusEnvironment' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_JollyRascal_MainDrop_C, Velocity) == 0x000908, "Member 'ABGA_Athena_JollyRascal_MainDrop_C::Velocity' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_JollyRascal_MainDrop_C, KnockMag) == 0x000914, "Member 'ABGA_Athena_JollyRascal_MainDrop_C::KnockMag' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_JollyRascal_MainDrop_C, KnockAddedZ) == 0x000918, "Member 'ABGA_Athena_JollyRascal_MainDrop_C::KnockAddedZ' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_JollyRascal_MainDrop_C, GE_FinalPlayerDamage) == 0x000920, "Member 'ABGA_Athena_JollyRascal_MainDrop_C::GE_FinalPlayerDamage' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_JollyRascal_MainDrop_C, GE_PlayerDamage) == 0x000928, "Member 'ABGA_Athena_JollyRascal_MainDrop_C::GE_PlayerDamage' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_JollyRascal_MainDrop_C, Row_OverlapRadiusPawn) == 0x000930, "Member 'ABGA_Athena_JollyRascal_MainDrop_C::Row_OverlapRadiusPawn' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_JollyRascal_MainDrop_C, GE_FinalVehicleDamage) == 0x000950, "Member 'ABGA_Athena_JollyRascal_MainDrop_C::GE_FinalVehicleDamage' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_JollyRascal_MainDrop_C, GE_VehicleDamage) == 0x000958, "Member 'ABGA_Athena_JollyRascal_MainDrop_C::GE_VehicleDamage' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_JollyRascal_MainDrop_C, Row_KnockMag) == 0x000960, "Member 'ABGA_Athena_JollyRascal_MainDrop_C::Row_KnockMag' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_JollyRascal_MainDrop_C, Row_KnockAddedZ) == 0x000980, "Member 'ABGA_Athena_JollyRascal_MainDrop_C::Row_KnockAddedZ' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_JollyRascal_MainDrop_C, MeshMaterials) == 0x0009A0, "Member 'ABGA_Athena_JollyRascal_MainDrop_C::MeshMaterials' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_JollyRascal_MainDrop_C, MapMeshTransforms) == 0x0009B0, "Member 'ABGA_Athena_JollyRascal_MainDrop_C::MapMeshTransforms' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_JollyRascal_MainDrop_C, HitPawns) == 0x000A00, "Member 'ABGA_Athena_JollyRascal_MainDrop_C::HitPawns' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_JollyRascal_MainDrop_C, FinalHitObjectType) == 0x000A10, "Member 'ABGA_Athena_JollyRascal_MainDrop_C::FinalHitObjectType' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_JollyRascal_MainDrop_C, Row_FinalPawnOverlap) == 0x000A20, "Member 'ABGA_Athena_JollyRascal_MainDrop_C::Row_FinalPawnOverlap' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_JollyRascal_MainDrop_C, Map_Prop) == 0x000A40, "Member 'ABGA_Athena_JollyRascal_MainDrop_C::Map_Prop' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_JollyRascal_MainDrop_C, Timer_TraceClient) == 0x000A90, "Member 'ABGA_Athena_JollyRascal_MainDrop_C::Timer_TraceClient' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_JollyRascal_MainDrop_C, GE_PropBonusHP) == 0x000A98, "Member 'ABGA_Athena_JollyRascal_MainDrop_C::GE_PropBonusHP' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_JollyRascal_MainDrop_C, Row_FinalEnvOverlap) == 0x000AA0, "Member 'ABGA_Athena_JollyRascal_MainDrop_C::Row_FinalEnvOverlap' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_JollyRascal_MainDrop_C, BlazerBlocked) == 0x000AC0, "Member 'ABGA_Athena_JollyRascal_MainDrop_C::BlazerBlocked' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_JollyRascal_MainDrop_C, HitUndamagableTraceOffset) == 0x000AC4, "Member 'ABGA_Athena_JollyRascal_MainDrop_C::HitUndamagableTraceOffset' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_JollyRascal_MainDrop_C, HitUndamagableTaceRadius) == 0x000AD0, "Member 'ABGA_Athena_JollyRascal_MainDrop_C::HitUndamagableTaceRadius' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_JollyRascal_MainDrop_C, HitUnbreakableGroundOffset) == 0x000AD4, "Member 'ABGA_Athena_JollyRascal_MainDrop_C::HitUnbreakableGroundOffset' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_JollyRascal_MainDrop_C, MeshOffsetTransform) == 0x000AE0, "Member 'ABGA_Athena_JollyRascal_MainDrop_C::MeshOffsetTransform' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_JollyRascal_MainDrop_C, Map_GEPrimary) == 0x000B10, "Member 'ABGA_Athena_JollyRascal_MainDrop_C::Map_GEPrimary' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_JollyRascal_MainDrop_C, Map_GEFinal) == 0x000B60, "Member 'ABGA_Athena_JollyRascal_MainDrop_C::Map_GEFinal' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_JollyRascal_MainDrop_C, KillSound) == 0x000BB0, "Member 'ABGA_Athena_JollyRascal_MainDrop_C::KillSound' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_JollyRascal_MainDrop_C, Delay_DelayedFinalHit) == 0x000BB8, "Member 'ABGA_Athena_JollyRascal_MainDrop_C::Delay_DelayedFinalHit' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_JollyRascal_MainDrop_C, SpawnedProp) == 0x000BC0, "Member 'ABGA_Athena_JollyRascal_MainDrop_C::SpawnedProp' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_JollyRascal_MainDrop_C, DeimosImpulseMult) == 0x000BC8, "Member 'ABGA_Athena_JollyRascal_MainDrop_C::DeimosImpulseMult' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_JollyRascal_MainDrop_C, MeshHidden) == 0x000BCC, "Member 'ABGA_Athena_JollyRascal_MainDrop_C::MeshHidden' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_JollyRascal_MainDrop_C, T_UnbreakableBGA) == 0x000BD0, "Member 'ABGA_Athena_JollyRascal_MainDrop_C::T_UnbreakableBGA' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_JollyRascal_MainDrop_C, MyFortContext) == 0x000BD8, "Member 'ABGA_Athena_JollyRascal_MainDrop_C::MyFortContext' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_JollyRascal_MainDrop_C, SendQuestEvent) == 0x000BF0, "Member 'ABGA_Athena_JollyRascal_MainDrop_C::SendQuestEvent' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_JollyRascal_MainDrop_C, QuestBackendName) == 0x000BF4, "Member 'ABGA_Athena_JollyRascal_MainDrop_C::QuestBackendName' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_JollyRascal_MainDrop_C, QuestTargetTag) == 0x000C00, "Member 'ABGA_Athena_JollyRascal_MainDrop_C::QuestTargetTag' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_JollyRascal_MainDrop_C, QuestCount) == 0x000C20, "Member 'ABGA_Athena_JollyRascal_MainDrop_C::QuestCount' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_JollyRascal_MainDrop_C, T_Bush) == 0x000C24, "Member 'ABGA_Athena_JollyRascal_MainDrop_C::T_Bush' has a wrong offset!");

}

