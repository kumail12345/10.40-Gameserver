#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_Prj_Athena_ShipCannon

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FortniteGame_classes.hpp"
#include "GameplayAbilities_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass B_Prj_Athena_ShipCannon.B_Prj_Athena_ShipCannon_C
// 0x00E0 (0x0858 - 0x0778)
class AB_Prj_Athena_ShipCannon_C final : public AFortProjectileBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0778(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UParticleSystemComponent*               P_Cannon_Projectile_Spin;                          // 0x0780(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Cannonball_SurfaceImpactSound;                     // 0x0788(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Cannonball_PlayerImpactSound;                      // 0x0790(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Cannonball_ExplosionSound;                         // 0x0798(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                StartingVelocity;                                  // 0x07A0(0x000C)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7AC[0x4];                                      // 0x07AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABuildingActor*                         LastHitBuilding;                                   // 0x07B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FScalableFloat                         EnemyLaunchVelocity;                               // 0x07B8(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         VelocityLossMultiplier;                            // 0x07D8(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         MinimumVelocity;                                   // 0x07F8(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         CannonballInitialSpeed;                            // 0x0818(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         CannonballGravityScale;                            // 0x0838(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void ExecuteUbergraph_B_Prj_Athena_ShipCannon(int32 EntryPoint);
	void OnExploded(const TArray<class AActor*>& HitActors, const TArray<struct FHitResult>& HitResults);
	void BndEvt__ProjectileMovementComponent_K2Node_ComponentBoundEvent_0_OnProjectileStopDelegate__DelegateSignature(const struct FHitResult& ImpactResult);
	void CallMovement();
	void ReceiveBeginPlay();
	void OnTouched(class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FHitResult& HitResult, bool bIsOverlap);
	void UserConstructionScript();
	void Resume_Movement();
	void HandleProjectileStop();
	void LaunchPawn(class AFortPlayerPawnAthena* LaunchedPawn);
	struct FVector CalculateNewVelocity(const struct FVector& TraceStart, const struct FVector& TraceEnd, bool* ReturnValue2);
	bool ShouldResimulateAfterBuildingHit(class ABuildingActor* HitBuilding);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"B_Prj_Athena_ShipCannon_C">();
	}
	static class AB_Prj_Athena_ShipCannon_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AB_Prj_Athena_ShipCannon_C>();
	}
};
static_assert(alignof(AB_Prj_Athena_ShipCannon_C) == 0x000008, "Wrong alignment on AB_Prj_Athena_ShipCannon_C");
static_assert(sizeof(AB_Prj_Athena_ShipCannon_C) == 0x000858, "Wrong size on AB_Prj_Athena_ShipCannon_C");
static_assert(offsetof(AB_Prj_Athena_ShipCannon_C, UberGraphFrame) == 0x000778, "Member 'AB_Prj_Athena_ShipCannon_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_ShipCannon_C, P_Cannon_Projectile_Spin) == 0x000780, "Member 'AB_Prj_Athena_ShipCannon_C::P_Cannon_Projectile_Spin' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_ShipCannon_C, Cannonball_SurfaceImpactSound) == 0x000788, "Member 'AB_Prj_Athena_ShipCannon_C::Cannonball_SurfaceImpactSound' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_ShipCannon_C, Cannonball_PlayerImpactSound) == 0x000790, "Member 'AB_Prj_Athena_ShipCannon_C::Cannonball_PlayerImpactSound' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_ShipCannon_C, Cannonball_ExplosionSound) == 0x000798, "Member 'AB_Prj_Athena_ShipCannon_C::Cannonball_ExplosionSound' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_ShipCannon_C, StartingVelocity) == 0x0007A0, "Member 'AB_Prj_Athena_ShipCannon_C::StartingVelocity' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_ShipCannon_C, LastHitBuilding) == 0x0007B0, "Member 'AB_Prj_Athena_ShipCannon_C::LastHitBuilding' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_ShipCannon_C, EnemyLaunchVelocity) == 0x0007B8, "Member 'AB_Prj_Athena_ShipCannon_C::EnemyLaunchVelocity' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_ShipCannon_C, VelocityLossMultiplier) == 0x0007D8, "Member 'AB_Prj_Athena_ShipCannon_C::VelocityLossMultiplier' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_ShipCannon_C, MinimumVelocity) == 0x0007F8, "Member 'AB_Prj_Athena_ShipCannon_C::MinimumVelocity' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_ShipCannon_C, CannonballInitialSpeed) == 0x000818, "Member 'AB_Prj_Athena_ShipCannon_C::CannonballInitialSpeed' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_ShipCannon_C, CannonballGravityScale) == 0x000838, "Member 'AB_Prj_Athena_ShipCannon_C::CannonballGravityScale' has a wrong offset!");

}

