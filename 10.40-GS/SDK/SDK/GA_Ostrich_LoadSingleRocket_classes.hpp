#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_Ostrich_LoadSingleRocket

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "Engine_structs.hpp"
#include "FortniteGame_classes.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass GA_Ostrich_LoadSingleRocket.GA_Ostrich_LoadSingleRocket_C
// 0x00A8 (0x0A08 - 0x0960)
class UGA_Ostrich_LoadSingleRocket_C final : public UFortGameplayAbility
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0960(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class ATestMechVehicle_C*                     mech;                                              // 0x0968(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAbilityTask*                           MoveTask;                                          // 0x0970(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DashStrength;                                      // 0x0978(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DashStrengthInAir;                                 // 0x097C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Dash_Duration;                                     // 0x0980(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DashDurationInAir;                                 // 0x0984(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                DashDirection;                                     // 0x0988(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_994[0x4];                                      // 0x0994(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           InAirCheck;                                        // 0x0998(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        P_BoostFin;                                        // 0x09A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Sound_DashActivate;                                // 0x09A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LineTrace;                                         // 0x09B0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9B4[0x4];                                      // 0x09B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 DashCameraMode;                                    // 0x09B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        P_BoostFin_Smaller;                                // 0x09C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPostProcessComponent*                  NewVar_0;                                          // 0x09C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AirDashMinVerticalSpeed;                           // 0x09D0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9D4[0x4];                                      // 0x09D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystem*                        P_Boost_Aftermath_LeftLeg;                         // 0x09D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        P_Boost_Aftermath_RightLeg;                        // 0x09E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        P_Boost_Aftermath_LeftFoot;                        // 0x09E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        P_Boost_Aftermath_RightFoot;                       // 0x09F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        P_Boost_Eye;                                       // 0x09F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CueTag;                                            // 0x0A00(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_GA_Ostrich_LoadSingleRocket(int32 EntryPoint);
	void K2_ActivateAbility();
	void SpawnFX(class AFortCharacterVehicle* Vehicle);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GA_Ostrich_LoadSingleRocket_C">();
	}
	static class UGA_Ostrich_LoadSingleRocket_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGA_Ostrich_LoadSingleRocket_C>();
	}
};
static_assert(alignof(UGA_Ostrich_LoadSingleRocket_C) == 0x000008, "Wrong alignment on UGA_Ostrich_LoadSingleRocket_C");
static_assert(sizeof(UGA_Ostrich_LoadSingleRocket_C) == 0x000A08, "Wrong size on UGA_Ostrich_LoadSingleRocket_C");
static_assert(offsetof(UGA_Ostrich_LoadSingleRocket_C, UberGraphFrame) == 0x000960, "Member 'UGA_Ostrich_LoadSingleRocket_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UGA_Ostrich_LoadSingleRocket_C, mech) == 0x000968, "Member 'UGA_Ostrich_LoadSingleRocket_C::mech' has a wrong offset!");
static_assert(offsetof(UGA_Ostrich_LoadSingleRocket_C, MoveTask) == 0x000970, "Member 'UGA_Ostrich_LoadSingleRocket_C::MoveTask' has a wrong offset!");
static_assert(offsetof(UGA_Ostrich_LoadSingleRocket_C, DashStrength) == 0x000978, "Member 'UGA_Ostrich_LoadSingleRocket_C::DashStrength' has a wrong offset!");
static_assert(offsetof(UGA_Ostrich_LoadSingleRocket_C, DashStrengthInAir) == 0x00097C, "Member 'UGA_Ostrich_LoadSingleRocket_C::DashStrengthInAir' has a wrong offset!");
static_assert(offsetof(UGA_Ostrich_LoadSingleRocket_C, Dash_Duration) == 0x000980, "Member 'UGA_Ostrich_LoadSingleRocket_C::Dash_Duration' has a wrong offset!");
static_assert(offsetof(UGA_Ostrich_LoadSingleRocket_C, DashDurationInAir) == 0x000984, "Member 'UGA_Ostrich_LoadSingleRocket_C::DashDurationInAir' has a wrong offset!");
static_assert(offsetof(UGA_Ostrich_LoadSingleRocket_C, DashDirection) == 0x000988, "Member 'UGA_Ostrich_LoadSingleRocket_C::DashDirection' has a wrong offset!");
static_assert(offsetof(UGA_Ostrich_LoadSingleRocket_C, InAirCheck) == 0x000998, "Member 'UGA_Ostrich_LoadSingleRocket_C::InAirCheck' has a wrong offset!");
static_assert(offsetof(UGA_Ostrich_LoadSingleRocket_C, P_BoostFin) == 0x0009A0, "Member 'UGA_Ostrich_LoadSingleRocket_C::P_BoostFin' has a wrong offset!");
static_assert(offsetof(UGA_Ostrich_LoadSingleRocket_C, Sound_DashActivate) == 0x0009A8, "Member 'UGA_Ostrich_LoadSingleRocket_C::Sound_DashActivate' has a wrong offset!");
static_assert(offsetof(UGA_Ostrich_LoadSingleRocket_C, LineTrace) == 0x0009B0, "Member 'UGA_Ostrich_LoadSingleRocket_C::LineTrace' has a wrong offset!");
static_assert(offsetof(UGA_Ostrich_LoadSingleRocket_C, DashCameraMode) == 0x0009B8, "Member 'UGA_Ostrich_LoadSingleRocket_C::DashCameraMode' has a wrong offset!");
static_assert(offsetof(UGA_Ostrich_LoadSingleRocket_C, P_BoostFin_Smaller) == 0x0009C0, "Member 'UGA_Ostrich_LoadSingleRocket_C::P_BoostFin_Smaller' has a wrong offset!");
static_assert(offsetof(UGA_Ostrich_LoadSingleRocket_C, NewVar_0) == 0x0009C8, "Member 'UGA_Ostrich_LoadSingleRocket_C::NewVar_0' has a wrong offset!");
static_assert(offsetof(UGA_Ostrich_LoadSingleRocket_C, AirDashMinVerticalSpeed) == 0x0009D0, "Member 'UGA_Ostrich_LoadSingleRocket_C::AirDashMinVerticalSpeed' has a wrong offset!");
static_assert(offsetof(UGA_Ostrich_LoadSingleRocket_C, P_Boost_Aftermath_LeftLeg) == 0x0009D8, "Member 'UGA_Ostrich_LoadSingleRocket_C::P_Boost_Aftermath_LeftLeg' has a wrong offset!");
static_assert(offsetof(UGA_Ostrich_LoadSingleRocket_C, P_Boost_Aftermath_RightLeg) == 0x0009E0, "Member 'UGA_Ostrich_LoadSingleRocket_C::P_Boost_Aftermath_RightLeg' has a wrong offset!");
static_assert(offsetof(UGA_Ostrich_LoadSingleRocket_C, P_Boost_Aftermath_LeftFoot) == 0x0009E8, "Member 'UGA_Ostrich_LoadSingleRocket_C::P_Boost_Aftermath_LeftFoot' has a wrong offset!");
static_assert(offsetof(UGA_Ostrich_LoadSingleRocket_C, P_Boost_Aftermath_RightFoot) == 0x0009F0, "Member 'UGA_Ostrich_LoadSingleRocket_C::P_Boost_Aftermath_RightFoot' has a wrong offset!");
static_assert(offsetof(UGA_Ostrich_LoadSingleRocket_C, P_Boost_Eye) == 0x0009F8, "Member 'UGA_Ostrich_LoadSingleRocket_C::P_Boost_Eye' has a wrong offset!");
static_assert(offsetof(UGA_Ostrich_LoadSingleRocket_C, CueTag) == 0x000A00, "Member 'UGA_Ostrich_LoadSingleRocket_C::CueTag' has a wrong offset!");

}

