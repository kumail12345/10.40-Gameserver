#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GCN_Loop_GhostMode

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "FortniteGame_structs.hpp"
#include "GameplayTags_structs.hpp"


namespace SDK::Params
{

// Function GCN_Loop_GhostMode.GCN_Loop_GhostMode_C.ExecuteUbergraph_GCN_Loop_GhostMode
// 0x0328 (0x0328 - 0x0000)
struct GCN_Loop_GhostMode_C_ExecuteUbergraph_GCN_Loop_GhostMode final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_MyTarget;                             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 K2Node_Event_Parameters;                           // 0x0010(0x00B8)(ConstParm, ContainsInstancedReference)
	TArray<class UParticleSystemComponent*>       K2Node_Event_ParticleComponents;                   // 0x00C8(0x0010)(ConstParm, ZeroConstructor, ReferenceParm)
	TArray<class UAudioComponent*>                K2Node_Event_AudioComponents;                      // 0x00D8(0x0010)(ConstParm, ZeroConstructor, ReferenceParm)
	class UCameraShake*                           K2Node_Event_BurstCameraShakeInstance;             // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ADecalActor*                            K2Node_Event_BurstDecalInstance;                   // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue;          // 0x00F8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        CallFunc_SpawnSoundAttached_ReturnValue;           // 0x0100(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_MyTarget_1;                           // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 K2Node_Event_Parameters_1;                         // 0x0110(0x00B8)(ConstParm, ContainsInstancedReference)
	TArray<class UParticleSystemComponent*>       K2Node_Event_ParticleComponents_1;                 // 0x01C8(0x0010)(ConstParm, ZeroConstructor, ReferenceParm)
	TArray<class UAudioComponent*>                K2Node_Event_AudioComponents_1;                    // 0x01D8(0x0010)(ConstParm, ZeroConstructor, ReferenceParm)
	float                                         CallFunc_BreakGameplayCueParameters_NormalizedMagnitude; // 0x01E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakGameplayCueParameters_RawMagnitude;  // 0x01EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEffectContextHandle           CallFunc_BreakGameplayCueParameters_EffectContext; // 0x01F0(0x0018)()
	struct FGameplayTag                           CallFunc_BreakGameplayCueParameters_MatchedTagName; // 0x0208(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_BreakGameplayCueParameters_OriginalTag;   // 0x0210(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  CallFunc_BreakGameplayCueParameters_AggregatedSourceTags; // 0x0218(0x0020)()
	struct FGameplayTagContainer                  CallFunc_BreakGameplayCueParameters_AggregatedTargetTags; // 0x0238(0x0020)()
	struct FVector                                CallFunc_BreakGameplayCueParameters_Location;      // 0x0258(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakGameplayCueParameters_Normal;        // 0x0264(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakGameplayCueParameters_Instigator;    // 0x0270(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakGameplayCueParameters_EffectCauser;  // 0x0278(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_BreakGameplayCueParameters_SourceObject;  // 0x0280(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakGameplayCueParameters_PhysicalMaterial; // 0x0288(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakGameplayCueParameters_GameplayEffectLevel; // 0x0290(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakGameplayCueParameters_AbilityLevel;  // 0x0294(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        CallFunc_BreakGameplayCueParameters_TargetAttachComponent; // 0x0298(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue_1;        // 0x02A0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerPawnAthena*                  K2Node_DynamicCast_AsFort_Player_Pawn_Athena;      // 0x02A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x02B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2B1[0x7];                                      // 0x02B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        CallFunc_SpawnSoundAttached_ReturnValue_1;         // 0x02B8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x02C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x02C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C2[0x6];                                      // 0x02C2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UMaterialInterface*>             CallFunc_GetMaterials_ReturnValue;                 // 0x02C8(0x0010)(ZeroConstructor, ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x02D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x02DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     CallFunc_Array_Get_Item;                           // 0x02E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               K2Node_DynamicCast_AsMaterial_Instance_Dynamic;    // 0x02E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x02F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F1[0x3];                                      // 0x02F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x02F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x02F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F9[0x3];                                      // 0x02F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x02FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColorLerp_ReturnValue;              // 0x0300(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x0310(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_1;                       // 0x0314(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColorLerp_ReturnValue_1;            // 0x0318(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GCN_Loop_GhostMode_C_ExecuteUbergraph_GCN_Loop_GhostMode) == 0x000008, "Wrong alignment on GCN_Loop_GhostMode_C_ExecuteUbergraph_GCN_Loop_GhostMode");
static_assert(sizeof(GCN_Loop_GhostMode_C_ExecuteUbergraph_GCN_Loop_GhostMode) == 0x000328, "Wrong size on GCN_Loop_GhostMode_C_ExecuteUbergraph_GCN_Loop_GhostMode");
static_assert(offsetof(GCN_Loop_GhostMode_C_ExecuteUbergraph_GCN_Loop_GhostMode, EntryPoint) == 0x000000, "Member 'GCN_Loop_GhostMode_C_ExecuteUbergraph_GCN_Loop_GhostMode::EntryPoint' has a wrong offset!");
static_assert(offsetof(GCN_Loop_GhostMode_C_ExecuteUbergraph_GCN_Loop_GhostMode, K2Node_Event_MyTarget) == 0x000008, "Member 'GCN_Loop_GhostMode_C_ExecuteUbergraph_GCN_Loop_GhostMode::K2Node_Event_MyTarget' has a wrong offset!");
static_assert(offsetof(GCN_Loop_GhostMode_C_ExecuteUbergraph_GCN_Loop_GhostMode, K2Node_Event_Parameters) == 0x000010, "Member 'GCN_Loop_GhostMode_C_ExecuteUbergraph_GCN_Loop_GhostMode::K2Node_Event_Parameters' has a wrong offset!");
static_assert(offsetof(GCN_Loop_GhostMode_C_ExecuteUbergraph_GCN_Loop_GhostMode, K2Node_Event_ParticleComponents) == 0x0000C8, "Member 'GCN_Loop_GhostMode_C_ExecuteUbergraph_GCN_Loop_GhostMode::K2Node_Event_ParticleComponents' has a wrong offset!");
static_assert(offsetof(GCN_Loop_GhostMode_C_ExecuteUbergraph_GCN_Loop_GhostMode, K2Node_Event_AudioComponents) == 0x0000D8, "Member 'GCN_Loop_GhostMode_C_ExecuteUbergraph_GCN_Loop_GhostMode::K2Node_Event_AudioComponents' has a wrong offset!");
static_assert(offsetof(GCN_Loop_GhostMode_C_ExecuteUbergraph_GCN_Loop_GhostMode, K2Node_Event_BurstCameraShakeInstance) == 0x0000E8, "Member 'GCN_Loop_GhostMode_C_ExecuteUbergraph_GCN_Loop_GhostMode::K2Node_Event_BurstCameraShakeInstance' has a wrong offset!");
static_assert(offsetof(GCN_Loop_GhostMode_C_ExecuteUbergraph_GCN_Loop_GhostMode, K2Node_Event_BurstDecalInstance) == 0x0000F0, "Member 'GCN_Loop_GhostMode_C_ExecuteUbergraph_GCN_Loop_GhostMode::K2Node_Event_BurstDecalInstance' has a wrong offset!");
static_assert(offsetof(GCN_Loop_GhostMode_C_ExecuteUbergraph_GCN_Loop_GhostMode, CallFunc_K2_GetRootComponent_ReturnValue) == 0x0000F8, "Member 'GCN_Loop_GhostMode_C_ExecuteUbergraph_GCN_Loop_GhostMode::CallFunc_K2_GetRootComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCN_Loop_GhostMode_C_ExecuteUbergraph_GCN_Loop_GhostMode, CallFunc_SpawnSoundAttached_ReturnValue) == 0x000100, "Member 'GCN_Loop_GhostMode_C_ExecuteUbergraph_GCN_Loop_GhostMode::CallFunc_SpawnSoundAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCN_Loop_GhostMode_C_ExecuteUbergraph_GCN_Loop_GhostMode, K2Node_Event_MyTarget_1) == 0x000108, "Member 'GCN_Loop_GhostMode_C_ExecuteUbergraph_GCN_Loop_GhostMode::K2Node_Event_MyTarget_1' has a wrong offset!");
static_assert(offsetof(GCN_Loop_GhostMode_C_ExecuteUbergraph_GCN_Loop_GhostMode, K2Node_Event_Parameters_1) == 0x000110, "Member 'GCN_Loop_GhostMode_C_ExecuteUbergraph_GCN_Loop_GhostMode::K2Node_Event_Parameters_1' has a wrong offset!");
static_assert(offsetof(GCN_Loop_GhostMode_C_ExecuteUbergraph_GCN_Loop_GhostMode, K2Node_Event_ParticleComponents_1) == 0x0001C8, "Member 'GCN_Loop_GhostMode_C_ExecuteUbergraph_GCN_Loop_GhostMode::K2Node_Event_ParticleComponents_1' has a wrong offset!");
static_assert(offsetof(GCN_Loop_GhostMode_C_ExecuteUbergraph_GCN_Loop_GhostMode, K2Node_Event_AudioComponents_1) == 0x0001D8, "Member 'GCN_Loop_GhostMode_C_ExecuteUbergraph_GCN_Loop_GhostMode::K2Node_Event_AudioComponents_1' has a wrong offset!");
static_assert(offsetof(GCN_Loop_GhostMode_C_ExecuteUbergraph_GCN_Loop_GhostMode, CallFunc_BreakGameplayCueParameters_NormalizedMagnitude) == 0x0001E8, "Member 'GCN_Loop_GhostMode_C_ExecuteUbergraph_GCN_Loop_GhostMode::CallFunc_BreakGameplayCueParameters_NormalizedMagnitude' has a wrong offset!");
static_assert(offsetof(GCN_Loop_GhostMode_C_ExecuteUbergraph_GCN_Loop_GhostMode, CallFunc_BreakGameplayCueParameters_RawMagnitude) == 0x0001EC, "Member 'GCN_Loop_GhostMode_C_ExecuteUbergraph_GCN_Loop_GhostMode::CallFunc_BreakGameplayCueParameters_RawMagnitude' has a wrong offset!");
static_assert(offsetof(GCN_Loop_GhostMode_C_ExecuteUbergraph_GCN_Loop_GhostMode, CallFunc_BreakGameplayCueParameters_EffectContext) == 0x0001F0, "Member 'GCN_Loop_GhostMode_C_ExecuteUbergraph_GCN_Loop_GhostMode::CallFunc_BreakGameplayCueParameters_EffectContext' has a wrong offset!");
static_assert(offsetof(GCN_Loop_GhostMode_C_ExecuteUbergraph_GCN_Loop_GhostMode, CallFunc_BreakGameplayCueParameters_MatchedTagName) == 0x000208, "Member 'GCN_Loop_GhostMode_C_ExecuteUbergraph_GCN_Loop_GhostMode::CallFunc_BreakGameplayCueParameters_MatchedTagName' has a wrong offset!");
static_assert(offsetof(GCN_Loop_GhostMode_C_ExecuteUbergraph_GCN_Loop_GhostMode, CallFunc_BreakGameplayCueParameters_OriginalTag) == 0x000210, "Member 'GCN_Loop_GhostMode_C_ExecuteUbergraph_GCN_Loop_GhostMode::CallFunc_BreakGameplayCueParameters_OriginalTag' has a wrong offset!");
static_assert(offsetof(GCN_Loop_GhostMode_C_ExecuteUbergraph_GCN_Loop_GhostMode, CallFunc_BreakGameplayCueParameters_AggregatedSourceTags) == 0x000218, "Member 'GCN_Loop_GhostMode_C_ExecuteUbergraph_GCN_Loop_GhostMode::CallFunc_BreakGameplayCueParameters_AggregatedSourceTags' has a wrong offset!");
static_assert(offsetof(GCN_Loop_GhostMode_C_ExecuteUbergraph_GCN_Loop_GhostMode, CallFunc_BreakGameplayCueParameters_AggregatedTargetTags) == 0x000238, "Member 'GCN_Loop_GhostMode_C_ExecuteUbergraph_GCN_Loop_GhostMode::CallFunc_BreakGameplayCueParameters_AggregatedTargetTags' has a wrong offset!");
static_assert(offsetof(GCN_Loop_GhostMode_C_ExecuteUbergraph_GCN_Loop_GhostMode, CallFunc_BreakGameplayCueParameters_Location) == 0x000258, "Member 'GCN_Loop_GhostMode_C_ExecuteUbergraph_GCN_Loop_GhostMode::CallFunc_BreakGameplayCueParameters_Location' has a wrong offset!");
static_assert(offsetof(GCN_Loop_GhostMode_C_ExecuteUbergraph_GCN_Loop_GhostMode, CallFunc_BreakGameplayCueParameters_Normal) == 0x000264, "Member 'GCN_Loop_GhostMode_C_ExecuteUbergraph_GCN_Loop_GhostMode::CallFunc_BreakGameplayCueParameters_Normal' has a wrong offset!");
static_assert(offsetof(GCN_Loop_GhostMode_C_ExecuteUbergraph_GCN_Loop_GhostMode, CallFunc_BreakGameplayCueParameters_Instigator) == 0x000270, "Member 'GCN_Loop_GhostMode_C_ExecuteUbergraph_GCN_Loop_GhostMode::CallFunc_BreakGameplayCueParameters_Instigator' has a wrong offset!");
static_assert(offsetof(GCN_Loop_GhostMode_C_ExecuteUbergraph_GCN_Loop_GhostMode, CallFunc_BreakGameplayCueParameters_EffectCauser) == 0x000278, "Member 'GCN_Loop_GhostMode_C_ExecuteUbergraph_GCN_Loop_GhostMode::CallFunc_BreakGameplayCueParameters_EffectCauser' has a wrong offset!");
static_assert(offsetof(GCN_Loop_GhostMode_C_ExecuteUbergraph_GCN_Loop_GhostMode, CallFunc_BreakGameplayCueParameters_SourceObject) == 0x000280, "Member 'GCN_Loop_GhostMode_C_ExecuteUbergraph_GCN_Loop_GhostMode::CallFunc_BreakGameplayCueParameters_SourceObject' has a wrong offset!");
static_assert(offsetof(GCN_Loop_GhostMode_C_ExecuteUbergraph_GCN_Loop_GhostMode, CallFunc_BreakGameplayCueParameters_PhysicalMaterial) == 0x000288, "Member 'GCN_Loop_GhostMode_C_ExecuteUbergraph_GCN_Loop_GhostMode::CallFunc_BreakGameplayCueParameters_PhysicalMaterial' has a wrong offset!");
static_assert(offsetof(GCN_Loop_GhostMode_C_ExecuteUbergraph_GCN_Loop_GhostMode, CallFunc_BreakGameplayCueParameters_GameplayEffectLevel) == 0x000290, "Member 'GCN_Loop_GhostMode_C_ExecuteUbergraph_GCN_Loop_GhostMode::CallFunc_BreakGameplayCueParameters_GameplayEffectLevel' has a wrong offset!");
static_assert(offsetof(GCN_Loop_GhostMode_C_ExecuteUbergraph_GCN_Loop_GhostMode, CallFunc_BreakGameplayCueParameters_AbilityLevel) == 0x000294, "Member 'GCN_Loop_GhostMode_C_ExecuteUbergraph_GCN_Loop_GhostMode::CallFunc_BreakGameplayCueParameters_AbilityLevel' has a wrong offset!");
static_assert(offsetof(GCN_Loop_GhostMode_C_ExecuteUbergraph_GCN_Loop_GhostMode, CallFunc_BreakGameplayCueParameters_TargetAttachComponent) == 0x000298, "Member 'GCN_Loop_GhostMode_C_ExecuteUbergraph_GCN_Loop_GhostMode::CallFunc_BreakGameplayCueParameters_TargetAttachComponent' has a wrong offset!");
static_assert(offsetof(GCN_Loop_GhostMode_C_ExecuteUbergraph_GCN_Loop_GhostMode, CallFunc_K2_GetRootComponent_ReturnValue_1) == 0x0002A0, "Member 'GCN_Loop_GhostMode_C_ExecuteUbergraph_GCN_Loop_GhostMode::CallFunc_K2_GetRootComponent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GCN_Loop_GhostMode_C_ExecuteUbergraph_GCN_Loop_GhostMode, K2Node_DynamicCast_AsFort_Player_Pawn_Athena) == 0x0002A8, "Member 'GCN_Loop_GhostMode_C_ExecuteUbergraph_GCN_Loop_GhostMode::K2Node_DynamicCast_AsFort_Player_Pawn_Athena' has a wrong offset!");
static_assert(offsetof(GCN_Loop_GhostMode_C_ExecuteUbergraph_GCN_Loop_GhostMode, K2Node_DynamicCast_bSuccess) == 0x0002B0, "Member 'GCN_Loop_GhostMode_C_ExecuteUbergraph_GCN_Loop_GhostMode::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GCN_Loop_GhostMode_C_ExecuteUbergraph_GCN_Loop_GhostMode, CallFunc_SpawnSoundAttached_ReturnValue_1) == 0x0002B8, "Member 'GCN_Loop_GhostMode_C_ExecuteUbergraph_GCN_Loop_GhostMode::CallFunc_SpawnSoundAttached_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GCN_Loop_GhostMode_C_ExecuteUbergraph_GCN_Loop_GhostMode, CallFunc_IsValid_ReturnValue) == 0x0002C0, "Member 'GCN_Loop_GhostMode_C_ExecuteUbergraph_GCN_Loop_GhostMode::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCN_Loop_GhostMode_C_ExecuteUbergraph_GCN_Loop_GhostMode, CallFunc_IsValid_ReturnValue_1) == 0x0002C1, "Member 'GCN_Loop_GhostMode_C_ExecuteUbergraph_GCN_Loop_GhostMode::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GCN_Loop_GhostMode_C_ExecuteUbergraph_GCN_Loop_GhostMode, CallFunc_GetMaterials_ReturnValue) == 0x0002C8, "Member 'GCN_Loop_GhostMode_C_ExecuteUbergraph_GCN_Loop_GhostMode::CallFunc_GetMaterials_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCN_Loop_GhostMode_C_ExecuteUbergraph_GCN_Loop_GhostMode, CallFunc_Array_Length_ReturnValue) == 0x0002D8, "Member 'GCN_Loop_GhostMode_C_ExecuteUbergraph_GCN_Loop_GhostMode::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCN_Loop_GhostMode_C_ExecuteUbergraph_GCN_Loop_GhostMode, Temp_int_Array_Index_Variable) == 0x0002DC, "Member 'GCN_Loop_GhostMode_C_ExecuteUbergraph_GCN_Loop_GhostMode::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(GCN_Loop_GhostMode_C_ExecuteUbergraph_GCN_Loop_GhostMode, CallFunc_Array_Get_Item) == 0x0002E0, "Member 'GCN_Loop_GhostMode_C_ExecuteUbergraph_GCN_Loop_GhostMode::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(GCN_Loop_GhostMode_C_ExecuteUbergraph_GCN_Loop_GhostMode, K2Node_DynamicCast_AsMaterial_Instance_Dynamic) == 0x0002E8, "Member 'GCN_Loop_GhostMode_C_ExecuteUbergraph_GCN_Loop_GhostMode::K2Node_DynamicCast_AsMaterial_Instance_Dynamic' has a wrong offset!");
static_assert(offsetof(GCN_Loop_GhostMode_C_ExecuteUbergraph_GCN_Loop_GhostMode, K2Node_DynamicCast_bSuccess_1) == 0x0002F0, "Member 'GCN_Loop_GhostMode_C_ExecuteUbergraph_GCN_Loop_GhostMode::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(GCN_Loop_GhostMode_C_ExecuteUbergraph_GCN_Loop_GhostMode, Temp_int_Loop_Counter_Variable) == 0x0002F4, "Member 'GCN_Loop_GhostMode_C_ExecuteUbergraph_GCN_Loop_GhostMode::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(GCN_Loop_GhostMode_C_ExecuteUbergraph_GCN_Loop_GhostMode, CallFunc_Less_IntInt_ReturnValue) == 0x0002F8, "Member 'GCN_Loop_GhostMode_C_ExecuteUbergraph_GCN_Loop_GhostMode::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCN_Loop_GhostMode_C_ExecuteUbergraph_GCN_Loop_GhostMode, CallFunc_Add_IntInt_ReturnValue) == 0x0002FC, "Member 'GCN_Loop_GhostMode_C_ExecuteUbergraph_GCN_Loop_GhostMode::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCN_Loop_GhostMode_C_ExecuteUbergraph_GCN_Loop_GhostMode, CallFunc_LinearColorLerp_ReturnValue) == 0x000300, "Member 'GCN_Loop_GhostMode_C_ExecuteUbergraph_GCN_Loop_GhostMode::CallFunc_LinearColorLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCN_Loop_GhostMode_C_ExecuteUbergraph_GCN_Loop_GhostMode, CallFunc_Lerp_ReturnValue) == 0x000310, "Member 'GCN_Loop_GhostMode_C_ExecuteUbergraph_GCN_Loop_GhostMode::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCN_Loop_GhostMode_C_ExecuteUbergraph_GCN_Loop_GhostMode, CallFunc_Lerp_ReturnValue_1) == 0x000314, "Member 'GCN_Loop_GhostMode_C_ExecuteUbergraph_GCN_Loop_GhostMode::CallFunc_Lerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GCN_Loop_GhostMode_C_ExecuteUbergraph_GCN_Loop_GhostMode, CallFunc_LinearColorLerp_ReturnValue_1) == 0x000318, "Member 'GCN_Loop_GhostMode_C_ExecuteUbergraph_GCN_Loop_GhostMode::CallFunc_LinearColorLerp_ReturnValue_1' has a wrong offset!");

// Function GCN_Loop_GhostMode.GCN_Loop_GhostMode_C.OnRemoval
// 0x00F0 (0x00F0 - 0x0000)
struct GCN_Loop_GhostMode_C_OnRemoval final
{
public:
	class AActor*                                 MyTarget;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x00B8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	TArray<class UParticleSystemComponent*>       ParticleComponents;                                // 0x00C0(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
	TArray<class UAudioComponent*>                AudioComponents;                                   // 0x00D0(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
	class UCameraShake*                           BurstCameraShakeInstance;                          // 0x00E0(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ADecalActor*                            BurstDecalInstance;                                // 0x00E8(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GCN_Loop_GhostMode_C_OnRemoval) == 0x000008, "Wrong alignment on GCN_Loop_GhostMode_C_OnRemoval");
static_assert(sizeof(GCN_Loop_GhostMode_C_OnRemoval) == 0x0000F0, "Wrong size on GCN_Loop_GhostMode_C_OnRemoval");
static_assert(offsetof(GCN_Loop_GhostMode_C_OnRemoval, MyTarget) == 0x000000, "Member 'GCN_Loop_GhostMode_C_OnRemoval::MyTarget' has a wrong offset!");
static_assert(offsetof(GCN_Loop_GhostMode_C_OnRemoval, Parameters) == 0x000008, "Member 'GCN_Loop_GhostMode_C_OnRemoval::Parameters' has a wrong offset!");
static_assert(offsetof(GCN_Loop_GhostMode_C_OnRemoval, ParticleComponents) == 0x0000C0, "Member 'GCN_Loop_GhostMode_C_OnRemoval::ParticleComponents' has a wrong offset!");
static_assert(offsetof(GCN_Loop_GhostMode_C_OnRemoval, AudioComponents) == 0x0000D0, "Member 'GCN_Loop_GhostMode_C_OnRemoval::AudioComponents' has a wrong offset!");
static_assert(offsetof(GCN_Loop_GhostMode_C_OnRemoval, BurstCameraShakeInstance) == 0x0000E0, "Member 'GCN_Loop_GhostMode_C_OnRemoval::BurstCameraShakeInstance' has a wrong offset!");
static_assert(offsetof(GCN_Loop_GhostMode_C_OnRemoval, BurstDecalInstance) == 0x0000E8, "Member 'GCN_Loop_GhostMode_C_OnRemoval::BurstDecalInstance' has a wrong offset!");

// Function GCN_Loop_GhostMode.GCN_Loop_GhostMode_C.OnLoopingStart
// 0x00E0 (0x00E0 - 0x0000)
struct GCN_Loop_GhostMode_C_OnLoopingStart final
{
public:
	class AActor*                                 MyTarget;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x00B8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	TArray<class UParticleSystemComponent*>       ParticleComponents;                                // 0x00C0(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
	TArray<class UAudioComponent*>                AudioComponents;                                   // 0x00D0(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
};
static_assert(alignof(GCN_Loop_GhostMode_C_OnLoopingStart) == 0x000008, "Wrong alignment on GCN_Loop_GhostMode_C_OnLoopingStart");
static_assert(sizeof(GCN_Loop_GhostMode_C_OnLoopingStart) == 0x0000E0, "Wrong size on GCN_Loop_GhostMode_C_OnLoopingStart");
static_assert(offsetof(GCN_Loop_GhostMode_C_OnLoopingStart, MyTarget) == 0x000000, "Member 'GCN_Loop_GhostMode_C_OnLoopingStart::MyTarget' has a wrong offset!");
static_assert(offsetof(GCN_Loop_GhostMode_C_OnLoopingStart, Parameters) == 0x000008, "Member 'GCN_Loop_GhostMode_C_OnLoopingStart::Parameters' has a wrong offset!");
static_assert(offsetof(GCN_Loop_GhostMode_C_OnLoopingStart, ParticleComponents) == 0x0000C0, "Member 'GCN_Loop_GhostMode_C_OnLoopingStart::ParticleComponents' has a wrong offset!");
static_assert(offsetof(GCN_Loop_GhostMode_C_OnLoopingStart, AudioComponents) == 0x0000D0, "Member 'GCN_Loop_GhostMode_C_OnLoopingStart::AudioComponents' has a wrong offset!");

// Function GCN_Loop_GhostMode.GCN_Loop_GhostMode_C.GetCharacterPartTypeMaterials
// 0x0030 (0x0030 - 0x0000)
struct GCN_Loop_GhostMode_C_GetCharacterPartTypeMaterials final
{
public:
	class AFortPlayerPawn*                        Fort_Player_Pawn;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortCustomPartType                           PartType;                                          // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 CallFunc_GetSkeletalMeshForPartType_ReturnValue;   // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UMaterialInterface*>             CallFunc_GetMaterials_ReturnValue;                 // 0x0018(0x0010)(ZeroConstructor, ReferenceParm)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GCN_Loop_GhostMode_C_GetCharacterPartTypeMaterials) == 0x000008, "Wrong alignment on GCN_Loop_GhostMode_C_GetCharacterPartTypeMaterials");
static_assert(sizeof(GCN_Loop_GhostMode_C_GetCharacterPartTypeMaterials) == 0x000030, "Wrong size on GCN_Loop_GhostMode_C_GetCharacterPartTypeMaterials");
static_assert(offsetof(GCN_Loop_GhostMode_C_GetCharacterPartTypeMaterials, Fort_Player_Pawn) == 0x000000, "Member 'GCN_Loop_GhostMode_C_GetCharacterPartTypeMaterials::Fort_Player_Pawn' has a wrong offset!");
static_assert(offsetof(GCN_Loop_GhostMode_C_GetCharacterPartTypeMaterials, PartType) == 0x000008, "Member 'GCN_Loop_GhostMode_C_GetCharacterPartTypeMaterials::PartType' has a wrong offset!");
static_assert(offsetof(GCN_Loop_GhostMode_C_GetCharacterPartTypeMaterials, CallFunc_GetSkeletalMeshForPartType_ReturnValue) == 0x000010, "Member 'GCN_Loop_GhostMode_C_GetCharacterPartTypeMaterials::CallFunc_GetSkeletalMeshForPartType_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCN_Loop_GhostMode_C_GetCharacterPartTypeMaterials, CallFunc_GetMaterials_ReturnValue) == 0x000018, "Member 'GCN_Loop_GhostMode_C_GetCharacterPartTypeMaterials::CallFunc_GetMaterials_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCN_Loop_GhostMode_C_GetCharacterPartTypeMaterials, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'GCN_Loop_GhostMode_C_GetCharacterPartTypeMaterials::CallFunc_IsValid_ReturnValue' has a wrong offset!");

}

