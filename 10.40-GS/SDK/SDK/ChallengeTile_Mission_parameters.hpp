#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ChallengeTile_Mission

#include "Basic.hpp"

#include "FortniteGame_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function ChallengeTile_Mission.ChallengeTile_Mission_C.SetDynamicColors
// 0x00B0 (0x00B0 - 0x0000)
struct ChallengeTile_Mission_C_SetDynamicColors final
{
public:
	class UImage*                                 EventDynamicMaterialTarget;                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFortChallengeSetStyle                 FortChallengeSetStyle;                             // 0x0008(0x00A0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ChallengeTile_Mission_C_SetDynamicColors) == 0x000008, "Wrong alignment on ChallengeTile_Mission_C_SetDynamicColors");
static_assert(sizeof(ChallengeTile_Mission_C_SetDynamicColors) == 0x0000B0, "Wrong size on ChallengeTile_Mission_C_SetDynamicColors");
static_assert(offsetof(ChallengeTile_Mission_C_SetDynamicColors, EventDynamicMaterialTarget) == 0x000000, "Member 'ChallengeTile_Mission_C_SetDynamicColors::EventDynamicMaterialTarget' has a wrong offset!");
static_assert(offsetof(ChallengeTile_Mission_C_SetDynamicColors, FortChallengeSetStyle) == 0x000008, "Member 'ChallengeTile_Mission_C_SetDynamicColors::FortChallengeSetStyle' has a wrong offset!");
static_assert(offsetof(ChallengeTile_Mission_C_SetDynamicColors, CallFunc_GetDynamicMaterial_ReturnValue) == 0x0000A8, "Member 'ChallengeTile_Mission_C_SetDynamicColors::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");

// Function ChallengeTile_Mission.ChallengeTile_Mission_C.OnChallengeSetEstablished
// 0x00A8 (0x00A8 - 0x0000)
struct ChallengeTile_Mission_C_OnChallengeSetEstablished final
{
public:
	struct FFortChallengeSetStyle                 DisplayStyle;                                      // 0x0000(0x00A0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          bIsComplete;                                       // 0x00A0(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bIsLocked;                                         // 0x00A1(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ChallengeTile_Mission_C_OnChallengeSetEstablished) == 0x000008, "Wrong alignment on ChallengeTile_Mission_C_OnChallengeSetEstablished");
static_assert(sizeof(ChallengeTile_Mission_C_OnChallengeSetEstablished) == 0x0000A8, "Wrong size on ChallengeTile_Mission_C_OnChallengeSetEstablished");
static_assert(offsetof(ChallengeTile_Mission_C_OnChallengeSetEstablished, DisplayStyle) == 0x000000, "Member 'ChallengeTile_Mission_C_OnChallengeSetEstablished::DisplayStyle' has a wrong offset!");
static_assert(offsetof(ChallengeTile_Mission_C_OnChallengeSetEstablished, bIsComplete) == 0x0000A0, "Member 'ChallengeTile_Mission_C_OnChallengeSetEstablished::bIsComplete' has a wrong offset!");
static_assert(offsetof(ChallengeTile_Mission_C_OnChallengeSetEstablished, bIsLocked) == 0x0000A1, "Member 'ChallengeTile_Mission_C_OnChallengeSetEstablished::bIsLocked' has a wrong offset!");

// Function ChallengeTile_Mission.ChallengeTile_Mission_C.OnContainsPartyAssistedChallengeChanged
// 0x0001 (0x0001 - 0x0000)
struct ChallengeTile_Mission_C_OnContainsPartyAssistedChallengeChanged final
{
public:
	bool                                          bHasPartyAssistedChallenge;                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ChallengeTile_Mission_C_OnContainsPartyAssistedChallengeChanged) == 0x000001, "Wrong alignment on ChallengeTile_Mission_C_OnContainsPartyAssistedChallengeChanged");
static_assert(sizeof(ChallengeTile_Mission_C_OnContainsPartyAssistedChallengeChanged) == 0x000001, "Wrong size on ChallengeTile_Mission_C_OnContainsPartyAssistedChallengeChanged");
static_assert(offsetof(ChallengeTile_Mission_C_OnContainsPartyAssistedChallengeChanged, bHasPartyAssistedChallenge) == 0x000000, "Member 'ChallengeTile_Mission_C_OnContainsPartyAssistedChallengeChanged::bHasPartyAssistedChallenge' has a wrong offset!");

// Function ChallengeTile_Mission.ChallengeTile_Mission_C.ExecuteUbergraph_ChallengeTile_Mission
// 0x0150 (0x0150 - 0x0000)
struct ChallengeTile_Mission_C_ExecuteUbergraph_ChallengeTile_Mission final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue;         // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFortChallengeSetStyle                 K2Node_Event_DisplayStyle;                         // 0x0018(0x00A0)(ConstParm)
	bool                                          K2Node_Event_bIsComplete;                          // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bIsLocked;                            // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bHasPartyAssistedChallenge;           // 0x00BB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BC[0x4];                                       // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C9[0x7];                                       // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicFontMaterial_ReturnValue;       // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UTexture2D>              CallFunc_GetSoftTextureForChaseReward_ReturnValue; // 0x00E0(0x0028)(HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAssetNull_ReturnValue;                  // 0x0109(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x010A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_10B[0x5];                                      // 0x010B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue_1;         // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortLazyImage*                         K2Node_DynamicCast_AsFort_Lazy_Image;              // 0x0118(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0121(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_122[0x6];                                      // 0x0122(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicFontMaterial_ReturnValue_1;     // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeLiteralFloat_ReturnValue;             // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeLiteralFloat_ReturnValue_1;           // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x013C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_13D[0x3];                                      // 0x013D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UMissionProgressDisplay_C*              K2Node_DynamicCast_AsMission_Progress_Display;     // 0x0140(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0149(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x014A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x014B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x014C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ChallengeTile_Mission_C_ExecuteUbergraph_ChallengeTile_Mission) == 0x000008, "Wrong alignment on ChallengeTile_Mission_C_ExecuteUbergraph_ChallengeTile_Mission");
static_assert(sizeof(ChallengeTile_Mission_C_ExecuteUbergraph_ChallengeTile_Mission) == 0x000150, "Wrong size on ChallengeTile_Mission_C_ExecuteUbergraph_ChallengeTile_Mission");
static_assert(offsetof(ChallengeTile_Mission_C_ExecuteUbergraph_ChallengeTile_Mission, EntryPoint) == 0x000000, "Member 'ChallengeTile_Mission_C_ExecuteUbergraph_ChallengeTile_Mission::EntryPoint' has a wrong offset!");
static_assert(offsetof(ChallengeTile_Mission_C_ExecuteUbergraph_ChallengeTile_Mission, Temp_bool_Variable) == 0x000004, "Member 'ChallengeTile_Mission_C_ExecuteUbergraph_ChallengeTile_Mission::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ChallengeTile_Mission_C_ExecuteUbergraph_ChallengeTile_Mission, CallFunc_PlayAnimationReverse_ReturnValue) == 0x000008, "Member 'ChallengeTile_Mission_C_ExecuteUbergraph_ChallengeTile_Mission::CallFunc_PlayAnimationReverse_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChallengeTile_Mission_C_ExecuteUbergraph_ChallengeTile_Mission, CallFunc_PlayAnimationForward_ReturnValue) == 0x000010, "Member 'ChallengeTile_Mission_C_ExecuteUbergraph_ChallengeTile_Mission::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChallengeTile_Mission_C_ExecuteUbergraph_ChallengeTile_Mission, K2Node_Event_DisplayStyle) == 0x000018, "Member 'ChallengeTile_Mission_C_ExecuteUbergraph_ChallengeTile_Mission::K2Node_Event_DisplayStyle' has a wrong offset!");
static_assert(offsetof(ChallengeTile_Mission_C_ExecuteUbergraph_ChallengeTile_Mission, K2Node_Event_bIsComplete) == 0x0000B8, "Member 'ChallengeTile_Mission_C_ExecuteUbergraph_ChallengeTile_Mission::K2Node_Event_bIsComplete' has a wrong offset!");
static_assert(offsetof(ChallengeTile_Mission_C_ExecuteUbergraph_ChallengeTile_Mission, K2Node_Event_bIsLocked) == 0x0000B9, "Member 'ChallengeTile_Mission_C_ExecuteUbergraph_ChallengeTile_Mission::K2Node_Event_bIsLocked' has a wrong offset!");
static_assert(offsetof(ChallengeTile_Mission_C_ExecuteUbergraph_ChallengeTile_Mission, CallFunc_Not_PreBool_ReturnValue) == 0x0000BA, "Member 'ChallengeTile_Mission_C_ExecuteUbergraph_ChallengeTile_Mission::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChallengeTile_Mission_C_ExecuteUbergraph_ChallengeTile_Mission, K2Node_Event_bHasPartyAssistedChallenge) == 0x0000BB, "Member 'ChallengeTile_Mission_C_ExecuteUbergraph_ChallengeTile_Mission::K2Node_Event_bHasPartyAssistedChallenge' has a wrong offset!");
static_assert(offsetof(ChallengeTile_Mission_C_ExecuteUbergraph_ChallengeTile_Mission, CallFunc_PlayAnimation_ReturnValue) == 0x0000C0, "Member 'ChallengeTile_Mission_C_ExecuteUbergraph_ChallengeTile_Mission::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChallengeTile_Mission_C_ExecuteUbergraph_ChallengeTile_Mission, Temp_byte_Variable) == 0x0000C8, "Member 'ChallengeTile_Mission_C_ExecuteUbergraph_ChallengeTile_Mission::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(ChallengeTile_Mission_C_ExecuteUbergraph_ChallengeTile_Mission, CallFunc_GetDynamicFontMaterial_ReturnValue) == 0x0000D0, "Member 'ChallengeTile_Mission_C_ExecuteUbergraph_ChallengeTile_Mission::CallFunc_GetDynamicFontMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChallengeTile_Mission_C_ExecuteUbergraph_ChallengeTile_Mission, CallFunc_GetDynamicMaterial_ReturnValue) == 0x0000D8, "Member 'ChallengeTile_Mission_C_ExecuteUbergraph_ChallengeTile_Mission::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChallengeTile_Mission_C_ExecuteUbergraph_ChallengeTile_Mission, CallFunc_GetSoftTextureForChaseReward_ReturnValue) == 0x0000E0, "Member 'ChallengeTile_Mission_C_ExecuteUbergraph_ChallengeTile_Mission::CallFunc_GetSoftTextureForChaseReward_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChallengeTile_Mission_C_ExecuteUbergraph_ChallengeTile_Mission, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000108, "Member 'ChallengeTile_Mission_C_ExecuteUbergraph_ChallengeTile_Mission::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChallengeTile_Mission_C_ExecuteUbergraph_ChallengeTile_Mission, CallFunc_IsAssetNull_ReturnValue) == 0x000109, "Member 'ChallengeTile_Mission_C_ExecuteUbergraph_ChallengeTile_Mission::CallFunc_IsAssetNull_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChallengeTile_Mission_C_ExecuteUbergraph_ChallengeTile_Mission, CallFunc_BooleanAND_ReturnValue) == 0x00010A, "Member 'ChallengeTile_Mission_C_ExecuteUbergraph_ChallengeTile_Mission::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChallengeTile_Mission_C_ExecuteUbergraph_ChallengeTile_Mission, CallFunc_GetDynamicMaterial_ReturnValue_1) == 0x000110, "Member 'ChallengeTile_Mission_C_ExecuteUbergraph_ChallengeTile_Mission::CallFunc_GetDynamicMaterial_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ChallengeTile_Mission_C_ExecuteUbergraph_ChallengeTile_Mission, K2Node_DynamicCast_AsFort_Lazy_Image) == 0x000118, "Member 'ChallengeTile_Mission_C_ExecuteUbergraph_ChallengeTile_Mission::K2Node_DynamicCast_AsFort_Lazy_Image' has a wrong offset!");
static_assert(offsetof(ChallengeTile_Mission_C_ExecuteUbergraph_ChallengeTile_Mission, K2Node_DynamicCast_bSuccess) == 0x000120, "Member 'ChallengeTile_Mission_C_ExecuteUbergraph_ChallengeTile_Mission::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ChallengeTile_Mission_C_ExecuteUbergraph_ChallengeTile_Mission, Temp_byte_Variable_1) == 0x000121, "Member 'ChallengeTile_Mission_C_ExecuteUbergraph_ChallengeTile_Mission::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(ChallengeTile_Mission_C_ExecuteUbergraph_ChallengeTile_Mission, CallFunc_GetDynamicFontMaterial_ReturnValue_1) == 0x000128, "Member 'ChallengeTile_Mission_C_ExecuteUbergraph_ChallengeTile_Mission::CallFunc_GetDynamicFontMaterial_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ChallengeTile_Mission_C_ExecuteUbergraph_ChallengeTile_Mission, CallFunc_MakeLiteralFloat_ReturnValue) == 0x000130, "Member 'ChallengeTile_Mission_C_ExecuteUbergraph_ChallengeTile_Mission::CallFunc_MakeLiteralFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChallengeTile_Mission_C_ExecuteUbergraph_ChallengeTile_Mission, CallFunc_MakeLiteralFloat_ReturnValue_1) == 0x000134, "Member 'ChallengeTile_Mission_C_ExecuteUbergraph_ChallengeTile_Mission::CallFunc_MakeLiteralFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ChallengeTile_Mission_C_ExecuteUbergraph_ChallengeTile_Mission, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000138, "Member 'ChallengeTile_Mission_C_ExecuteUbergraph_ChallengeTile_Mission::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChallengeTile_Mission_C_ExecuteUbergraph_ChallengeTile_Mission, Temp_bool_Variable_1) == 0x00013C, "Member 'ChallengeTile_Mission_C_ExecuteUbergraph_ChallengeTile_Mission::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(ChallengeTile_Mission_C_ExecuteUbergraph_ChallengeTile_Mission, K2Node_DynamicCast_AsMission_Progress_Display) == 0x000140, "Member 'ChallengeTile_Mission_C_ExecuteUbergraph_ChallengeTile_Mission::K2Node_DynamicCast_AsMission_Progress_Display' has a wrong offset!");
static_assert(offsetof(ChallengeTile_Mission_C_ExecuteUbergraph_ChallengeTile_Mission, K2Node_DynamicCast_bSuccess_1) == 0x000148, "Member 'ChallengeTile_Mission_C_ExecuteUbergraph_ChallengeTile_Mission::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(ChallengeTile_Mission_C_ExecuteUbergraph_ChallengeTile_Mission, K2Node_Select_Default) == 0x000149, "Member 'ChallengeTile_Mission_C_ExecuteUbergraph_ChallengeTile_Mission::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(ChallengeTile_Mission_C_ExecuteUbergraph_ChallengeTile_Mission, Temp_byte_Variable_2) == 0x00014A, "Member 'ChallengeTile_Mission_C_ExecuteUbergraph_ChallengeTile_Mission::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(ChallengeTile_Mission_C_ExecuteUbergraph_ChallengeTile_Mission, Temp_byte_Variable_3) == 0x00014B, "Member 'ChallengeTile_Mission_C_ExecuteUbergraph_ChallengeTile_Mission::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(ChallengeTile_Mission_C_ExecuteUbergraph_ChallengeTile_Mission, K2Node_Select_Default_1) == 0x00014C, "Member 'ChallengeTile_Mission_C_ExecuteUbergraph_ChallengeTile_Mission::K2Node_Select_Default_1' has a wrong offset!");

}

