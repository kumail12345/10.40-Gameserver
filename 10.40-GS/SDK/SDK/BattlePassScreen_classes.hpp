#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BattlePassScreen

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FortniteUI_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass BattlePassScreen.BattlePassScreen_C
// 0x0028 (0x04D8 - 0x04B0)
class UBattlePassScreen_C final : public UBattlePassScreen
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x04B0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBattlePassScreenLanding_C*             AthenaBattlePassLanding;                           // 0x04B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonWidgetSwitcher*                  Page_Controller;                                   // 0x04C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USafeZone*                              SafeZone_63;                                       // 0x04C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	float                                         CurrentZoomLevel;                                  // 0x04D0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void Update_Zoom_Level(float ZoomLevel);
	class UWidget* GetWidgetForFramingViewedItem();
	void HandleZoomRequest(class AActor* PlacementActor, bool bZoomOut);
	void OnHandlePipSelectedBP(int32 PipIndex);
	void OnInitialized();
	void ExecuteUbergraph_BattlePassScreen(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BattlePassScreen_C">();
	}
	static class UBattlePassScreen_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBattlePassScreen_C>();
	}
};
static_assert(alignof(UBattlePassScreen_C) == 0x000008, "Wrong alignment on UBattlePassScreen_C");
static_assert(sizeof(UBattlePassScreen_C) == 0x0004D8, "Wrong size on UBattlePassScreen_C");
static_assert(offsetof(UBattlePassScreen_C, UberGraphFrame) == 0x0004B0, "Member 'UBattlePassScreen_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBattlePassScreen_C, AthenaBattlePassLanding) == 0x0004B8, "Member 'UBattlePassScreen_C::AthenaBattlePassLanding' has a wrong offset!");
static_assert(offsetof(UBattlePassScreen_C, Page_Controller) == 0x0004C0, "Member 'UBattlePassScreen_C::Page_Controller' has a wrong offset!");
static_assert(offsetof(UBattlePassScreen_C, SafeZone_63) == 0x0004C8, "Member 'UBattlePassScreen_C::SafeZone_63' has a wrong offset!");
static_assert(offsetof(UBattlePassScreen_C, CurrentZoomLevel) == 0x0004D0, "Member 'UBattlePassScreen_C::CurrentZoomLevel' has a wrong offset!");

}

