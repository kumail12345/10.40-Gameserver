#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ChallengeInGameTreeEntry_Header

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FortniteUI_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass ChallengeInGameTreeEntry_Header.ChallengeInGameTreeEntry_Header_C
// 0x0028 (0x0280 - 0x0258)
class UChallengeInGameTreeEntry_Header_C final : public UAthenaChallengeTreeEntry_ChallengeSet
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0258(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       OnExpand;                                          // 0x0260(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       OnHover;                                           // 0x0268(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UBorder*                                AnimBoundEntryBorder;                              // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                BaseColorBorder;                                   // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	void OnMouseLeave(const struct FPointerEvent& MouseEvent);
	void OnMouseEnter(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	void BP_OnItemExpansionChanged(bool bIsExpanded);
	void OnChallengeSetEstablished(const struct FFortChallengeSetStyle& DisplayStyle);
	void ExecuteUbergraph_ChallengeInGameTreeEntry_Header(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ChallengeInGameTreeEntry_Header_C">();
	}
	static class UChallengeInGameTreeEntry_Header_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UChallengeInGameTreeEntry_Header_C>();
	}
};
static_assert(alignof(UChallengeInGameTreeEntry_Header_C) == 0x000008, "Wrong alignment on UChallengeInGameTreeEntry_Header_C");
static_assert(sizeof(UChallengeInGameTreeEntry_Header_C) == 0x000280, "Wrong size on UChallengeInGameTreeEntry_Header_C");
static_assert(offsetof(UChallengeInGameTreeEntry_Header_C, UberGraphFrame) == 0x000258, "Member 'UChallengeInGameTreeEntry_Header_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UChallengeInGameTreeEntry_Header_C, OnExpand) == 0x000260, "Member 'UChallengeInGameTreeEntry_Header_C::OnExpand' has a wrong offset!");
static_assert(offsetof(UChallengeInGameTreeEntry_Header_C, OnHover) == 0x000268, "Member 'UChallengeInGameTreeEntry_Header_C::OnHover' has a wrong offset!");
static_assert(offsetof(UChallengeInGameTreeEntry_Header_C, AnimBoundEntryBorder) == 0x000270, "Member 'UChallengeInGameTreeEntry_Header_C::AnimBoundEntryBorder' has a wrong offset!");
static_assert(offsetof(UChallengeInGameTreeEntry_Header_C, BaseColorBorder) == 0x000278, "Member 'UChallengeInGameTreeEntry_Header_C::BaseColorBorder' has a wrong offset!");

}

