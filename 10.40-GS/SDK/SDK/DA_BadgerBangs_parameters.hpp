#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: DA_BadgerBangs

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function DA_BadgerBangs.DA_BadgerBangs_C.ExecuteUbergraph_DA_BadgerBangs
// 0x0078 (0x0078 - 0x0000)
struct DA_BadgerBangs_C_ExecuteUbergraph_DA_BadgerBangs final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetInstigator_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetInstigator_ReturnValue_1;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortDecoHelper*                        K2Node_Event_FortDecoHelper_3;                     // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetInstigator_ReturnValue_2;              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerPawn*                        K2Node_DynamicCast_AsFort_Player_Pawn;             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortDecoHelper*                        K2Node_Event_FortDecoHelper_2;                     // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortDecoHelper*                        K2Node_Event_FortDecoHelper_1;                     // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortDecoHelper*                        K2Node_Event_FortDecoHelper;                       // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IGameplayTagAssetInterface> K2Node_DynamicCast_AsGameplay_Tag_Asset_Interface; // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0064(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAnyMatchingGameplayTags_ReturnValue;   // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(DA_BadgerBangs_C_ExecuteUbergraph_DA_BadgerBangs) == 0x000008, "Wrong alignment on DA_BadgerBangs_C_ExecuteUbergraph_DA_BadgerBangs");
static_assert(sizeof(DA_BadgerBangs_C_ExecuteUbergraph_DA_BadgerBangs) == 0x000078, "Wrong size on DA_BadgerBangs_C_ExecuteUbergraph_DA_BadgerBangs");
static_assert(offsetof(DA_BadgerBangs_C_ExecuteUbergraph_DA_BadgerBangs, EntryPoint) == 0x000000, "Member 'DA_BadgerBangs_C_ExecuteUbergraph_DA_BadgerBangs::EntryPoint' has a wrong offset!");
static_assert(offsetof(DA_BadgerBangs_C_ExecuteUbergraph_DA_BadgerBangs, Temp_bool_Variable) == 0x000004, "Member 'DA_BadgerBangs_C_ExecuteUbergraph_DA_BadgerBangs::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(DA_BadgerBangs_C_ExecuteUbergraph_DA_BadgerBangs, CallFunc_GetInstigator_ReturnValue) == 0x000008, "Member 'DA_BadgerBangs_C_ExecuteUbergraph_DA_BadgerBangs::CallFunc_GetInstigator_ReturnValue' has a wrong offset!");
static_assert(offsetof(DA_BadgerBangs_C_ExecuteUbergraph_DA_BadgerBangs, CallFunc_GetInstigator_ReturnValue_1) == 0x000010, "Member 'DA_BadgerBangs_C_ExecuteUbergraph_DA_BadgerBangs::CallFunc_GetInstigator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DA_BadgerBangs_C_ExecuteUbergraph_DA_BadgerBangs, K2Node_Event_FortDecoHelper_3) == 0x000018, "Member 'DA_BadgerBangs_C_ExecuteUbergraph_DA_BadgerBangs::K2Node_Event_FortDecoHelper_3' has a wrong offset!");
static_assert(offsetof(DA_BadgerBangs_C_ExecuteUbergraph_DA_BadgerBangs, CallFunc_GetInstigator_ReturnValue_2) == 0x000020, "Member 'DA_BadgerBangs_C_ExecuteUbergraph_DA_BadgerBangs::CallFunc_GetInstigator_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(DA_BadgerBangs_C_ExecuteUbergraph_DA_BadgerBangs, K2Node_DynamicCast_AsFort_Player_Pawn) == 0x000028, "Member 'DA_BadgerBangs_C_ExecuteUbergraph_DA_BadgerBangs::K2Node_DynamicCast_AsFort_Player_Pawn' has a wrong offset!");
static_assert(offsetof(DA_BadgerBangs_C_ExecuteUbergraph_DA_BadgerBangs, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'DA_BadgerBangs_C_ExecuteUbergraph_DA_BadgerBangs::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(DA_BadgerBangs_C_ExecuteUbergraph_DA_BadgerBangs, K2Node_Event_FortDecoHelper_2) == 0x000038, "Member 'DA_BadgerBangs_C_ExecuteUbergraph_DA_BadgerBangs::K2Node_Event_FortDecoHelper_2' has a wrong offset!");
static_assert(offsetof(DA_BadgerBangs_C_ExecuteUbergraph_DA_BadgerBangs, K2Node_Event_FortDecoHelper_1) == 0x000040, "Member 'DA_BadgerBangs_C_ExecuteUbergraph_DA_BadgerBangs::K2Node_Event_FortDecoHelper_1' has a wrong offset!");
static_assert(offsetof(DA_BadgerBangs_C_ExecuteUbergraph_DA_BadgerBangs, K2Node_Event_FortDecoHelper) == 0x000048, "Member 'DA_BadgerBangs_C_ExecuteUbergraph_DA_BadgerBangs::K2Node_Event_FortDecoHelper' has a wrong offset!");
static_assert(offsetof(DA_BadgerBangs_C_ExecuteUbergraph_DA_BadgerBangs, K2Node_DynamicCast_AsGameplay_Tag_Asset_Interface) == 0x000050, "Member 'DA_BadgerBangs_C_ExecuteUbergraph_DA_BadgerBangs::K2Node_DynamicCast_AsGameplay_Tag_Asset_Interface' has a wrong offset!");
static_assert(offsetof(DA_BadgerBangs_C_ExecuteUbergraph_DA_BadgerBangs, K2Node_DynamicCast_bSuccess_1) == 0x000060, "Member 'DA_BadgerBangs_C_ExecuteUbergraph_DA_BadgerBangs::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(DA_BadgerBangs_C_ExecuteUbergraph_DA_BadgerBangs, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000064, "Member 'DA_BadgerBangs_C_ExecuteUbergraph_DA_BadgerBangs::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(DA_BadgerBangs_C_ExecuteUbergraph_DA_BadgerBangs, CallFunc_HasAnyMatchingGameplayTags_ReturnValue) == 0x000070, "Member 'DA_BadgerBangs_C_ExecuteUbergraph_DA_BadgerBangs::CallFunc_HasAnyMatchingGameplayTags_ReturnValue' has a wrong offset!");

// Function DA_BadgerBangs.DA_BadgerBangs_C.BPPressSecondaryFire
// 0x0008 (0x0008 - 0x0000)
struct DA_BadgerBangs_C_BPPressSecondaryFire final
{
public:
	class AFortDecoHelper*                        FortDecoHelper;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DA_BadgerBangs_C_BPPressSecondaryFire) == 0x000008, "Wrong alignment on DA_BadgerBangs_C_BPPressSecondaryFire");
static_assert(sizeof(DA_BadgerBangs_C_BPPressSecondaryFire) == 0x000008, "Wrong size on DA_BadgerBangs_C_BPPressSecondaryFire");
static_assert(offsetof(DA_BadgerBangs_C_BPPressSecondaryFire, FortDecoHelper) == 0x000000, "Member 'DA_BadgerBangs_C_BPPressSecondaryFire::FortDecoHelper' has a wrong offset!");

// Function DA_BadgerBangs.DA_BadgerBangs_C.BPPressTrigger
// 0x0008 (0x0008 - 0x0000)
struct DA_BadgerBangs_C_BPPressTrigger final
{
public:
	class AFortDecoHelper*                        FortDecoHelper;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DA_BadgerBangs_C_BPPressTrigger) == 0x000008, "Wrong alignment on DA_BadgerBangs_C_BPPressTrigger");
static_assert(sizeof(DA_BadgerBangs_C_BPPressTrigger) == 0x000008, "Wrong size on DA_BadgerBangs_C_BPPressTrigger");
static_assert(offsetof(DA_BadgerBangs_C_BPPressTrigger, FortDecoHelper) == 0x000000, "Member 'DA_BadgerBangs_C_BPPressTrigger::FortDecoHelper' has a wrong offset!");

// Function DA_BadgerBangs.DA_BadgerBangs_C.BPReleaseSecondaryFire
// 0x0008 (0x0008 - 0x0000)
struct DA_BadgerBangs_C_BPReleaseSecondaryFire final
{
public:
	class AFortDecoHelper*                        FortDecoHelper;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DA_BadgerBangs_C_BPReleaseSecondaryFire) == 0x000008, "Wrong alignment on DA_BadgerBangs_C_BPReleaseSecondaryFire");
static_assert(sizeof(DA_BadgerBangs_C_BPReleaseSecondaryFire) == 0x000008, "Wrong size on DA_BadgerBangs_C_BPReleaseSecondaryFire");
static_assert(offsetof(DA_BadgerBangs_C_BPReleaseSecondaryFire, FortDecoHelper) == 0x000000, "Member 'DA_BadgerBangs_C_BPReleaseSecondaryFire::FortDecoHelper' has a wrong offset!");

// Function DA_BadgerBangs.DA_BadgerBangs_C.BPReleaseTrigger
// 0x0008 (0x0008 - 0x0000)
struct DA_BadgerBangs_C_BPReleaseTrigger final
{
public:
	class AFortDecoHelper*                        FortDecoHelper;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DA_BadgerBangs_C_BPReleaseTrigger) == 0x000008, "Wrong alignment on DA_BadgerBangs_C_BPReleaseTrigger");
static_assert(sizeof(DA_BadgerBangs_C_BPReleaseTrigger) == 0x000008, "Wrong size on DA_BadgerBangs_C_BPReleaseTrigger");
static_assert(offsetof(DA_BadgerBangs_C_BPReleaseTrigger, FortDecoHelper) == 0x000000, "Member 'DA_BadgerBangs_C_BPReleaseTrigger::FortDecoHelper' has a wrong offset!");

}

