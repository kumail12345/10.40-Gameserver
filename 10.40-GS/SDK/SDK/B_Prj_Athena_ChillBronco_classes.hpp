#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_Prj_Athena_ChillBronco

#include "Basic.hpp"

#include "B_Prj_ThrownConsumable_classes.hpp"
#include "Engine_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "GameplayTags_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass B_Prj_Athena_ChillBronco.B_Prj_Athena_ChillBronco_C
// 0x0110 (0x0918 - 0x0808)
class AB_Prj_Athena_ChillBronco_C final : public AB_Prj_ThrownConsumable_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_B_Prj_Athena_ChillBronco_C;         // 0x0808(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UParticleSystemComponent*               Proj_Trail;                                        // 0x0810(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 SK_ChugBomb;                                       // 0x0818(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       OverlapSphere;                                     // 0x0820(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        Audio_InAirLoop;                                   // 0x0828(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class AFortPawn*                              PlayerPawn;                                        // 0x0830(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitLocation;                                       // 0x0838(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitNormal;                                         // 0x0844(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         HealthHealAmount;                                  // 0x0850(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ShieldHealAmount;                                  // 0x0854(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MaxHealAmount;                                     // 0x0858(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_85C[0x4];                                      // 0x085C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FScalableFloat                         MaxHealValue;                                      // 0x0860(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         HealPool_Duration;                                 // 0x0880(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          GrantHealth;                                       // 0x08A0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          GrantShield;                                       // 0x08A1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8A2[0x6];                                      // 0x08A2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystem*                        HealOnlyFX;                                        // 0x08A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Stopped;                                           // 0x08B0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8B1[0x7];                                      // 0x08B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         HitActors;                                         // 0x08B8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance)
	class AFortPlayerPawn*                        HitPlayerPawn;                                     // 0x08C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortQuestManager*                      Owning_Player_Quest_Manager;                       // 0x08D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  Heal_Teammate_TC;                                  // 0x08D8(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FGameplayTagContainer                  Heal_Squadmate_TC;                                 // 0x08F8(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void ExecuteUbergraph_B_Prj_Athena_ChillBronco(int32 EntryPoint);
	void EnableCollision();
	void KillDelay();
	void HealPlayer();
	void BndEvt__Sphere_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void ReceiveHit(class UPrimitiveComponent* MyComp, class AActor* Other, class UPrimitiveComponent* OtherComp, bool bSelfMoved, const struct FVector& HitLocation_0, const struct FVector& HitNormal_0, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
	void OnTouched(class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FHitResult& HitResult, bool bIsOverlap);
	void GetMissingHealth(float* MissingHealth);
	void GetMissingShield(float* MissingShield);
	void ResetVariables();
	void OnRep_PlayerPawn();
	void LineTraceToTarget(class AActor* Target, bool* Heal);
	void OnExploded(const TArray<class AActor*>& HitActors_0, const TArray<struct FHitResult>& HitResults);
	void QuestCheckSquadMember(class AFortPawn* PlayerPawnHit);
	void ReceiveBeginPlay();
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"B_Prj_Athena_ChillBronco_C">();
	}
	static class AB_Prj_Athena_ChillBronco_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AB_Prj_Athena_ChillBronco_C>();
	}
};
static_assert(alignof(AB_Prj_Athena_ChillBronco_C) == 0x000008, "Wrong alignment on AB_Prj_Athena_ChillBronco_C");
static_assert(sizeof(AB_Prj_Athena_ChillBronco_C) == 0x000918, "Wrong size on AB_Prj_Athena_ChillBronco_C");
static_assert(offsetof(AB_Prj_Athena_ChillBronco_C, UberGraphFrame_B_Prj_Athena_ChillBronco_C) == 0x000808, "Member 'AB_Prj_Athena_ChillBronco_C::UberGraphFrame_B_Prj_Athena_ChillBronco_C' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_ChillBronco_C, Proj_Trail) == 0x000810, "Member 'AB_Prj_Athena_ChillBronco_C::Proj_Trail' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_ChillBronco_C, SK_ChugBomb) == 0x000818, "Member 'AB_Prj_Athena_ChillBronco_C::SK_ChugBomb' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_ChillBronco_C, OverlapSphere) == 0x000820, "Member 'AB_Prj_Athena_ChillBronco_C::OverlapSphere' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_ChillBronco_C, Audio_InAirLoop) == 0x000828, "Member 'AB_Prj_Athena_ChillBronco_C::Audio_InAirLoop' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_ChillBronco_C, PlayerPawn) == 0x000830, "Member 'AB_Prj_Athena_ChillBronco_C::PlayerPawn' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_ChillBronco_C, HitLocation) == 0x000838, "Member 'AB_Prj_Athena_ChillBronco_C::HitLocation' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_ChillBronco_C, HitNormal) == 0x000844, "Member 'AB_Prj_Athena_ChillBronco_C::HitNormal' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_ChillBronco_C, HealthHealAmount) == 0x000850, "Member 'AB_Prj_Athena_ChillBronco_C::HealthHealAmount' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_ChillBronco_C, ShieldHealAmount) == 0x000854, "Member 'AB_Prj_Athena_ChillBronco_C::ShieldHealAmount' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_ChillBronco_C, MaxHealAmount) == 0x000858, "Member 'AB_Prj_Athena_ChillBronco_C::MaxHealAmount' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_ChillBronco_C, MaxHealValue) == 0x000860, "Member 'AB_Prj_Athena_ChillBronco_C::MaxHealValue' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_ChillBronco_C, HealPool_Duration) == 0x000880, "Member 'AB_Prj_Athena_ChillBronco_C::HealPool_Duration' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_ChillBronco_C, GrantHealth) == 0x0008A0, "Member 'AB_Prj_Athena_ChillBronco_C::GrantHealth' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_ChillBronco_C, GrantShield) == 0x0008A1, "Member 'AB_Prj_Athena_ChillBronco_C::GrantShield' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_ChillBronco_C, HealOnlyFX) == 0x0008A8, "Member 'AB_Prj_Athena_ChillBronco_C::HealOnlyFX' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_ChillBronco_C, Stopped) == 0x0008B0, "Member 'AB_Prj_Athena_ChillBronco_C::Stopped' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_ChillBronco_C, HitActors) == 0x0008B8, "Member 'AB_Prj_Athena_ChillBronco_C::HitActors' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_ChillBronco_C, HitPlayerPawn) == 0x0008C8, "Member 'AB_Prj_Athena_ChillBronco_C::HitPlayerPawn' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_ChillBronco_C, Owning_Player_Quest_Manager) == 0x0008D0, "Member 'AB_Prj_Athena_ChillBronco_C::Owning_Player_Quest_Manager' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_ChillBronco_C, Heal_Teammate_TC) == 0x0008D8, "Member 'AB_Prj_Athena_ChillBronco_C::Heal_Teammate_TC' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_ChillBronco_C, Heal_Squadmate_TC) == 0x0008F8, "Member 'AB_Prj_Athena_ChillBronco_C::Heal_Squadmate_TC' has a wrong offset!");

}

