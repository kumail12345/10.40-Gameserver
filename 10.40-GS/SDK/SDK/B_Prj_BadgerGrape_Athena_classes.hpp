#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_Prj_BadgerGrape_Athena

#include "Basic.hpp"

#include "B_Prj_Hook_Athena_classes.hpp"
#include "GameplayTags_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass B_Prj_BadgerGrape_Athena.B_Prj_BadgerGrape_Athena_C
// 0x0080 (0x09D8 - 0x0958)
class AB_Prj_BadgerGrape_Athena_C final : public AB_Prj_Hook_Athena_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_B_Prj_BadgerGrape_Athena_C;         // 0x0958(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	float                                         Arc_Parameter_;                                    // 0x0960(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Gravity_Override_of_Z;                             // 0x0964(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Launch_Velocity_Multiplier;                        // 0x0968(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          XY_Override_on_Launch;                             // 0x096C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Z_Override_on_Launch;                              // 0x096D(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Z_Override_if_in_Air;                              // 0x096E(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_96F[0x1];                                      // 0x096F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              Grapple_Speed_MinMax;                              // 0x0970(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Grapple_Distance_MinMax;                           // 0x0978(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Player_Distance_to_Grapple;                        // 0x0980(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_984[0x4];                                      // 0x0984(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveFloat*                            Power_Curve;                                       // 0x0988(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAthenaGliderItemDefinition*            Glider_Cosmetic_Override;                          // 0x0990(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Has_Deployed;                                      // 0x0998(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_999[0x3];                                      // 0x0999(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         BadgerGrapeDelayFailsafe;                          // 0x099C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Launch_Velocity;                                   // 0x09A0(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MinimumUpwardLaunchVelocity;                       // 0x09AC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  BlockedAbilitiesWhileLaunching;                    // 0x09B0(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FGameplayTag                           BlockBuildingTag;                                  // 0x09D0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_B_Prj_BadgerGrape_Athena(int32 EntryPoint);
	void Teleported___Return_abilities_and_stop(class AFortPawn* FortPawn);
	void Travel(const struct FVector& HitLocation_0);
	void ReceiveHit(class UPrimitiveComponent* MyComp, class AActor* Other, class UPrimitiveComponent* OtherComp, bool bSelfMoved, const struct FVector& HitLocation_0, const struct FVector& HitNormal, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
	void Jump_Apex_Reached();
	void ReceiveDestroyed();
	void ReceiveBeginPlay();
	void OnCompleted_AD7C6F3447EADB13EFD3AEB8C8FD1DEC(class FName NotifyName);
	void OnBlendOut_AD7C6F3447EADB13EFD3AEB8C8FD1DEC(class FName NotifyName);
	void OnInterrupted_AD7C6F3447EADB13EFD3AEB8C8FD1DEC(class FName NotifyName);
	void OnNotifyBegin_AD7C6F3447EADB13EFD3AEB8C8FD1DEC(class FName NotifyName);
	void OnNotifyEnd_AD7C6F3447EADB13EFD3AEB8C8FD1DEC(class FName NotifyName);
	void OnCompleted_329D8C55468B0D29F0D7A08744266203(class FName NotifyName);
	void OnBlendOut_329D8C55468B0D29F0D7A08744266203(class FName NotifyName);
	void OnInterrupted_329D8C55468B0D29F0D7A08744266203(class FName NotifyName);
	void Grapple();
	void OnNotifyBegin_329D8C55468B0D29F0D7A08744266203(class FName NotifyName);
	void OnNotifyEnd_329D8C55468B0D29F0D7A08744266203(class FName NotifyName);
	void OnCompleted_0C1F62BE44216478F7BF0A876F25333F(class FName NotifyName);
	void OnBlendOut_0C1F62BE44216478F7BF0A876F25333F(class FName NotifyName);
	void OnInterrupted_0C1F62BE44216478F7BF0A876F25333F(class FName NotifyName);
	void OnNotifyBegin_0C1F62BE44216478F7BF0A876F25333F(class FName NotifyName);
	void OnNotifyEnd_0C1F62BE44216478F7BF0A876F25333F(class FName NotifyName);
	void Calculate_Speed(float* Speed);
	void Consume_Ammo();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"B_Prj_BadgerGrape_Athena_C">();
	}
	static class AB_Prj_BadgerGrape_Athena_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AB_Prj_BadgerGrape_Athena_C>();
	}
};
static_assert(alignof(AB_Prj_BadgerGrape_Athena_C) == 0x000008, "Wrong alignment on AB_Prj_BadgerGrape_Athena_C");
static_assert(sizeof(AB_Prj_BadgerGrape_Athena_C) == 0x0009D8, "Wrong size on AB_Prj_BadgerGrape_Athena_C");
static_assert(offsetof(AB_Prj_BadgerGrape_Athena_C, UberGraphFrame_B_Prj_BadgerGrape_Athena_C) == 0x000958, "Member 'AB_Prj_BadgerGrape_Athena_C::UberGraphFrame_B_Prj_BadgerGrape_Athena_C' has a wrong offset!");
static_assert(offsetof(AB_Prj_BadgerGrape_Athena_C, Arc_Parameter_) == 0x000960, "Member 'AB_Prj_BadgerGrape_Athena_C::Arc_Parameter_' has a wrong offset!");
static_assert(offsetof(AB_Prj_BadgerGrape_Athena_C, Gravity_Override_of_Z) == 0x000964, "Member 'AB_Prj_BadgerGrape_Athena_C::Gravity_Override_of_Z' has a wrong offset!");
static_assert(offsetof(AB_Prj_BadgerGrape_Athena_C, Launch_Velocity_Multiplier) == 0x000968, "Member 'AB_Prj_BadgerGrape_Athena_C::Launch_Velocity_Multiplier' has a wrong offset!");
static_assert(offsetof(AB_Prj_BadgerGrape_Athena_C, XY_Override_on_Launch) == 0x00096C, "Member 'AB_Prj_BadgerGrape_Athena_C::XY_Override_on_Launch' has a wrong offset!");
static_assert(offsetof(AB_Prj_BadgerGrape_Athena_C, Z_Override_on_Launch) == 0x00096D, "Member 'AB_Prj_BadgerGrape_Athena_C::Z_Override_on_Launch' has a wrong offset!");
static_assert(offsetof(AB_Prj_BadgerGrape_Athena_C, Z_Override_if_in_Air) == 0x00096E, "Member 'AB_Prj_BadgerGrape_Athena_C::Z_Override_if_in_Air' has a wrong offset!");
static_assert(offsetof(AB_Prj_BadgerGrape_Athena_C, Grapple_Speed_MinMax) == 0x000970, "Member 'AB_Prj_BadgerGrape_Athena_C::Grapple_Speed_MinMax' has a wrong offset!");
static_assert(offsetof(AB_Prj_BadgerGrape_Athena_C, Grapple_Distance_MinMax) == 0x000978, "Member 'AB_Prj_BadgerGrape_Athena_C::Grapple_Distance_MinMax' has a wrong offset!");
static_assert(offsetof(AB_Prj_BadgerGrape_Athena_C, Player_Distance_to_Grapple) == 0x000980, "Member 'AB_Prj_BadgerGrape_Athena_C::Player_Distance_to_Grapple' has a wrong offset!");
static_assert(offsetof(AB_Prj_BadgerGrape_Athena_C, Power_Curve) == 0x000988, "Member 'AB_Prj_BadgerGrape_Athena_C::Power_Curve' has a wrong offset!");
static_assert(offsetof(AB_Prj_BadgerGrape_Athena_C, Glider_Cosmetic_Override) == 0x000990, "Member 'AB_Prj_BadgerGrape_Athena_C::Glider_Cosmetic_Override' has a wrong offset!");
static_assert(offsetof(AB_Prj_BadgerGrape_Athena_C, Has_Deployed) == 0x000998, "Member 'AB_Prj_BadgerGrape_Athena_C::Has_Deployed' has a wrong offset!");
static_assert(offsetof(AB_Prj_BadgerGrape_Athena_C, BadgerGrapeDelayFailsafe) == 0x00099C, "Member 'AB_Prj_BadgerGrape_Athena_C::BadgerGrapeDelayFailsafe' has a wrong offset!");
static_assert(offsetof(AB_Prj_BadgerGrape_Athena_C, Launch_Velocity) == 0x0009A0, "Member 'AB_Prj_BadgerGrape_Athena_C::Launch_Velocity' has a wrong offset!");
static_assert(offsetof(AB_Prj_BadgerGrape_Athena_C, MinimumUpwardLaunchVelocity) == 0x0009AC, "Member 'AB_Prj_BadgerGrape_Athena_C::MinimumUpwardLaunchVelocity' has a wrong offset!");
static_assert(offsetof(AB_Prj_BadgerGrape_Athena_C, BlockedAbilitiesWhileLaunching) == 0x0009B0, "Member 'AB_Prj_BadgerGrape_Athena_C::BlockedAbilitiesWhileLaunching' has a wrong offset!");
static_assert(offsetof(AB_Prj_BadgerGrape_Athena_C, BlockBuildingTag) == 0x0009D0, "Member 'AB_Prj_BadgerGrape_Athena_C::BlockBuildingTag' has a wrong offset!");

}

