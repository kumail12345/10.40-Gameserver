#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AthenaSeasonReward

#include "Basic.hpp"

#include "CommonInput_structs.hpp"
#include "Engine_structs.hpp"
#include "CommonUI_classes.hpp"
#include "UMG_structs.hpp"
#include "FortniteUI_structs.hpp"
#include "FortniteGame_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass AthenaSeasonReward.AthenaSeasonReward_C
// 0x00B0 (0x0BF0 - 0x0B40)
class UAthenaSeasonReward_C final : public UCommonButton
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0B40(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Fade;                                              // 0x0B48(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Intro;                                             // 0x0B50(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UCommonBorder*                          BorderOwned;                                       // 0x0B58(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Check;                                             // 0x0B60(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ClaimedImage;                                      // 0x0B68(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UFortMultiSizeItemCard*                 ItemCard;                                          // 0x0B70(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 LockedImage;                                       // 0x0B78(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       OwnedText;                                         // 0x0B80(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 RarityFlare;                                       // 0x0B88(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 RevealOverlay;                                     // 0x0B90(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SBoxOwned;                                         // 0x0B98(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 UnEarned_OverlayTint;                              // 0x0BA0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UFortItem*                              StrongItemToRepresent;                             // 0x0BA8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             SoundOnReveal;                                     // 0x0BB0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ViewOnHover;                                       // 0x0BB8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BB9[0x7];                                      // 0x0BB9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortItem*                              SecondaryItem;                                     // 0x0BC0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           ShowVariantTimer;                                  // 0x0BC8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           ResetVariantTimer;                                 // 0x0BD0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	int32                                         VariantIndex;                                      // 0x0BD8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          WaitingForVaultToChange;                           // 0x0BDC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BDD[0x3];                                      // 0x0BDD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         TimeBetweenVariants;                               // 0x0BE0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TimeBetweenVariantsRestart;                        // 0x0BE4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         VariantTimerIndex;                                 // 0x0BE8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void GetItem(class UFortItem** Result);
	void SetupQuantity(int32 Quantity);
	void ResetVariantToDefault();
	void CancelVariantTimer();
	void StartVariantTimer(float OverrideTimer);
	void GetAthenaCosmeticItemDefinition(class UAthenaCosmeticItemDefinition** AsAthena_Cosmetic_Item_Definition);
	void OnVaultItemsChanged(TArray<class UFortItem*>& Items);
	void ShowNextVariant();
	void StopCyclingVariants();
	void BeginCyclingVariants();
	void ViewInVaultByUser();
	void ViewInVault(const TArray<class UFortItem*>& Additional_Items);
	void SetSecondaryItem(class UFortItem* SecondaryItem_0);
	void EnableRarityFlare();
	void SetViewOnHover(bool ShouldViewOnHover);
	void SetState(bool Claimed, bool Locked, bool LevelAchieved, bool bOwned);
	void Setup(class UFortItem* InItemToRepresent, bool Claimed, bool Locked, bool LevelAchieved, bool bOwned, EFortItemCardSize ItemCardSize, int32 Quantity);
	void BP_OnHovered();
	void PlayIntro();
	void ViewItem();
	void BP_OnClicked();
	void ExecuteUbergraph_AthenaSeasonReward(int32 EntryPoint);

	void GetTemporaryItems(TArray<struct FFortCosmeticVariantPreviewElement>& Cosmetics, TArray<class UFortItem*>* Temporary_Items) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"AthenaSeasonReward_C">();
	}
	static class UAthenaSeasonReward_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAthenaSeasonReward_C>();
	}
};
static_assert(alignof(UAthenaSeasonReward_C) == 0x000008, "Wrong alignment on UAthenaSeasonReward_C");
static_assert(sizeof(UAthenaSeasonReward_C) == 0x000BF0, "Wrong size on UAthenaSeasonReward_C");
static_assert(offsetof(UAthenaSeasonReward_C, UberGraphFrame) == 0x000B40, "Member 'UAthenaSeasonReward_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UAthenaSeasonReward_C, Fade) == 0x000B48, "Member 'UAthenaSeasonReward_C::Fade' has a wrong offset!");
static_assert(offsetof(UAthenaSeasonReward_C, Intro) == 0x000B50, "Member 'UAthenaSeasonReward_C::Intro' has a wrong offset!");
static_assert(offsetof(UAthenaSeasonReward_C, BorderOwned) == 0x000B58, "Member 'UAthenaSeasonReward_C::BorderOwned' has a wrong offset!");
static_assert(offsetof(UAthenaSeasonReward_C, Check) == 0x000B60, "Member 'UAthenaSeasonReward_C::Check' has a wrong offset!");
static_assert(offsetof(UAthenaSeasonReward_C, ClaimedImage) == 0x000B68, "Member 'UAthenaSeasonReward_C::ClaimedImage' has a wrong offset!");
static_assert(offsetof(UAthenaSeasonReward_C, ItemCard) == 0x000B70, "Member 'UAthenaSeasonReward_C::ItemCard' has a wrong offset!");
static_assert(offsetof(UAthenaSeasonReward_C, LockedImage) == 0x000B78, "Member 'UAthenaSeasonReward_C::LockedImage' has a wrong offset!");
static_assert(offsetof(UAthenaSeasonReward_C, OwnedText) == 0x000B80, "Member 'UAthenaSeasonReward_C::OwnedText' has a wrong offset!");
static_assert(offsetof(UAthenaSeasonReward_C, RarityFlare) == 0x000B88, "Member 'UAthenaSeasonReward_C::RarityFlare' has a wrong offset!");
static_assert(offsetof(UAthenaSeasonReward_C, RevealOverlay) == 0x000B90, "Member 'UAthenaSeasonReward_C::RevealOverlay' has a wrong offset!");
static_assert(offsetof(UAthenaSeasonReward_C, SBoxOwned) == 0x000B98, "Member 'UAthenaSeasonReward_C::SBoxOwned' has a wrong offset!");
static_assert(offsetof(UAthenaSeasonReward_C, UnEarned_OverlayTint) == 0x000BA0, "Member 'UAthenaSeasonReward_C::UnEarned_OverlayTint' has a wrong offset!");
static_assert(offsetof(UAthenaSeasonReward_C, StrongItemToRepresent) == 0x000BA8, "Member 'UAthenaSeasonReward_C::StrongItemToRepresent' has a wrong offset!");
static_assert(offsetof(UAthenaSeasonReward_C, SoundOnReveal) == 0x000BB0, "Member 'UAthenaSeasonReward_C::SoundOnReveal' has a wrong offset!");
static_assert(offsetof(UAthenaSeasonReward_C, ViewOnHover) == 0x000BB8, "Member 'UAthenaSeasonReward_C::ViewOnHover' has a wrong offset!");
static_assert(offsetof(UAthenaSeasonReward_C, SecondaryItem) == 0x000BC0, "Member 'UAthenaSeasonReward_C::SecondaryItem' has a wrong offset!");
static_assert(offsetof(UAthenaSeasonReward_C, ShowVariantTimer) == 0x000BC8, "Member 'UAthenaSeasonReward_C::ShowVariantTimer' has a wrong offset!");
static_assert(offsetof(UAthenaSeasonReward_C, ResetVariantTimer) == 0x000BD0, "Member 'UAthenaSeasonReward_C::ResetVariantTimer' has a wrong offset!");
static_assert(offsetof(UAthenaSeasonReward_C, VariantIndex) == 0x000BD8, "Member 'UAthenaSeasonReward_C::VariantIndex' has a wrong offset!");
static_assert(offsetof(UAthenaSeasonReward_C, WaitingForVaultToChange) == 0x000BDC, "Member 'UAthenaSeasonReward_C::WaitingForVaultToChange' has a wrong offset!");
static_assert(offsetof(UAthenaSeasonReward_C, TimeBetweenVariants) == 0x000BE0, "Member 'UAthenaSeasonReward_C::TimeBetweenVariants' has a wrong offset!");
static_assert(offsetof(UAthenaSeasonReward_C, TimeBetweenVariantsRestart) == 0x000BE4, "Member 'UAthenaSeasonReward_C::TimeBetweenVariantsRestart' has a wrong offset!");
static_assert(offsetof(UAthenaSeasonReward_C, VariantTimerIndex) == 0x000BE8, "Member 'UAthenaSeasonReward_C::VariantTimerIndex' has a wrong offset!");

}

