#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SubgameSelect_v2

#include "Basic.hpp"

#include "SubGameSelectRotatorItems_structs.hpp"
#include "FortniteUI_structs.hpp"
#include "FortniteUI_classes.hpp"
#include "Engine_structs.hpp"
#include "FortniteGame_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass SubgameSelect_v2.SubgameSelect_v2_C
// 0x01B8 (0x04D0 - 0x0318)
class USubgameSelect_v2_C final : public UFortSubGameSelectBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0318(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       v2_Outro;                                          // 0x0320(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       SelectModeIdle;                                    // 0x0328(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       v2_Intro;                                          // 0x0330(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       FadeOutBGImage;                                    // 0x0338(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       FadeInBGImage;                                     // 0x0340(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       ShowCreativeImage;                                 // 0x0348(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       SaleANIM;                                          // 0x0350(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Button_Shine;                                      // 0x0358(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Pan_P1P2;                                          // 0x0360(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Pan_P1;                                            // 0x0368(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Pan_P2;                                            // 0x0370(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       ContractSeperator;                                 // 0x0378(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       ToggleCycle;                                       // 0x0380(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       SwitchTextures;                                    // 0x0388(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       ExpandSeperator;                                   // 0x0390(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       DescriptionIntro;                                  // 0x0398(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       SwitchMaterial;                                    // 0x03A0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class USubgameOptionButton_C*                 BattleRoyaleTile;                                  // 0x03A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 BGImage;                                           // 0x03B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UIconTextButton_C*                      ButtonBack;                                        // 0x03B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UIconTextButton_C*                      ButtonPurchase;                                    // 0x03C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UIconTextButton_C*                      ButtonRedeem;                                      // 0x03C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UConsoleProfileWidget_C*                ConsoleProfileWidget;                              // 0x03D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USubgameOptionButton_C*                 CreativeTile;                                      // 0x03D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_IdlePulse;                                   // 0x03E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USafeZone*                              SafeZone_1;                                        // 0x03E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USubgameOptionButton_C*                 SaveTheWorldTile;                                  // 0x03F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 SpeedLines;                                        // 0x03F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 SpinnerImage;                                      // 0x0400(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonWidgetSwitcher*                  SwitcherMenu;                                      // 0x0408(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       Text_Description;                                  // 0x0410(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonLazyImage*                       TitleImage;                                        // 0x0418(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          WasLastPlayForward;                                // 0x0420(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_421[0x7];                                      // 0x0421(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UProgressModalWidget_C*                 LeavingMatchmakingDialog;                          // 0x0428(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               MID_Keyart;                                        // 0x0430(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CycleTimer;                                        // 0x0438(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	int32                                         PveRotatorIndex;                                   // 0x0440(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_444[0x4];                                      // 0x0444(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FSubGameSelectRotatorItems>     Items;                                             // 0x0448(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	ESubGame                                      SelectedSubgame;                                   // 0x0458(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_459[0x7];                                      // 0x0459(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<EFortSubgameSelectOption, class UTexture2D*> SubGameCMSTexture;                                 // 0x0460(0x0050)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	bool                                          ShouldStartOnSTWUpsell;                            // 0x04B0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4B1[0x7];                                      // 0x04B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           SaleDelayAnim;                                     // 0x04B8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           ShineAnimDelay;                                    // 0x04C0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          SlideShownCampaign;                                // 0x04C8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          SlideShownBR;                                      // 0x04C9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          SlideShownCreative;                                // 0x04CA(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void AnimShineDelay();
	void AnimSaleDelay();
	void SetCMSTextureToKeyArt(const EFortSubgameSelectOption Key);
	void StartSubgameSelectMusic();
	void IsMinorShutdownWarningEnabled(bool* Enabled);
	void ShowUpsell();
	void InitializeRedeemButton();
	void InitializeShortDescriptions();
	bool IsBusyMatchmaking();
	void Update();
	void AdvanceRotator();
	void ResetKeyArtForMainMenu();
	void ToggleTimer(bool Enabled);
	void SafeSetSubGame(ESubGame SubGame);
	void SetDescriptionForSubGame(EFortSubgameSelectOption SubGame);
	void DialogResult_7EC32B25493920B99C7CF79EFDA28EB7(EFortDialogResult Result, class FName ResultName);
	void DialogResult_332144D14BEB8E8CF33D23B1E41D9870(EFortDialogResult Result, class FName ResultName);
	void DialogResult_1A2E7C4A4105C9DABC5FBA893C0E9939(EFortDialogResult Result, class FName ResultName);
	void DialogResult_60E26A51407B9D65CE40D19A874C53B1(EFortDialogResult Result, class FName ResultName);
	void CustomEvent_2();
	void OnRealMoneyPurchaseComleteHandler(bool bSuccess, const TArray<struct FPurchasedItemInfo>& PurchasedItems);
	void Destruct();
	void BndEvt__ButtonExit_K2Node_ComponentBoundEvent_193_CommonButtonClicked__DelegateSignature(class UCommonButton* Button);
	void ShowMinorShutdownMessage(bool bIsCampaign);
	void HandleMinorWarning_Campaign();
	void HandleMinorWarning_Athena();
	void BndEvt__ButtonRedeem_K2Node_ComponentBoundEvent_68_CommonButtonClicked__DelegateSignature(class UCommonButton* Button);
	void OnRedeemCodeComplete();
	void OnInputModeChanged(bool bUsingGamepad);
	void OnSubGameImageLoadedFromCMS(const EFortSubgameSelectOption SubGameOption, class UTexture2D* Image);
	void CustomEvent_1();
	void TryShowUpsellDireclty();
	void CustomEvent_0(EMatchmakingCompleteResult Result);
	void Clear_Party_and_Matchmaking_Delegates();
	void Try_And_Remove_The_Dialog();
	void BndEvt__ButtonPurchase_K2Node_ComponentBoundEvent_39_CommonButtonClicked__DelegateSignature(class UCommonButton* Button);
	void OnActivated();
	void Construct();
	void BndEvt__ButtonBack_K2Node_ComponentBoundEvent_128_CommonButtonClicked__DelegateSignature(class UCommonButton* Button);
	void Show_Busy_If_Async_Tasks_Still_Pending();
	void SwapBGImage();
	void PreConstruct(bool IsDesignTime);
	void BndEvt__BattleRoyaleTile_K2Node_ComponentBoundEvent_2_CommonButtonClicked__DelegateSignature(class UCommonButton* Button);
	void BndEvt__BattleRoyaleTile_K2Node_ComponentBoundEvent_4_CommonButtonClicked__DelegateSignature(class UCommonButton* Button);
	void BndEvt__SaveTheWorldTile_K2Node_ComponentBoundEvent_5_CommonButtonClicked__DelegateSignature(class UCommonButton* Button);
	void BndEvt__SaveTheWorldTile_K2Node_ComponentBoundEvent_6_CommonButtonClicked__DelegateSignature(class UCommonButton* Button);
	void BndEvt__CreativeTile_K2Node_ComponentBoundEvent_7_CommonButtonClicked__DelegateSignature(class UCommonButton* Button);
	void BndEvt__CreativeTile_K2Node_ComponentBoundEvent_8_CommonButtonClicked__DelegateSignature(class UCommonButton* Button);
	void SaveTheWorldSelected();
	void BattleRoyaleSelected();
	void CreativeSelected();
	void ExecuteUbergraph_SubgameSelect_v2(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"SubgameSelect_v2_C">();
	}
	static class USubgameSelect_v2_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<USubgameSelect_v2_C>();
	}
};
static_assert(alignof(USubgameSelect_v2_C) == 0x000008, "Wrong alignment on USubgameSelect_v2_C");
static_assert(sizeof(USubgameSelect_v2_C) == 0x0004D0, "Wrong size on USubgameSelect_v2_C");
static_assert(offsetof(USubgameSelect_v2_C, UberGraphFrame) == 0x000318, "Member 'USubgameSelect_v2_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(USubgameSelect_v2_C, v2_Outro) == 0x000320, "Member 'USubgameSelect_v2_C::v2_Outro' has a wrong offset!");
static_assert(offsetof(USubgameSelect_v2_C, SelectModeIdle) == 0x000328, "Member 'USubgameSelect_v2_C::SelectModeIdle' has a wrong offset!");
static_assert(offsetof(USubgameSelect_v2_C, v2_Intro) == 0x000330, "Member 'USubgameSelect_v2_C::v2_Intro' has a wrong offset!");
static_assert(offsetof(USubgameSelect_v2_C, FadeOutBGImage) == 0x000338, "Member 'USubgameSelect_v2_C::FadeOutBGImage' has a wrong offset!");
static_assert(offsetof(USubgameSelect_v2_C, FadeInBGImage) == 0x000340, "Member 'USubgameSelect_v2_C::FadeInBGImage' has a wrong offset!");
static_assert(offsetof(USubgameSelect_v2_C, ShowCreativeImage) == 0x000348, "Member 'USubgameSelect_v2_C::ShowCreativeImage' has a wrong offset!");
static_assert(offsetof(USubgameSelect_v2_C, SaleANIM) == 0x000350, "Member 'USubgameSelect_v2_C::SaleANIM' has a wrong offset!");
static_assert(offsetof(USubgameSelect_v2_C, Button_Shine) == 0x000358, "Member 'USubgameSelect_v2_C::Button_Shine' has a wrong offset!");
static_assert(offsetof(USubgameSelect_v2_C, Pan_P1P2) == 0x000360, "Member 'USubgameSelect_v2_C::Pan_P1P2' has a wrong offset!");
static_assert(offsetof(USubgameSelect_v2_C, Pan_P1) == 0x000368, "Member 'USubgameSelect_v2_C::Pan_P1' has a wrong offset!");
static_assert(offsetof(USubgameSelect_v2_C, Pan_P2) == 0x000370, "Member 'USubgameSelect_v2_C::Pan_P2' has a wrong offset!");
static_assert(offsetof(USubgameSelect_v2_C, ContractSeperator) == 0x000378, "Member 'USubgameSelect_v2_C::ContractSeperator' has a wrong offset!");
static_assert(offsetof(USubgameSelect_v2_C, ToggleCycle) == 0x000380, "Member 'USubgameSelect_v2_C::ToggleCycle' has a wrong offset!");
static_assert(offsetof(USubgameSelect_v2_C, SwitchTextures) == 0x000388, "Member 'USubgameSelect_v2_C::SwitchTextures' has a wrong offset!");
static_assert(offsetof(USubgameSelect_v2_C, ExpandSeperator) == 0x000390, "Member 'USubgameSelect_v2_C::ExpandSeperator' has a wrong offset!");
static_assert(offsetof(USubgameSelect_v2_C, DescriptionIntro) == 0x000398, "Member 'USubgameSelect_v2_C::DescriptionIntro' has a wrong offset!");
static_assert(offsetof(USubgameSelect_v2_C, SwitchMaterial) == 0x0003A0, "Member 'USubgameSelect_v2_C::SwitchMaterial' has a wrong offset!");
static_assert(offsetof(USubgameSelect_v2_C, BattleRoyaleTile) == 0x0003A8, "Member 'USubgameSelect_v2_C::BattleRoyaleTile' has a wrong offset!");
static_assert(offsetof(USubgameSelect_v2_C, BGImage) == 0x0003B0, "Member 'USubgameSelect_v2_C::BGImage' has a wrong offset!");
static_assert(offsetof(USubgameSelect_v2_C, ButtonBack) == 0x0003B8, "Member 'USubgameSelect_v2_C::ButtonBack' has a wrong offset!");
static_assert(offsetof(USubgameSelect_v2_C, ButtonPurchase) == 0x0003C0, "Member 'USubgameSelect_v2_C::ButtonPurchase' has a wrong offset!");
static_assert(offsetof(USubgameSelect_v2_C, ButtonRedeem) == 0x0003C8, "Member 'USubgameSelect_v2_C::ButtonRedeem' has a wrong offset!");
static_assert(offsetof(USubgameSelect_v2_C, ConsoleProfileWidget) == 0x0003D0, "Member 'USubgameSelect_v2_C::ConsoleProfileWidget' has a wrong offset!");
static_assert(offsetof(USubgameSelect_v2_C, CreativeTile) == 0x0003D8, "Member 'USubgameSelect_v2_C::CreativeTile' has a wrong offset!");
static_assert(offsetof(USubgameSelect_v2_C, Image_IdlePulse) == 0x0003E0, "Member 'USubgameSelect_v2_C::Image_IdlePulse' has a wrong offset!");
static_assert(offsetof(USubgameSelect_v2_C, SafeZone_1) == 0x0003E8, "Member 'USubgameSelect_v2_C::SafeZone_1' has a wrong offset!");
static_assert(offsetof(USubgameSelect_v2_C, SaveTheWorldTile) == 0x0003F0, "Member 'USubgameSelect_v2_C::SaveTheWorldTile' has a wrong offset!");
static_assert(offsetof(USubgameSelect_v2_C, SpeedLines) == 0x0003F8, "Member 'USubgameSelect_v2_C::SpeedLines' has a wrong offset!");
static_assert(offsetof(USubgameSelect_v2_C, SpinnerImage) == 0x000400, "Member 'USubgameSelect_v2_C::SpinnerImage' has a wrong offset!");
static_assert(offsetof(USubgameSelect_v2_C, SwitcherMenu) == 0x000408, "Member 'USubgameSelect_v2_C::SwitcherMenu' has a wrong offset!");
static_assert(offsetof(USubgameSelect_v2_C, Text_Description) == 0x000410, "Member 'USubgameSelect_v2_C::Text_Description' has a wrong offset!");
static_assert(offsetof(USubgameSelect_v2_C, TitleImage) == 0x000418, "Member 'USubgameSelect_v2_C::TitleImage' has a wrong offset!");
static_assert(offsetof(USubgameSelect_v2_C, WasLastPlayForward) == 0x000420, "Member 'USubgameSelect_v2_C::WasLastPlayForward' has a wrong offset!");
static_assert(offsetof(USubgameSelect_v2_C, LeavingMatchmakingDialog) == 0x000428, "Member 'USubgameSelect_v2_C::LeavingMatchmakingDialog' has a wrong offset!");
static_assert(offsetof(USubgameSelect_v2_C, MID_Keyart) == 0x000430, "Member 'USubgameSelect_v2_C::MID_Keyart' has a wrong offset!");
static_assert(offsetof(USubgameSelect_v2_C, CycleTimer) == 0x000438, "Member 'USubgameSelect_v2_C::CycleTimer' has a wrong offset!");
static_assert(offsetof(USubgameSelect_v2_C, PveRotatorIndex) == 0x000440, "Member 'USubgameSelect_v2_C::PveRotatorIndex' has a wrong offset!");
static_assert(offsetof(USubgameSelect_v2_C, Items) == 0x000448, "Member 'USubgameSelect_v2_C::Items' has a wrong offset!");
static_assert(offsetof(USubgameSelect_v2_C, SelectedSubgame) == 0x000458, "Member 'USubgameSelect_v2_C::SelectedSubgame' has a wrong offset!");
static_assert(offsetof(USubgameSelect_v2_C, SubGameCMSTexture) == 0x000460, "Member 'USubgameSelect_v2_C::SubGameCMSTexture' has a wrong offset!");
static_assert(offsetof(USubgameSelect_v2_C, ShouldStartOnSTWUpsell) == 0x0004B0, "Member 'USubgameSelect_v2_C::ShouldStartOnSTWUpsell' has a wrong offset!");
static_assert(offsetof(USubgameSelect_v2_C, SaleDelayAnim) == 0x0004B8, "Member 'USubgameSelect_v2_C::SaleDelayAnim' has a wrong offset!");
static_assert(offsetof(USubgameSelect_v2_C, ShineAnimDelay) == 0x0004C0, "Member 'USubgameSelect_v2_C::ShineAnimDelay' has a wrong offset!");
static_assert(offsetof(USubgameSelect_v2_C, SlideShownCampaign) == 0x0004C8, "Member 'USubgameSelect_v2_C::SlideShownCampaign' has a wrong offset!");
static_assert(offsetof(USubgameSelect_v2_C, SlideShownBR) == 0x0004C9, "Member 'USubgameSelect_v2_C::SlideShownBR' has a wrong offset!");
static_assert(offsetof(USubgameSelect_v2_C, SlideShownCreative) == 0x0004CA, "Member 'USubgameSelect_v2_C::SlideShownCreative' has a wrong offset!");

}

