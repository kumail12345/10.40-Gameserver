#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: DA_BoostJumpPack

#include "Basic.hpp"

#include "CommonInput_structs.hpp"
#include "Engine_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "FortniteGame_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass DA_BoostJumpPack.DA_BoostJumpPack_C
// 0x0068 (0x0A38 - 0x09D0)
class ADA_BoostJumpPack_C final : public AFortCustomizableAbilityDecoTool
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x09D0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FGameplayTagContainer                  ErrorReason;                                       // 0x09D8(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FGameplayTagContainer                  ErrorReasonGamepad;                                // 0x09F8(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FGameplayTagContainer                  ErrorCannotUse;                                    // 0x0A18(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void ExecuteUbergraph_DA_BoostJumpPack(int32 EntryPoint);
	void BPPressTrigger(class AFortDecoHelper* FortDecoHelper);
	void RaiseUsageError(const struct FGameplayTagContainer& FailedReason);
	void IsOnGround(bool* bOnGround);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"DA_BoostJumpPack_C">();
	}
	static class ADA_BoostJumpPack_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ADA_BoostJumpPack_C>();
	}
};
static_assert(alignof(ADA_BoostJumpPack_C) == 0x000008, "Wrong alignment on ADA_BoostJumpPack_C");
static_assert(sizeof(ADA_BoostJumpPack_C) == 0x000A38, "Wrong size on ADA_BoostJumpPack_C");
static_assert(offsetof(ADA_BoostJumpPack_C, UberGraphFrame) == 0x0009D0, "Member 'ADA_BoostJumpPack_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ADA_BoostJumpPack_C, ErrorReason) == 0x0009D8, "Member 'ADA_BoostJumpPack_C::ErrorReason' has a wrong offset!");
static_assert(offsetof(ADA_BoostJumpPack_C, ErrorReasonGamepad) == 0x0009F8, "Member 'ADA_BoostJumpPack_C::ErrorReasonGamepad' has a wrong offset!");
static_assert(offsetof(ADA_BoostJumpPack_C, ErrorCannotUse) == 0x000A18, "Member 'ADA_BoostJumpPack_C::ErrorCannotUse' has a wrong offset!");

}

