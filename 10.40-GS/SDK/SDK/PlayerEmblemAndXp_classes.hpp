#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PlayerEmblemAndXp

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FortniteUI_classes.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass PlayerEmblemAndXp.PlayerEmblemAndXp_C
// 0x0030 (0x0298 - 0x0268)
class UPlayerEmblemAndXp_C final : public UFortAccountWidgetBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0268(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UAthenaBattlePassTrackerWidget_C*       AthenaBattlePassTrackerWidget;                     // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UAthenaPlayerLevel_C*                   AthenaPlayerLevel;                                 // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         MiniReward1HB;                                     // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UDailyQuestRewardInfo_C*                MiniReward1Info;                                   // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       SeasonNameLabel;                                   // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	void SetupReward(class UWidget* Container, class UTextBlock* RewardText, class UDailyQuestRewardInfo_C* RewardInfoWidget, bool HasReward, const struct FFortItemQuantityPair& RewardItem, int32 LevelRewarded);
	void Refresh(struct FFortPublicAccountInfo& FortPublicAccountInfo);
	void Construct();
	void OnAccountInfoChanged(const struct FFortPublicAccountInfo& Result);
	void ExecuteUbergraph_PlayerEmblemAndXp(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"PlayerEmblemAndXp_C">();
	}
	static class UPlayerEmblemAndXp_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPlayerEmblemAndXp_C>();
	}
};
static_assert(alignof(UPlayerEmblemAndXp_C) == 0x000008, "Wrong alignment on UPlayerEmblemAndXp_C");
static_assert(sizeof(UPlayerEmblemAndXp_C) == 0x000298, "Wrong size on UPlayerEmblemAndXp_C");
static_assert(offsetof(UPlayerEmblemAndXp_C, UberGraphFrame) == 0x000268, "Member 'UPlayerEmblemAndXp_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UPlayerEmblemAndXp_C, AthenaBattlePassTrackerWidget) == 0x000270, "Member 'UPlayerEmblemAndXp_C::AthenaBattlePassTrackerWidget' has a wrong offset!");
static_assert(offsetof(UPlayerEmblemAndXp_C, AthenaPlayerLevel) == 0x000278, "Member 'UPlayerEmblemAndXp_C::AthenaPlayerLevel' has a wrong offset!");
static_assert(offsetof(UPlayerEmblemAndXp_C, MiniReward1HB) == 0x000280, "Member 'UPlayerEmblemAndXp_C::MiniReward1HB' has a wrong offset!");
static_assert(offsetof(UPlayerEmblemAndXp_C, MiniReward1Info) == 0x000288, "Member 'UPlayerEmblemAndXp_C::MiniReward1Info' has a wrong offset!");
static_assert(offsetof(UPlayerEmblemAndXp_C, SeasonNameLabel) == 0x000290, "Member 'UPlayerEmblemAndXp_C::SeasonNameLabel' has a wrong offset!");

}

