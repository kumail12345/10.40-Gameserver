#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AthenaStoreReward

#include "Basic.hpp"

#include "AthenaStoreReward_classes.hpp"
#include "AthenaStoreReward_parameters.hpp"


namespace SDK
{

// Function AthenaStoreReward.AthenaStoreReward_C.GetItem
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UFortItem*                        Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UAthenaStoreReward_C::GetItem(class UFortItem** Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaStoreReward_C", "GetItem");

	Params::AthenaStoreReward_C_GetItem Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function AthenaStoreReward.AthenaStoreReward_C.SetupQuantity
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Quantity                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UAthenaStoreReward_C::SetupQuantity(int32 Quantity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaStoreReward_C", "SetupQuantity");

	Params::AthenaStoreReward_C_SetupQuantity Parms{};

	Parms.Quantity = Quantity;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AthenaStoreReward.AthenaStoreReward_C.ResetVariantToDefault
// (Public, BlueprintCallable, BlueprintEvent)

void UAthenaStoreReward_C::ResetVariantToDefault()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaStoreReward_C", "ResetVariantToDefault");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AthenaStoreReward.AthenaStoreReward_C.CancelVariantTimer
// (Public, BlueprintCallable, BlueprintEvent)

void UAthenaStoreReward_C::CancelVariantTimer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaStoreReward_C", "CancelVariantTimer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AthenaStoreReward.AthenaStoreReward_C.StartVariantTimer
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   OverrideTimer                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UAthenaStoreReward_C::StartVariantTimer(float OverrideTimer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaStoreReward_C", "StartVariantTimer");

	Params::AthenaStoreReward_C_StartVariantTimer Parms{};

	Parms.OverrideTimer = OverrideTimer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AthenaStoreReward.AthenaStoreReward_C.GetAthenaCosmeticItemDefinition
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UAthenaCosmeticItemDefinition*    AsAthena_Cosmetic_Item_Definition                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UAthenaStoreReward_C::GetAthenaCosmeticItemDefinition(class UAthenaCosmeticItemDefinition** AsAthena_Cosmetic_Item_Definition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaStoreReward_C", "GetAthenaCosmeticItemDefinition");

	Params::AthenaStoreReward_C_GetAthenaCosmeticItemDefinition Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AsAthena_Cosmetic_Item_Definition != nullptr)
		*AsAthena_Cosmetic_Item_Definition = Parms.AsAthena_Cosmetic_Item_Definition;
}


// Function AthenaStoreReward.AthenaStoreReward_C.OnVaultItemsChanged
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class UFortItem*>                Items                                                  (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)

void UAthenaStoreReward_C::OnVaultItemsChanged(TArray<class UFortItem*>& Items)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaStoreReward_C", "OnVaultItemsChanged");

	Params::AthenaStoreReward_C_OnVaultItemsChanged Parms{};

	Parms.Items = std::move(Items);

	UObject::ProcessEvent(Func, &Parms);

	Items = std::move(Parms.Items);
}


// Function AthenaStoreReward.AthenaStoreReward_C.ShowNextVariant
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UAthenaStoreReward_C::ShowNextVariant()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaStoreReward_C", "ShowNextVariant");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AthenaStoreReward.AthenaStoreReward_C.StopCyclingVariants
// (Public, BlueprintCallable, BlueprintEvent)

void UAthenaStoreReward_C::StopCyclingVariants()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaStoreReward_C", "StopCyclingVariants");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AthenaStoreReward.AthenaStoreReward_C.BeginCyclingVariants
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UAthenaStoreReward_C::BeginCyclingVariants()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaStoreReward_C", "BeginCyclingVariants");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AthenaStoreReward.AthenaStoreReward_C.ViewInVaultByUser
// (Private, BlueprintCallable, BlueprintEvent)

void UAthenaStoreReward_C::ViewInVaultByUser()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaStoreReward_C", "ViewInVaultByUser");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AthenaStoreReward.AthenaStoreReward_C.ViewInVault
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class UFortItem*>                Additional_Items                                       (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)

void UAthenaStoreReward_C::ViewInVault(const TArray<class UFortItem*>& Additional_Items)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaStoreReward_C", "ViewInVault");

	Params::AthenaStoreReward_C_ViewInVault Parms{};

	Parms.Additional_Items = std::move(Additional_Items);

	UObject::ProcessEvent(Func, &Parms);
}


// Function AthenaStoreReward.AthenaStoreReward_C.SetSecondaryItem
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UFortItem*                        SecondaryItem_0                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UAthenaStoreReward_C::SetSecondaryItem(class UFortItem* SecondaryItem_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaStoreReward_C", "SetSecondaryItem");

	Params::AthenaStoreReward_C_SetSecondaryItem Parms{};

	Parms.SecondaryItem_0 = SecondaryItem_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AthenaStoreReward.AthenaStoreReward_C.EnableRarityFlare
// (Public, BlueprintCallable, BlueprintEvent)

void UAthenaStoreReward_C::EnableRarityFlare()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaStoreReward_C", "EnableRarityFlare");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AthenaStoreReward.AthenaStoreReward_C.SetViewOnHover
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ShouldViewOnHover                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UAthenaStoreReward_C::SetViewOnHover(bool ShouldViewOnHover)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaStoreReward_C", "SetViewOnHover");

	Params::AthenaStoreReward_C_SetViewOnHover Parms{};

	Parms.ShouldViewOnHover = ShouldViewOnHover;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AthenaStoreReward.AthenaStoreReward_C.SetState
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Claimed                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Locked                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    LevelAchieved                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bOwned                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UAthenaStoreReward_C::SetState(bool Claimed, bool Locked, bool LevelAchieved, bool bOwned)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaStoreReward_C", "SetState");

	Params::AthenaStoreReward_C_SetState Parms{};

	Parms.Claimed = Claimed;
	Parms.Locked = Locked;
	Parms.LevelAchieved = LevelAchieved;
	Parms.bOwned = bOwned;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AthenaStoreReward.AthenaStoreReward_C.Setup
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UFortItem*                        InItemToRepresent                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Claimed                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Locked                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    LevelAchieved                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bOwned                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// EFortItemCardSize                       ItemCardSize                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Quantity                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UAthenaStoreReward_C::Setup(class UFortItem* InItemToRepresent, bool Claimed, bool Locked, bool LevelAchieved, bool bOwned, EFortItemCardSize ItemCardSize, int32 Quantity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaStoreReward_C", "Setup");

	Params::AthenaStoreReward_C_Setup Parms{};

	Parms.InItemToRepresent = InItemToRepresent;
	Parms.Claimed = Claimed;
	Parms.Locked = Locked;
	Parms.LevelAchieved = LevelAchieved;
	Parms.bOwned = bOwned;
	Parms.ItemCardSize = ItemCardSize;
	Parms.Quantity = Quantity;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AthenaStoreReward.AthenaStoreReward_C.BP_OnHovered
// (Event, Protected, BlueprintEvent)

void UAthenaStoreReward_C::BP_OnHovered()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaStoreReward_C", "BP_OnHovered");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AthenaStoreReward.AthenaStoreReward_C.PlayIntro
// (BlueprintCallable, BlueprintEvent)

void UAthenaStoreReward_C::PlayIntro()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaStoreReward_C", "PlayIntro");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AthenaStoreReward.AthenaStoreReward_C.ViewItem
// (BlueprintCallable, BlueprintEvent)

void UAthenaStoreReward_C::ViewItem()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaStoreReward_C", "ViewItem");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AthenaStoreReward.AthenaStoreReward_C.BP_OnClicked
// (Event, Protected, BlueprintEvent)

void UAthenaStoreReward_C::BP_OnClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaStoreReward_C", "BP_OnClicked");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AthenaStoreReward.AthenaStoreReward_C.ExecuteUbergraph_AthenaStoreReward
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UAthenaStoreReward_C::ExecuteUbergraph_AthenaStoreReward(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaStoreReward_C", "ExecuteUbergraph_AthenaStoreReward");

	Params::AthenaStoreReward_C_ExecuteUbergraph_AthenaStoreReward Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AthenaStoreReward.AthenaStoreReward_C.GetTemporaryItems
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// TArray<struct FFortCosmeticVariantPreviewElement>Cosmetics                                              (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
// TArray<class UFortItem*>                Temporary_Items                                        (Parm, OutParm, ZeroConstructor)

void UAthenaStoreReward_C::GetTemporaryItems(TArray<struct FFortCosmeticVariantPreviewElement>& Cosmetics, TArray<class UFortItem*>* Temporary_Items) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaStoreReward_C", "GetTemporaryItems");

	Params::AthenaStoreReward_C_GetTemporaryItems Parms{};

	Parms.Cosmetics = std::move(Cosmetics);

	UObject::ProcessEvent(Func, &Parms);

	Cosmetics = std::move(Parms.Cosmetics);

	if (Temporary_Items != nullptr)
		*Temporary_Items = std::move(Parms.Temporary_Items);
}

}

