#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AthenaFrontEndRadialPicker

#include "Basic.hpp"

#include "CommonInput_structs.hpp"
#include "Engine_structs.hpp"
#include "FortniteGame_structs.hpp"
#include "FortniteUI_classes.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass AthenaFrontEndRadialPicker.AthenaFrontEndRadialPicker_C
// 0x0140 (0x0388 - 0x0248)
class UAthenaFrontEndRadialPicker_C final : public UFortRadialPicker
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0248(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UCanvasPanel*                           CanvasPanel_0;                                     // 0x0250(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               CenterBox;                                         // 0x0258(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           ClickCatcher;                                      // 0x0260(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       CurrentWheelDisplayLabel;                          // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_0;                                           // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ImageRadialPointer;                                // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UKeybindWidget_C*                       KeybindPickerConfirm;                              // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UKeybindWidget_C*                       NextPageKeyBind;                                   // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        NextPageSwitcher;                                  // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               NextSizeBox;                                       // 0x0298(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UIconTextButton_C*                      NextWheelButton;                                   // 0x02A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class URadialPickerItem_C*                    PickerOption0;                                     // 0x02A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class URadialPickerItem_C*                    PickerOption1;                                     // 0x02B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class URadialPickerItem_C*                    PickerOption2;                                     // 0x02B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class URadialPickerItem_C*                    PickerOption3;                                     // 0x02C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class URadialPickerItem_C*                    PickerOption4;                                     // 0x02C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class URadialPickerItem_C*                    PickerOption5;                                     // 0x02D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class URadialPickerItem_C*                    PickerOption6;                                     // 0x02D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class URadialPickerItem_C*                    PickerOption7;                                     // 0x02E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UIconTextButton_C*                      PreviousWheelButton;                               // 0x02E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UKeybindWidget_C*                       PrevPageKeyBind;                                   // 0x02F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        PrevPageSwitcher;                                  // 0x02F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               PrevSizeBox;                                       // 0x0300(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SizeBoxNextWheelButton;                            // 0x0308(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SizeBoxPreviousWheelButton;                        // 0x0310(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       Text_OK;                                           // 0x0318(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonBorder*                          WheelTitleBar;                                     // 0x0320(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	int32                                         ActiveOption;                                      // 0x0328(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NumOptions;                                        // 0x032C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         YAxisMultiplier;                                   // 0x0330(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          PickerClosing;                                     // 0x0334(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	EFortPickerMode                               PickerMode;                                        // 0x0335(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EControllerAnalogStick                        Thumbstick;                                        // 0x0336(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_337[0x1];                                      // 0x0337(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             SoundOnAccept;                                     // 0x0338(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             SoundOnCancel;                                     // 0x0340(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             SoundOnSelect;                                     // 0x0348(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class URadialPickerItem_C*>            PickerOptions;                                     // 0x0350(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	bool                                          bUsingGamepad;                                     // 0x0360(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bIgnoringMoveInput;                                // 0x0361(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bIgnoringLookInput;                                // 0x0362(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_363[0x1];                                      // 0x0363(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CurrentPointerAngle;                               // 0x0364(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bShowingMouseCursor;                               // 0x0368(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_369[0x7];                                      // 0x0369(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void()>              Picker_Closing;                                    // 0x0370(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          bIsUsingTouch;                                     // 0x0380(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)

public:
	struct FEventReply OnMouseWheel(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	struct FEventReply OnMouseButtonDown(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	struct FEventReply OnTouchEnded(const struct FGeometry& MyGeometry, const struct FPointerEvent& InTouchEvent);
	void On_Item_Touched(class URadialPickerItem_C* Touched_Item);
	void SetShowMouseCursor(bool InShowMouseCursor);
	void SetPointerDirection();
	void MoveActiveOption(int32 MoveOptionDirection);
	void ResetInput();
	void CanConfirm(bool* CanAccept);
	void SetInputMode();
	void SetActiveOption(int32 Option);
	void ClearActiveOption();
	void GetOptionAngle(int32 Option, float* Angle);
	void GetAngleDifference(float AngleA, float AngleB, float* Difference);
	void GetOptionPosition(int32 Option, struct FVector2D* Position);
	void InitializePicker(EFortPickerMode PickerMode_0, int32 InitialOption);
	void Construct();
	void Event_AcceptOption();
	void Event_CancelPicker();
	void ClosePicker();
	void AcceptChosenOption(int32 PickerOption);
	void OnPickerRefreshItems();
	void BndEvt__PickerOption0_K2Node_ComponentBoundEvent_2_On_Item_Touched__DelegateSignature(class URadialPickerItem_C* Picked_Option);
	void BndEvt__PickerOption1_K2Node_ComponentBoundEvent_8_On_Item_Touched__DelegateSignature(class URadialPickerItem_C* Picked_Option);
	void BndEvt__PickerOption2_K2Node_ComponentBoundEvent_9_On_Item_Touched__DelegateSignature(class URadialPickerItem_C* Picked_Option);
	void BndEvt__PickerOption3_K2Node_ComponentBoundEvent_12_On_Item_Touched__DelegateSignature(class URadialPickerItem_C* Picked_Option);
	void BndEvt__PickerOption4_K2Node_ComponentBoundEvent_16_On_Item_Touched__DelegateSignature(class URadialPickerItem_C* Picked_Option);
	void BndEvt__PickerOption5_K2Node_ComponentBoundEvent_21_On_Item_Touched__DelegateSignature(class URadialPickerItem_C* Picked_Option);
	void BndEvt__PickerOption6_K2Node_ComponentBoundEvent_27_On_Item_Touched__DelegateSignature(class URadialPickerItem_C* Picked_Option);
	void BndEvt__PickerOption7_K2Node_ComponentBoundEvent_34_On_Item_Touched__DelegateSignature(class URadialPickerItem_C* Picked_Option);
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void BndEvt__NextWheelButton_K2Node_ComponentBoundEvent_0_CommonButtonClicked__DelegateSignature(class UCommonButton* Button);
	void BndEvt__PreviousWheelButton_K2Node_ComponentBoundEvent_1_CommonButtonClicked__DelegateSignature(class UCommonButton* Button);
	void ExecuteUbergraph_AthenaFrontEndRadialPicker(int32 EntryPoint);

	void IsGamepadInPickerDeadZone(bool* bIsInDeadZone) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"AthenaFrontEndRadialPicker_C">();
	}
	static class UAthenaFrontEndRadialPicker_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAthenaFrontEndRadialPicker_C>();
	}
};
static_assert(alignof(UAthenaFrontEndRadialPicker_C) == 0x000008, "Wrong alignment on UAthenaFrontEndRadialPicker_C");
static_assert(sizeof(UAthenaFrontEndRadialPicker_C) == 0x000388, "Wrong size on UAthenaFrontEndRadialPicker_C");
static_assert(offsetof(UAthenaFrontEndRadialPicker_C, UberGraphFrame) == 0x000248, "Member 'UAthenaFrontEndRadialPicker_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UAthenaFrontEndRadialPicker_C, CanvasPanel_0) == 0x000250, "Member 'UAthenaFrontEndRadialPicker_C::CanvasPanel_0' has a wrong offset!");
static_assert(offsetof(UAthenaFrontEndRadialPicker_C, CenterBox) == 0x000258, "Member 'UAthenaFrontEndRadialPicker_C::CenterBox' has a wrong offset!");
static_assert(offsetof(UAthenaFrontEndRadialPicker_C, ClickCatcher) == 0x000260, "Member 'UAthenaFrontEndRadialPicker_C::ClickCatcher' has a wrong offset!");
static_assert(offsetof(UAthenaFrontEndRadialPicker_C, CurrentWheelDisplayLabel) == 0x000268, "Member 'UAthenaFrontEndRadialPicker_C::CurrentWheelDisplayLabel' has a wrong offset!");
static_assert(offsetof(UAthenaFrontEndRadialPicker_C, Image_0) == 0x000270, "Member 'UAthenaFrontEndRadialPicker_C::Image_0' has a wrong offset!");
static_assert(offsetof(UAthenaFrontEndRadialPicker_C, ImageRadialPointer) == 0x000278, "Member 'UAthenaFrontEndRadialPicker_C::ImageRadialPointer' has a wrong offset!");
static_assert(offsetof(UAthenaFrontEndRadialPicker_C, KeybindPickerConfirm) == 0x000280, "Member 'UAthenaFrontEndRadialPicker_C::KeybindPickerConfirm' has a wrong offset!");
static_assert(offsetof(UAthenaFrontEndRadialPicker_C, NextPageKeyBind) == 0x000288, "Member 'UAthenaFrontEndRadialPicker_C::NextPageKeyBind' has a wrong offset!");
static_assert(offsetof(UAthenaFrontEndRadialPicker_C, NextPageSwitcher) == 0x000290, "Member 'UAthenaFrontEndRadialPicker_C::NextPageSwitcher' has a wrong offset!");
static_assert(offsetof(UAthenaFrontEndRadialPicker_C, NextSizeBox) == 0x000298, "Member 'UAthenaFrontEndRadialPicker_C::NextSizeBox' has a wrong offset!");
static_assert(offsetof(UAthenaFrontEndRadialPicker_C, NextWheelButton) == 0x0002A0, "Member 'UAthenaFrontEndRadialPicker_C::NextWheelButton' has a wrong offset!");
static_assert(offsetof(UAthenaFrontEndRadialPicker_C, PickerOption0) == 0x0002A8, "Member 'UAthenaFrontEndRadialPicker_C::PickerOption0' has a wrong offset!");
static_assert(offsetof(UAthenaFrontEndRadialPicker_C, PickerOption1) == 0x0002B0, "Member 'UAthenaFrontEndRadialPicker_C::PickerOption1' has a wrong offset!");
static_assert(offsetof(UAthenaFrontEndRadialPicker_C, PickerOption2) == 0x0002B8, "Member 'UAthenaFrontEndRadialPicker_C::PickerOption2' has a wrong offset!");
static_assert(offsetof(UAthenaFrontEndRadialPicker_C, PickerOption3) == 0x0002C0, "Member 'UAthenaFrontEndRadialPicker_C::PickerOption3' has a wrong offset!");
static_assert(offsetof(UAthenaFrontEndRadialPicker_C, PickerOption4) == 0x0002C8, "Member 'UAthenaFrontEndRadialPicker_C::PickerOption4' has a wrong offset!");
static_assert(offsetof(UAthenaFrontEndRadialPicker_C, PickerOption5) == 0x0002D0, "Member 'UAthenaFrontEndRadialPicker_C::PickerOption5' has a wrong offset!");
static_assert(offsetof(UAthenaFrontEndRadialPicker_C, PickerOption6) == 0x0002D8, "Member 'UAthenaFrontEndRadialPicker_C::PickerOption6' has a wrong offset!");
static_assert(offsetof(UAthenaFrontEndRadialPicker_C, PickerOption7) == 0x0002E0, "Member 'UAthenaFrontEndRadialPicker_C::PickerOption7' has a wrong offset!");
static_assert(offsetof(UAthenaFrontEndRadialPicker_C, PreviousWheelButton) == 0x0002E8, "Member 'UAthenaFrontEndRadialPicker_C::PreviousWheelButton' has a wrong offset!");
static_assert(offsetof(UAthenaFrontEndRadialPicker_C, PrevPageKeyBind) == 0x0002F0, "Member 'UAthenaFrontEndRadialPicker_C::PrevPageKeyBind' has a wrong offset!");
static_assert(offsetof(UAthenaFrontEndRadialPicker_C, PrevPageSwitcher) == 0x0002F8, "Member 'UAthenaFrontEndRadialPicker_C::PrevPageSwitcher' has a wrong offset!");
static_assert(offsetof(UAthenaFrontEndRadialPicker_C, PrevSizeBox) == 0x000300, "Member 'UAthenaFrontEndRadialPicker_C::PrevSizeBox' has a wrong offset!");
static_assert(offsetof(UAthenaFrontEndRadialPicker_C, SizeBoxNextWheelButton) == 0x000308, "Member 'UAthenaFrontEndRadialPicker_C::SizeBoxNextWheelButton' has a wrong offset!");
static_assert(offsetof(UAthenaFrontEndRadialPicker_C, SizeBoxPreviousWheelButton) == 0x000310, "Member 'UAthenaFrontEndRadialPicker_C::SizeBoxPreviousWheelButton' has a wrong offset!");
static_assert(offsetof(UAthenaFrontEndRadialPicker_C, Text_OK) == 0x000318, "Member 'UAthenaFrontEndRadialPicker_C::Text_OK' has a wrong offset!");
static_assert(offsetof(UAthenaFrontEndRadialPicker_C, WheelTitleBar) == 0x000320, "Member 'UAthenaFrontEndRadialPicker_C::WheelTitleBar' has a wrong offset!");
static_assert(offsetof(UAthenaFrontEndRadialPicker_C, ActiveOption) == 0x000328, "Member 'UAthenaFrontEndRadialPicker_C::ActiveOption' has a wrong offset!");
static_assert(offsetof(UAthenaFrontEndRadialPicker_C, NumOptions) == 0x00032C, "Member 'UAthenaFrontEndRadialPicker_C::NumOptions' has a wrong offset!");
static_assert(offsetof(UAthenaFrontEndRadialPicker_C, YAxisMultiplier) == 0x000330, "Member 'UAthenaFrontEndRadialPicker_C::YAxisMultiplier' has a wrong offset!");
static_assert(offsetof(UAthenaFrontEndRadialPicker_C, PickerClosing) == 0x000334, "Member 'UAthenaFrontEndRadialPicker_C::PickerClosing' has a wrong offset!");
static_assert(offsetof(UAthenaFrontEndRadialPicker_C, PickerMode) == 0x000335, "Member 'UAthenaFrontEndRadialPicker_C::PickerMode' has a wrong offset!");
static_assert(offsetof(UAthenaFrontEndRadialPicker_C, Thumbstick) == 0x000336, "Member 'UAthenaFrontEndRadialPicker_C::Thumbstick' has a wrong offset!");
static_assert(offsetof(UAthenaFrontEndRadialPicker_C, SoundOnAccept) == 0x000338, "Member 'UAthenaFrontEndRadialPicker_C::SoundOnAccept' has a wrong offset!");
static_assert(offsetof(UAthenaFrontEndRadialPicker_C, SoundOnCancel) == 0x000340, "Member 'UAthenaFrontEndRadialPicker_C::SoundOnCancel' has a wrong offset!");
static_assert(offsetof(UAthenaFrontEndRadialPicker_C, SoundOnSelect) == 0x000348, "Member 'UAthenaFrontEndRadialPicker_C::SoundOnSelect' has a wrong offset!");
static_assert(offsetof(UAthenaFrontEndRadialPicker_C, PickerOptions) == 0x000350, "Member 'UAthenaFrontEndRadialPicker_C::PickerOptions' has a wrong offset!");
static_assert(offsetof(UAthenaFrontEndRadialPicker_C, bUsingGamepad) == 0x000360, "Member 'UAthenaFrontEndRadialPicker_C::bUsingGamepad' has a wrong offset!");
static_assert(offsetof(UAthenaFrontEndRadialPicker_C, bIgnoringMoveInput) == 0x000361, "Member 'UAthenaFrontEndRadialPicker_C::bIgnoringMoveInput' has a wrong offset!");
static_assert(offsetof(UAthenaFrontEndRadialPicker_C, bIgnoringLookInput) == 0x000362, "Member 'UAthenaFrontEndRadialPicker_C::bIgnoringLookInput' has a wrong offset!");
static_assert(offsetof(UAthenaFrontEndRadialPicker_C, CurrentPointerAngle) == 0x000364, "Member 'UAthenaFrontEndRadialPicker_C::CurrentPointerAngle' has a wrong offset!");
static_assert(offsetof(UAthenaFrontEndRadialPicker_C, bShowingMouseCursor) == 0x000368, "Member 'UAthenaFrontEndRadialPicker_C::bShowingMouseCursor' has a wrong offset!");
static_assert(offsetof(UAthenaFrontEndRadialPicker_C, Picker_Closing) == 0x000370, "Member 'UAthenaFrontEndRadialPicker_C::Picker_Closing' has a wrong offset!");
static_assert(offsetof(UAthenaFrontEndRadialPicker_C, bIsUsingTouch) == 0x000380, "Member 'UAthenaFrontEndRadialPicker_C::bIsUsingTouch' has a wrong offset!");

}

