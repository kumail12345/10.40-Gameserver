#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AthenaMatchmakingSpinnerButton

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "CommonInput_structs.hpp"
#include "Engine_structs.hpp"
#include "SlateCore_structs.hpp"
#include "FortniteUI_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass AthenaMatchmakingSpinnerButton.AthenaMatchmakingSpinnerButton_C
// 0x0100 (0x0D30 - 0x0C30)
class UAthenaMatchmakingSpinnerButton_C final : public UFortMatchmakingKnobsSpinnerButton
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0C30(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       In;                                                // 0x0C38(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Right;                                             // 0x0C40(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Left;                                              // 0x0C48(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UBorder*                                Border_Fill;                                       // 0x0C50(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USimpleCommonButton_C*                  LeftButton;                                        // 0x0C58(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               LeftButtonSize;                                    // 0x0C60(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         OptionSelectionArea;                               // 0x0C68(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USimpleCommonButton_C*                  RightButton;                                       // 0x0C70(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               RightButtonSize;                                   // 0x0C78(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 SaveSpinner;                                       // 0x0C80(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	TArray<class FString>                         A;                                                 // 0x0C88(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	TArray<class FString>                         A_0;                                               // 0x0C98(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	bool                                          DebugOnMobileOrPC;                                 // 0x0CA8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          isGamepad;                                         // 0x0CA9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_CAA[0x2];                                      // 0x0CAA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Mobile_Size_Override;                              // 0x0CAC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              VisibilitySetting;                                 // 0x0CB0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CB1[0x7];                                      // 0x0CB1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 DefaultStyleMouse;                                 // 0x0CB8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class UClass*                                 DefaultStyleGamepad;                               // 0x0CC0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	struct FSlateColor                            TextColor_Normal;                                  // 0x0CC8(0x0028)(Edit, BlueprintVisible, ExposeOnSpawn)
	struct FSlateColor                            TextColor_Focused;                                 // 0x0CF0(0x0028)(Edit, BlueprintVisible, ExposeOnSpawn)
	TMulticastInlineDelegate<void(int32 Index)>   OnSpinnerValueChanged;                             // 0x0D18(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class UClass*                                 DefaultStyleTouch;                                 // 0x0D28(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void UpdateSyle(ECommonInputType InputType, bool isUsing_GamePad);
	struct FEventReply OnFocusReceived(const struct FGeometry& MyGeometry, const struct FFocusEvent& InFocusEvent);
	class UWidget* DoCustomNavigation_0(EUINavigation Navigation_0);
	void Set_Button_Sizes();
	void BndEvt__SimpleCommonButton_1_K2Node_ComponentBoundEvent_2_CommonButtonClicked__DelegateSignature(class UCommonButton* Button);
	void BndEvt__SimpleCommonButton_K2Node_ComponentBoundEvent_3_CommonButtonClicked__DelegateSignature(class UCommonButton* Button);
	void CustomEvent(bool bUsingGamepad);
	void InputUpdated(ECommonInputType bNewInputType);
	void AfterleftisDone();
	void AfterRightIsDone();
	void AnimateIn(int32 Index_0);
	void OnLoadingStateChanged(bool bCurrentlyLoading);
	void SetSpinnerOptionsVisiblity(bool bVisible);
	void BP_OnDoubleClicked();
	void InputModeChanged(bool Gamepad, ECommonInputType InputType);
	void Construct();
	void BP_OnClicked();
	void OnSpinnerRotated(int32 Value, bool bUserInitiated);
	void BP_OnSelected();
	void BP_OnDeselected();
	void HighlightText();
	void UnHighlightText();
	void ExecuteUbergraph_AthenaMatchmakingSpinnerButton(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"AthenaMatchmakingSpinnerButton_C">();
	}
	static class UAthenaMatchmakingSpinnerButton_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAthenaMatchmakingSpinnerButton_C>();
	}
};
static_assert(alignof(UAthenaMatchmakingSpinnerButton_C) == 0x000008, "Wrong alignment on UAthenaMatchmakingSpinnerButton_C");
static_assert(sizeof(UAthenaMatchmakingSpinnerButton_C) == 0x000D30, "Wrong size on UAthenaMatchmakingSpinnerButton_C");
static_assert(offsetof(UAthenaMatchmakingSpinnerButton_C, UberGraphFrame) == 0x000C30, "Member 'UAthenaMatchmakingSpinnerButton_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UAthenaMatchmakingSpinnerButton_C, In) == 0x000C38, "Member 'UAthenaMatchmakingSpinnerButton_C::In' has a wrong offset!");
static_assert(offsetof(UAthenaMatchmakingSpinnerButton_C, Right) == 0x000C40, "Member 'UAthenaMatchmakingSpinnerButton_C::Right' has a wrong offset!");
static_assert(offsetof(UAthenaMatchmakingSpinnerButton_C, Left) == 0x000C48, "Member 'UAthenaMatchmakingSpinnerButton_C::Left' has a wrong offset!");
static_assert(offsetof(UAthenaMatchmakingSpinnerButton_C, Border_Fill) == 0x000C50, "Member 'UAthenaMatchmakingSpinnerButton_C::Border_Fill' has a wrong offset!");
static_assert(offsetof(UAthenaMatchmakingSpinnerButton_C, LeftButton) == 0x000C58, "Member 'UAthenaMatchmakingSpinnerButton_C::LeftButton' has a wrong offset!");
static_assert(offsetof(UAthenaMatchmakingSpinnerButton_C, LeftButtonSize) == 0x000C60, "Member 'UAthenaMatchmakingSpinnerButton_C::LeftButtonSize' has a wrong offset!");
static_assert(offsetof(UAthenaMatchmakingSpinnerButton_C, OptionSelectionArea) == 0x000C68, "Member 'UAthenaMatchmakingSpinnerButton_C::OptionSelectionArea' has a wrong offset!");
static_assert(offsetof(UAthenaMatchmakingSpinnerButton_C, RightButton) == 0x000C70, "Member 'UAthenaMatchmakingSpinnerButton_C::RightButton' has a wrong offset!");
static_assert(offsetof(UAthenaMatchmakingSpinnerButton_C, RightButtonSize) == 0x000C78, "Member 'UAthenaMatchmakingSpinnerButton_C::RightButtonSize' has a wrong offset!");
static_assert(offsetof(UAthenaMatchmakingSpinnerButton_C, SaveSpinner) == 0x000C80, "Member 'UAthenaMatchmakingSpinnerButton_C::SaveSpinner' has a wrong offset!");
static_assert(offsetof(UAthenaMatchmakingSpinnerButton_C, A) == 0x000C88, "Member 'UAthenaMatchmakingSpinnerButton_C::A' has a wrong offset!");
static_assert(offsetof(UAthenaMatchmakingSpinnerButton_C, A_0) == 0x000C98, "Member 'UAthenaMatchmakingSpinnerButton_C::A_0' has a wrong offset!");
static_assert(offsetof(UAthenaMatchmakingSpinnerButton_C, DebugOnMobileOrPC) == 0x000CA8, "Member 'UAthenaMatchmakingSpinnerButton_C::DebugOnMobileOrPC' has a wrong offset!");
static_assert(offsetof(UAthenaMatchmakingSpinnerButton_C, isGamepad) == 0x000CA9, "Member 'UAthenaMatchmakingSpinnerButton_C::isGamepad' has a wrong offset!");
static_assert(offsetof(UAthenaMatchmakingSpinnerButton_C, Mobile_Size_Override) == 0x000CAC, "Member 'UAthenaMatchmakingSpinnerButton_C::Mobile_Size_Override' has a wrong offset!");
static_assert(offsetof(UAthenaMatchmakingSpinnerButton_C, VisibilitySetting) == 0x000CB0, "Member 'UAthenaMatchmakingSpinnerButton_C::VisibilitySetting' has a wrong offset!");
static_assert(offsetof(UAthenaMatchmakingSpinnerButton_C, DefaultStyleMouse) == 0x000CB8, "Member 'UAthenaMatchmakingSpinnerButton_C::DefaultStyleMouse' has a wrong offset!");
static_assert(offsetof(UAthenaMatchmakingSpinnerButton_C, DefaultStyleGamepad) == 0x000CC0, "Member 'UAthenaMatchmakingSpinnerButton_C::DefaultStyleGamepad' has a wrong offset!");
static_assert(offsetof(UAthenaMatchmakingSpinnerButton_C, TextColor_Normal) == 0x000CC8, "Member 'UAthenaMatchmakingSpinnerButton_C::TextColor_Normal' has a wrong offset!");
static_assert(offsetof(UAthenaMatchmakingSpinnerButton_C, TextColor_Focused) == 0x000CF0, "Member 'UAthenaMatchmakingSpinnerButton_C::TextColor_Focused' has a wrong offset!");
static_assert(offsetof(UAthenaMatchmakingSpinnerButton_C, OnSpinnerValueChanged) == 0x000D18, "Member 'UAthenaMatchmakingSpinnerButton_C::OnSpinnerValueChanged' has a wrong offset!");
static_assert(offsetof(UAthenaMatchmakingSpinnerButton_C, DefaultStyleTouch) == 0x000D28, "Member 'UAthenaMatchmakingSpinnerButton_C::DefaultStyleTouch' has a wrong offset!");

}

