#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GCL_TNT_Fuse_Projectile

#include "Basic.hpp"

#include "FortniteGame_classes.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass GCL_TNT_Fuse_Projectile.GCL_TNT_Fuse_Projectile_C
// 0x00C8 (0x0830 - 0x0768)
class AGCL_TNT_Fuse_Projectile_C final : public AFortGameplayCueNotify_Loop
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0768(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	float                                         Stage_2_Fuse_Death_Warning_864F89AB4908B84538EE68B4DF0D26CE; // 0x0770(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Stage_2_Fuse__Direction_864F89AB4908B84538EE68B4DF0D26CE; // 0x0774(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_775[0x3];                                      // 0x0775(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Stage_2_Fuse;                                      // 0x0778(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Stage_1_Fuse_Death_Warning_2FFFDFE8431CAC993AA46387580F7A84; // 0x0780(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Stage_1_Fuse__Direction_2FFFDFE8431CAC993AA46387580F7A84; // 0x0784(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_785[0x3];                                      // 0x0785(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Stage_1_Fuse;                                      // 0x0788(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Fuse_Movement_Material_Flash_74AFF49A4CEE87DDE4FCD785AA920130; // 0x0790(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Fuse_Movement_Lerp_Control_74AFF49A4CEE87DDE4FCD785AA920130; // 0x0794(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Fuse_Movement__Direction_74AFF49A4CEE87DDE4FCD785AA920130; // 0x0798(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_799[0x7];                                      // 0x0799(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Fuse_Movement;                                     // 0x07A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FuseDuration;                                      // 0x07A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FuseElapsedTime;                                   // 0x07AC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AB_Prj_Athena_TNT_C*                    Projectile;                                        // 0x07B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               Death_FX;                                          // 0x07B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Flare_Size;                                        // 0x07C0(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                PSysSplineLoca;                                    // 0x07CC(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               PSysSplineRot;                                     // 0x07D8(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         PSys_Opacity;                                      // 0x07E4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                PSys_Color;                                        // 0x07E8(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Psys_Size;                                         // 0x07F4(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               LoopingParticle;                                   // 0x0800(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        Looping_Audio;                                     // 0x0808(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        DeathAudio;                                        // 0x0810(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Fuse_Change__;                                     // 0x0818(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Twond_Stage_Fuse_Duration;                         // 0x081C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Emissive_Color;                                    // 0x0820(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_GCL_TNT_Fuse_Projectile(int32 EntryPoint);
	void Control_Stage_2_Fuse_Particles();
	void Control_Stage_1_Fuse_Particles();
	void OnRemoval(class AActor* MyTarget, const struct FGameplayCueParameters& Parameters, const TArray<class UParticleSystemComponent*>& ParticleComponents, const TArray<class UAudioComponent*>& AudioComponents, class UCameraShake* BurstCameraShakeInstance, class ADecalActor* BurstDecalInstance);
	void OnLoopingStart(class AActor* MyTarget, const struct FGameplayCueParameters& Parameters, const TArray<class UParticleSystemComponent*>& ParticleComponents, const TArray<class UAudioComponent*>& AudioComponents);
	void Stage_2_Fuse__UpdateFunc();
	void Stage_2_Fuse__FinishedFunc();
	void Stage_1_Fuse__UpdateFunc();
	void Stage_1_Fuse__FinishedFunc();
	void Fuse_Movement__UpdateFunc();
	void Fuse_Movement__FinishedFunc();
	void Spline_Setup(float Alpha, struct FVector* Spline_Location);
	void Warning_System_Setup(float Warning, float* Opacity, struct FVector* Color, struct FVector* Size);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GCL_TNT_Fuse_Projectile_C">();
	}
	static class AGCL_TNT_Fuse_Projectile_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AGCL_TNT_Fuse_Projectile_C>();
	}
};
static_assert(alignof(AGCL_TNT_Fuse_Projectile_C) == 0x000008, "Wrong alignment on AGCL_TNT_Fuse_Projectile_C");
static_assert(sizeof(AGCL_TNT_Fuse_Projectile_C) == 0x000830, "Wrong size on AGCL_TNT_Fuse_Projectile_C");
static_assert(offsetof(AGCL_TNT_Fuse_Projectile_C, UberGraphFrame) == 0x000768, "Member 'AGCL_TNT_Fuse_Projectile_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AGCL_TNT_Fuse_Projectile_C, Stage_2_Fuse_Death_Warning_864F89AB4908B84538EE68B4DF0D26CE) == 0x000770, "Member 'AGCL_TNT_Fuse_Projectile_C::Stage_2_Fuse_Death_Warning_864F89AB4908B84538EE68B4DF0D26CE' has a wrong offset!");
static_assert(offsetof(AGCL_TNT_Fuse_Projectile_C, Stage_2_Fuse__Direction_864F89AB4908B84538EE68B4DF0D26CE) == 0x000774, "Member 'AGCL_TNT_Fuse_Projectile_C::Stage_2_Fuse__Direction_864F89AB4908B84538EE68B4DF0D26CE' has a wrong offset!");
static_assert(offsetof(AGCL_TNT_Fuse_Projectile_C, Stage_2_Fuse) == 0x000778, "Member 'AGCL_TNT_Fuse_Projectile_C::Stage_2_Fuse' has a wrong offset!");
static_assert(offsetof(AGCL_TNT_Fuse_Projectile_C, Stage_1_Fuse_Death_Warning_2FFFDFE8431CAC993AA46387580F7A84) == 0x000780, "Member 'AGCL_TNT_Fuse_Projectile_C::Stage_1_Fuse_Death_Warning_2FFFDFE8431CAC993AA46387580F7A84' has a wrong offset!");
static_assert(offsetof(AGCL_TNT_Fuse_Projectile_C, Stage_1_Fuse__Direction_2FFFDFE8431CAC993AA46387580F7A84) == 0x000784, "Member 'AGCL_TNT_Fuse_Projectile_C::Stage_1_Fuse__Direction_2FFFDFE8431CAC993AA46387580F7A84' has a wrong offset!");
static_assert(offsetof(AGCL_TNT_Fuse_Projectile_C, Stage_1_Fuse) == 0x000788, "Member 'AGCL_TNT_Fuse_Projectile_C::Stage_1_Fuse' has a wrong offset!");
static_assert(offsetof(AGCL_TNT_Fuse_Projectile_C, Fuse_Movement_Material_Flash_74AFF49A4CEE87DDE4FCD785AA920130) == 0x000790, "Member 'AGCL_TNT_Fuse_Projectile_C::Fuse_Movement_Material_Flash_74AFF49A4CEE87DDE4FCD785AA920130' has a wrong offset!");
static_assert(offsetof(AGCL_TNT_Fuse_Projectile_C, Fuse_Movement_Lerp_Control_74AFF49A4CEE87DDE4FCD785AA920130) == 0x000794, "Member 'AGCL_TNT_Fuse_Projectile_C::Fuse_Movement_Lerp_Control_74AFF49A4CEE87DDE4FCD785AA920130' has a wrong offset!");
static_assert(offsetof(AGCL_TNT_Fuse_Projectile_C, Fuse_Movement__Direction_74AFF49A4CEE87DDE4FCD785AA920130) == 0x000798, "Member 'AGCL_TNT_Fuse_Projectile_C::Fuse_Movement__Direction_74AFF49A4CEE87DDE4FCD785AA920130' has a wrong offset!");
static_assert(offsetof(AGCL_TNT_Fuse_Projectile_C, Fuse_Movement) == 0x0007A0, "Member 'AGCL_TNT_Fuse_Projectile_C::Fuse_Movement' has a wrong offset!");
static_assert(offsetof(AGCL_TNT_Fuse_Projectile_C, FuseDuration) == 0x0007A8, "Member 'AGCL_TNT_Fuse_Projectile_C::FuseDuration' has a wrong offset!");
static_assert(offsetof(AGCL_TNT_Fuse_Projectile_C, FuseElapsedTime) == 0x0007AC, "Member 'AGCL_TNT_Fuse_Projectile_C::FuseElapsedTime' has a wrong offset!");
static_assert(offsetof(AGCL_TNT_Fuse_Projectile_C, Projectile) == 0x0007B0, "Member 'AGCL_TNT_Fuse_Projectile_C::Projectile' has a wrong offset!");
static_assert(offsetof(AGCL_TNT_Fuse_Projectile_C, Death_FX) == 0x0007B8, "Member 'AGCL_TNT_Fuse_Projectile_C::Death_FX' has a wrong offset!");
static_assert(offsetof(AGCL_TNT_Fuse_Projectile_C, Flare_Size) == 0x0007C0, "Member 'AGCL_TNT_Fuse_Projectile_C::Flare_Size' has a wrong offset!");
static_assert(offsetof(AGCL_TNT_Fuse_Projectile_C, PSysSplineLoca) == 0x0007CC, "Member 'AGCL_TNT_Fuse_Projectile_C::PSysSplineLoca' has a wrong offset!");
static_assert(offsetof(AGCL_TNT_Fuse_Projectile_C, PSysSplineRot) == 0x0007D8, "Member 'AGCL_TNT_Fuse_Projectile_C::PSysSplineRot' has a wrong offset!");
static_assert(offsetof(AGCL_TNT_Fuse_Projectile_C, PSys_Opacity) == 0x0007E4, "Member 'AGCL_TNT_Fuse_Projectile_C::PSys_Opacity' has a wrong offset!");
static_assert(offsetof(AGCL_TNT_Fuse_Projectile_C, PSys_Color) == 0x0007E8, "Member 'AGCL_TNT_Fuse_Projectile_C::PSys_Color' has a wrong offset!");
static_assert(offsetof(AGCL_TNT_Fuse_Projectile_C, Psys_Size) == 0x0007F4, "Member 'AGCL_TNT_Fuse_Projectile_C::Psys_Size' has a wrong offset!");
static_assert(offsetof(AGCL_TNT_Fuse_Projectile_C, LoopingParticle) == 0x000800, "Member 'AGCL_TNT_Fuse_Projectile_C::LoopingParticle' has a wrong offset!");
static_assert(offsetof(AGCL_TNT_Fuse_Projectile_C, Looping_Audio) == 0x000808, "Member 'AGCL_TNT_Fuse_Projectile_C::Looping_Audio' has a wrong offset!");
static_assert(offsetof(AGCL_TNT_Fuse_Projectile_C, DeathAudio) == 0x000810, "Member 'AGCL_TNT_Fuse_Projectile_C::DeathAudio' has a wrong offset!");
static_assert(offsetof(AGCL_TNT_Fuse_Projectile_C, Fuse_Change__) == 0x000818, "Member 'AGCL_TNT_Fuse_Projectile_C::Fuse_Change__' has a wrong offset!");
static_assert(offsetof(AGCL_TNT_Fuse_Projectile_C, Twond_Stage_Fuse_Duration) == 0x00081C, "Member 'AGCL_TNT_Fuse_Projectile_C::Twond_Stage_Fuse_Duration' has a wrong offset!");
static_assert(offsetof(AGCL_TNT_Fuse_Projectile_C, Emissive_Color) == 0x000820, "Member 'AGCL_TNT_Fuse_Projectile_C::Emissive_Color' has a wrong offset!");

}

