#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MinimalChallengeEntry

#include "Basic.hpp"

#include "MinimalChallengeEntry_classes.hpp"
#include "MinimalChallengeEntry_parameters.hpp"


namespace SDK
{

// Function MinimalChallengeEntry.MinimalChallengeEntry_C.OnChallengeInfoSet
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bIsInProgress                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UMinimalChallengeEntry_C::OnChallengeInfoSet(bool bIsInProgress)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MinimalChallengeEntry_C", "OnChallengeInfoSet");

	Params::MinimalChallengeEntry_C_OnChallengeInfoSet Parms{};

	Parms.bIsInProgress = bIsInProgress;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MinimalChallengeEntry.MinimalChallengeEntry_C.ExecuteUbergraph_MinimalChallengeEntry
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UMinimalChallengeEntry_C::ExecuteUbergraph_MinimalChallengeEntry(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MinimalChallengeEntry_C", "ExecuteUbergraph_MinimalChallengeEntry");

	Params::MinimalChallengeEntry_C_ExecuteUbergraph_MinimalChallengeEntry Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}

}

