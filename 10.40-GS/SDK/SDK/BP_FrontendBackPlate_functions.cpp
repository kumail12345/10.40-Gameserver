#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_FrontendBackPlate

#include "Basic.hpp"

#include "BP_FrontendBackPlate_classes.hpp"
#include "BP_FrontendBackPlate_parameters.hpp"


namespace SDK
{

// Function BP_FrontendBackPlate.BP_FrontendBackPlate_C.ExecuteUbergraph_BP_FrontendBackPlate
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_FrontendBackPlate_C::ExecuteUbergraph_BP_FrontendBackPlate(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FrontendBackPlate_C", "ExecuteUbergraph_BP_FrontendBackPlate");

	Params::BP_FrontendBackPlate_C_ExecuteUbergraph_BP_FrontendBackPlate Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_FrontendBackPlate.BP_FrontendBackPlate_C.ResetSuckage
// (BlueprintCallable, BlueprintEvent)

void ABP_FrontendBackPlate_C::ResetSuckage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FrontendBackPlate_C", "ResetSuckage");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_FrontendBackPlate.BP_FrontendBackPlate_C.TestFrontendSuckage
// (BlueprintCallable, BlueprintEvent)

void ABP_FrontendBackPlate_C::TestFrontendSuckage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FrontendBackPlate_C", "TestFrontendSuckage");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_FrontendBackPlate.BP_FrontendBackPlate_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_FrontendBackPlate_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FrontendBackPlate_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_FrontendBackPlate.BP_FrontendBackPlate_C.SetEnableBlackMondayFX
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsEnabled                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_FrontendBackPlate_C::SetEnableBlackMondayFX(bool IsEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FrontendBackPlate_C", "SetEnableBlackMondayFX");

	Params::BP_FrontendBackPlate_C_SetEnableBlackMondayFX Parms{};

	Parms.IsEnabled = IsEnabled;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_FrontendBackPlate.BP_FrontendBackPlate_C.TestBlur
// (BlueprintCallable, BlueprintEvent)

void ABP_FrontendBackPlate_C::TestBlur()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FrontendBackPlate_C", "TestBlur");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_FrontendBackPlate.BP_FrontendBackPlate_C.UpdateSettings
// (BlueprintCallable, BlueprintEvent)

void ABP_FrontendBackPlate_C::UpdateSettings()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FrontendBackPlate_C", "UpdateSettings");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_FrontendBackPlate.BP_FrontendBackPlate_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_FrontendBackPlate_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FrontendBackPlate_C", "ReceiveTick");

	Params::BP_FrontendBackPlate_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_FrontendBackPlate.BP_FrontendBackPlate_C.Suckage__UpdateFunc
// (BlueprintEvent)

void ABP_FrontendBackPlate_C::Suckage__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FrontendBackPlate_C", "Suckage__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_FrontendBackPlate.BP_FrontendBackPlate_C.Suckage__FinishedFunc
// (BlueprintEvent)

void ABP_FrontendBackPlate_C::Suckage__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FrontendBackPlate_C", "Suckage__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_FrontendBackPlate.BP_FrontendBackPlate_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_FrontendBackPlate_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FrontendBackPlate_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_FrontendBackPlate.BP_FrontendBackPlate_C.SetBackgroundTexture
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UTexture*                         Texture                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UMaterialInterface*               Material                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UMaterialInterface*               PreBlurMaterial_0                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_FrontendBackPlate_C::SetBackgroundTexture(class UTexture* Texture, class UMaterialInterface* Material, class UMaterialInterface* PreBlurMaterial_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FrontendBackPlate_C", "SetBackgroundTexture");

	Params::BP_FrontendBackPlate_C_SetBackgroundTexture Parms{};

	Parms.Texture = Texture;
	Parms.Material = Material;
	Parms.PreBlurMaterial_0 = PreBlurMaterial_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_FrontendBackPlate.BP_FrontendBackPlate_C.UpdateRenderTarget
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_FrontendBackPlate_C::UpdateRenderTarget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FrontendBackPlate_C", "UpdateRenderTarget");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_FrontendBackPlate.BP_FrontendBackPlate_C.EnableRealtimeUpdate
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Enabled                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_FrontendBackPlate_C::EnableRealtimeUpdate(bool Enabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FrontendBackPlate_C", "EnableRealtimeUpdate");

	Params::BP_FrontendBackPlate_C_EnableRealtimeUpdate Parms{};

	Parms.Enabled = Enabled;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_FrontendBackPlate.BP_FrontendBackPlate_C.UpdateRenderTargetRealtime
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_FrontendBackPlate_C::UpdateRenderTargetRealtime()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FrontendBackPlate_C", "UpdateRenderTargetRealtime");

	UObject::ProcessEvent(Func, nullptr);
}

}

