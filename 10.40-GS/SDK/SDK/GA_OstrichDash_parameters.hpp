#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_OstrichDash

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function GA_OstrichDash.GA_OstrichDash_C.ExecuteUbergraph_GA_OstrichDash
// 0x0200 (0x0200 - 0x0000)
struct GA_OstrichDash_C_ExecuteUbergraph_GA_OstrichDash final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_CommitAbility_ReturnValue;             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayEventData                     K2Node_Event_EventData;                            // 0x0008(0x00B0)(ConstParm)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x00B8(0x0010)(ZeroConstructor, NoDestructor)
	struct FVector                                CallFunc_GetEffectDirection_ReturnValue;           // 0x00C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D4[0x4];                                       // 0x00D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwningActorFromActorInfo_ReturnValue;  // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortCharacterVehicle_Ostrich*          K2Node_DynamicCast_AsFort_Character_Vehicle_Ostrich; // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bWasCancelled;                        // 0x00E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_EA[0x6];                                       // 0x00EA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayAbilityActorInfo              CallFunc_GetActorInfo_ReturnValue;                 // 0x00F0(0x0040)(ContainsInstancedReference)
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue;  // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ATestMechVehicle_C*                     K2Node_DynamicCast_AsTest_Mech_Vehicle;            // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_141[0x7];                                      // 0x0141(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerPawn*                        K2Node_DynamicCast_AsFort_Player_Pawn;             // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_151[0x7];                                      // 0x0151(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayAbilityTargetDataHandle       CallFunc_AbilityTargetDataFromActor_ReturnValue;   // 0x0158(0x0028)()
	TArray<struct FActiveGameplayEffectHandle>    CallFunc_BP_ApplyGameplayEffectToTarget_ReturnValue; // 0x0180(0x0010)(ZeroConstructor, ReferenceParm)
	class AFortPlayerController*                  CallFunc_GetFortPlayerControllerFromActor_ReturnValue; // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class ACharacter* Character, EMovementMode PrevMovementMode, uint8 PreviousCustomMode)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0198(0x0010)(ZeroConstructor, NoDestructor)
	TScriptInterface<class IFortVehicleInterface> CallFunc_VehicleIsInAir_self_CastInput;            // 0x01A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_VehicleIsInAir_ReturnValue;               // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B9[0x3];                                      // 0x01B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x01BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetIsChargingJump_ReturnValue;            // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x01C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1C2[0x2];                                      // 0x01C2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetValueAtLevel_ReturnValue;              // 0x01C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValueAtLevel_ReturnValue_1;            // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValueAtLevel_ReturnValue_2;            // 0x01CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValueAtLevel_ReturnValue_3;            // 0x01D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D4[0x4];                                      // 0x01D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilityTask_ApplyRootMotionConstantForce* CallFunc_ApplyRootMotionConstantForce_ReturnValue; // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             K2Node_CustomEvent_Character;                      // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMovementMode                                 K2Node_CustomEvent_PrevMovementMode;               // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         K2Node_CustomEvent_PreviousCustomMode;             // 0x01E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x01EA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1EB[0x1];                                      // 0x01EB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetValueAtLevel_ReturnValue_4;            // 0x01EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValueAtLevel_ReturnValue_5;            // 0x01F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F4[0x4];                                      // 0x01F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerController*                  CallFunc_GetFortPlayerControllerFromActor_ReturnValue_1; // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_OstrichDash_C_ExecuteUbergraph_GA_OstrichDash) == 0x000008, "Wrong alignment on GA_OstrichDash_C_ExecuteUbergraph_GA_OstrichDash");
static_assert(sizeof(GA_OstrichDash_C_ExecuteUbergraph_GA_OstrichDash) == 0x000200, "Wrong size on GA_OstrichDash_C_ExecuteUbergraph_GA_OstrichDash");
static_assert(offsetof(GA_OstrichDash_C_ExecuteUbergraph_GA_OstrichDash, EntryPoint) == 0x000000, "Member 'GA_OstrichDash_C_ExecuteUbergraph_GA_OstrichDash::EntryPoint' has a wrong offset!");
static_assert(offsetof(GA_OstrichDash_C_ExecuteUbergraph_GA_OstrichDash, CallFunc_K2_CommitAbility_ReturnValue) == 0x000004, "Member 'GA_OstrichDash_C_ExecuteUbergraph_GA_OstrichDash::CallFunc_K2_CommitAbility_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_OstrichDash_C_ExecuteUbergraph_GA_OstrichDash, K2Node_Event_EventData) == 0x000008, "Member 'GA_OstrichDash_C_ExecuteUbergraph_GA_OstrichDash::K2Node_Event_EventData' has a wrong offset!");
static_assert(offsetof(GA_OstrichDash_C_ExecuteUbergraph_GA_OstrichDash, K2Node_CreateDelegate_OutputDelegate) == 0x0000B8, "Member 'GA_OstrichDash_C_ExecuteUbergraph_GA_OstrichDash::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(GA_OstrichDash_C_ExecuteUbergraph_GA_OstrichDash, CallFunc_GetEffectDirection_ReturnValue) == 0x0000C8, "Member 'GA_OstrichDash_C_ExecuteUbergraph_GA_OstrichDash::CallFunc_GetEffectDirection_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_OstrichDash_C_ExecuteUbergraph_GA_OstrichDash, CallFunc_GetOwningActorFromActorInfo_ReturnValue) == 0x0000D8, "Member 'GA_OstrichDash_C_ExecuteUbergraph_GA_OstrichDash::CallFunc_GetOwningActorFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_OstrichDash_C_ExecuteUbergraph_GA_OstrichDash, K2Node_DynamicCast_AsFort_Character_Vehicle_Ostrich) == 0x0000E0, "Member 'GA_OstrichDash_C_ExecuteUbergraph_GA_OstrichDash::K2Node_DynamicCast_AsFort_Character_Vehicle_Ostrich' has a wrong offset!");
static_assert(offsetof(GA_OstrichDash_C_ExecuteUbergraph_GA_OstrichDash, K2Node_DynamicCast_bSuccess) == 0x0000E8, "Member 'GA_OstrichDash_C_ExecuteUbergraph_GA_OstrichDash::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_OstrichDash_C_ExecuteUbergraph_GA_OstrichDash, K2Node_Event_bWasCancelled) == 0x0000E9, "Member 'GA_OstrichDash_C_ExecuteUbergraph_GA_OstrichDash::K2Node_Event_bWasCancelled' has a wrong offset!");
static_assert(offsetof(GA_OstrichDash_C_ExecuteUbergraph_GA_OstrichDash, CallFunc_GetActorInfo_ReturnValue) == 0x0000F0, "Member 'GA_OstrichDash_C_ExecuteUbergraph_GA_OstrichDash::CallFunc_GetActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_OstrichDash_C_ExecuteUbergraph_GA_OstrichDash, CallFunc_GetAvatarActorFromActorInfo_ReturnValue) == 0x000130, "Member 'GA_OstrichDash_C_ExecuteUbergraph_GA_OstrichDash::CallFunc_GetAvatarActorFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_OstrichDash_C_ExecuteUbergraph_GA_OstrichDash, K2Node_DynamicCast_AsTest_Mech_Vehicle) == 0x000138, "Member 'GA_OstrichDash_C_ExecuteUbergraph_GA_OstrichDash::K2Node_DynamicCast_AsTest_Mech_Vehicle' has a wrong offset!");
static_assert(offsetof(GA_OstrichDash_C_ExecuteUbergraph_GA_OstrichDash, K2Node_DynamicCast_bSuccess_1) == 0x000140, "Member 'GA_OstrichDash_C_ExecuteUbergraph_GA_OstrichDash::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(GA_OstrichDash_C_ExecuteUbergraph_GA_OstrichDash, K2Node_DynamicCast_AsFort_Player_Pawn) == 0x000148, "Member 'GA_OstrichDash_C_ExecuteUbergraph_GA_OstrichDash::K2Node_DynamicCast_AsFort_Player_Pawn' has a wrong offset!");
static_assert(offsetof(GA_OstrichDash_C_ExecuteUbergraph_GA_OstrichDash, K2Node_DynamicCast_bSuccess_2) == 0x000150, "Member 'GA_OstrichDash_C_ExecuteUbergraph_GA_OstrichDash::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(GA_OstrichDash_C_ExecuteUbergraph_GA_OstrichDash, CallFunc_AbilityTargetDataFromActor_ReturnValue) == 0x000158, "Member 'GA_OstrichDash_C_ExecuteUbergraph_GA_OstrichDash::CallFunc_AbilityTargetDataFromActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_OstrichDash_C_ExecuteUbergraph_GA_OstrichDash, CallFunc_BP_ApplyGameplayEffectToTarget_ReturnValue) == 0x000180, "Member 'GA_OstrichDash_C_ExecuteUbergraph_GA_OstrichDash::CallFunc_BP_ApplyGameplayEffectToTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_OstrichDash_C_ExecuteUbergraph_GA_OstrichDash, CallFunc_GetFortPlayerControllerFromActor_ReturnValue) == 0x000190, "Member 'GA_OstrichDash_C_ExecuteUbergraph_GA_OstrichDash::CallFunc_GetFortPlayerControllerFromActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_OstrichDash_C_ExecuteUbergraph_GA_OstrichDash, K2Node_CreateDelegate_OutputDelegate_1) == 0x000198, "Member 'GA_OstrichDash_C_ExecuteUbergraph_GA_OstrichDash::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(GA_OstrichDash_C_ExecuteUbergraph_GA_OstrichDash, CallFunc_VehicleIsInAir_self_CastInput) == 0x0001A8, "Member 'GA_OstrichDash_C_ExecuteUbergraph_GA_OstrichDash::CallFunc_VehicleIsInAir_self_CastInput' has a wrong offset!");
static_assert(offsetof(GA_OstrichDash_C_ExecuteUbergraph_GA_OstrichDash, CallFunc_VehicleIsInAir_ReturnValue) == 0x0001B8, "Member 'GA_OstrichDash_C_ExecuteUbergraph_GA_OstrichDash::CallFunc_VehicleIsInAir_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_OstrichDash_C_ExecuteUbergraph_GA_OstrichDash, CallFunc_Add_FloatFloat_ReturnValue) == 0x0001BC, "Member 'GA_OstrichDash_C_ExecuteUbergraph_GA_OstrichDash::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_OstrichDash_C_ExecuteUbergraph_GA_OstrichDash, CallFunc_GetIsChargingJump_ReturnValue) == 0x0001C0, "Member 'GA_OstrichDash_C_ExecuteUbergraph_GA_OstrichDash::CallFunc_GetIsChargingJump_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_OstrichDash_C_ExecuteUbergraph_GA_OstrichDash, CallFunc_BooleanOR_ReturnValue) == 0x0001C1, "Member 'GA_OstrichDash_C_ExecuteUbergraph_GA_OstrichDash::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_OstrichDash_C_ExecuteUbergraph_GA_OstrichDash, CallFunc_GetValueAtLevel_ReturnValue) == 0x0001C4, "Member 'GA_OstrichDash_C_ExecuteUbergraph_GA_OstrichDash::CallFunc_GetValueAtLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_OstrichDash_C_ExecuteUbergraph_GA_OstrichDash, CallFunc_GetValueAtLevel_ReturnValue_1) == 0x0001C8, "Member 'GA_OstrichDash_C_ExecuteUbergraph_GA_OstrichDash::CallFunc_GetValueAtLevel_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_OstrichDash_C_ExecuteUbergraph_GA_OstrichDash, CallFunc_GetValueAtLevel_ReturnValue_2) == 0x0001CC, "Member 'GA_OstrichDash_C_ExecuteUbergraph_GA_OstrichDash::CallFunc_GetValueAtLevel_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GA_OstrichDash_C_ExecuteUbergraph_GA_OstrichDash, CallFunc_GetValueAtLevel_ReturnValue_3) == 0x0001D0, "Member 'GA_OstrichDash_C_ExecuteUbergraph_GA_OstrichDash::CallFunc_GetValueAtLevel_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GA_OstrichDash_C_ExecuteUbergraph_GA_OstrichDash, CallFunc_ApplyRootMotionConstantForce_ReturnValue) == 0x0001D8, "Member 'GA_OstrichDash_C_ExecuteUbergraph_GA_OstrichDash::CallFunc_ApplyRootMotionConstantForce_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_OstrichDash_C_ExecuteUbergraph_GA_OstrichDash, K2Node_CustomEvent_Character) == 0x0001E0, "Member 'GA_OstrichDash_C_ExecuteUbergraph_GA_OstrichDash::K2Node_CustomEvent_Character' has a wrong offset!");
static_assert(offsetof(GA_OstrichDash_C_ExecuteUbergraph_GA_OstrichDash, K2Node_CustomEvent_PrevMovementMode) == 0x0001E8, "Member 'GA_OstrichDash_C_ExecuteUbergraph_GA_OstrichDash::K2Node_CustomEvent_PrevMovementMode' has a wrong offset!");
static_assert(offsetof(GA_OstrichDash_C_ExecuteUbergraph_GA_OstrichDash, K2Node_CustomEvent_PreviousCustomMode) == 0x0001E9, "Member 'GA_OstrichDash_C_ExecuteUbergraph_GA_OstrichDash::K2Node_CustomEvent_PreviousCustomMode' has a wrong offset!");
static_assert(offsetof(GA_OstrichDash_C_ExecuteUbergraph_GA_OstrichDash, CallFunc_IsValid_ReturnValue) == 0x0001EA, "Member 'GA_OstrichDash_C_ExecuteUbergraph_GA_OstrichDash::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_OstrichDash_C_ExecuteUbergraph_GA_OstrichDash, CallFunc_GetValueAtLevel_ReturnValue_4) == 0x0001EC, "Member 'GA_OstrichDash_C_ExecuteUbergraph_GA_OstrichDash::CallFunc_GetValueAtLevel_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(GA_OstrichDash_C_ExecuteUbergraph_GA_OstrichDash, CallFunc_GetValueAtLevel_ReturnValue_5) == 0x0001F0, "Member 'GA_OstrichDash_C_ExecuteUbergraph_GA_OstrichDash::CallFunc_GetValueAtLevel_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(GA_OstrichDash_C_ExecuteUbergraph_GA_OstrichDash, CallFunc_GetFortPlayerControllerFromActor_ReturnValue_1) == 0x0001F8, "Member 'GA_OstrichDash_C_ExecuteUbergraph_GA_OstrichDash::CallFunc_GetFortPlayerControllerFromActor_ReturnValue_1' has a wrong offset!");

// Function GA_OstrichDash.GA_OstrichDash_C.MovementModeChangedDelegate
// 0x0010 (0x0010 - 0x0000)
struct GA_OstrichDash_C_MovementModeChangedDelegate final
{
public:
	class ACharacter*                             Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMovementMode                                 PrevMovementMode;                                  // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         PreviousCustomMode;                                // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_OstrichDash_C_MovementModeChangedDelegate) == 0x000008, "Wrong alignment on GA_OstrichDash_C_MovementModeChangedDelegate");
static_assert(sizeof(GA_OstrichDash_C_MovementModeChangedDelegate) == 0x000010, "Wrong size on GA_OstrichDash_C_MovementModeChangedDelegate");
static_assert(offsetof(GA_OstrichDash_C_MovementModeChangedDelegate, Character) == 0x000000, "Member 'GA_OstrichDash_C_MovementModeChangedDelegate::Character' has a wrong offset!");
static_assert(offsetof(GA_OstrichDash_C_MovementModeChangedDelegate, PrevMovementMode) == 0x000008, "Member 'GA_OstrichDash_C_MovementModeChangedDelegate::PrevMovementMode' has a wrong offset!");
static_assert(offsetof(GA_OstrichDash_C_MovementModeChangedDelegate, PreviousCustomMode) == 0x000009, "Member 'GA_OstrichDash_C_MovementModeChangedDelegate::PreviousCustomMode' has a wrong offset!");

// Function GA_OstrichDash.GA_OstrichDash_C.K2_OnEndAbility
// 0x0001 (0x0001 - 0x0000)
struct GA_OstrichDash_C_K2_OnEndAbility final
{
public:
	bool                                          bWasCancelled;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GA_OstrichDash_C_K2_OnEndAbility) == 0x000001, "Wrong alignment on GA_OstrichDash_C_K2_OnEndAbility");
static_assert(sizeof(GA_OstrichDash_C_K2_OnEndAbility) == 0x000001, "Wrong size on GA_OstrichDash_C_K2_OnEndAbility");
static_assert(offsetof(GA_OstrichDash_C_K2_OnEndAbility, bWasCancelled) == 0x000000, "Member 'GA_OstrichDash_C_K2_OnEndAbility::bWasCancelled' has a wrong offset!");

// Function GA_OstrichDash.GA_OstrichDash_C.K2_ActivateAbilityFromEvent
// 0x00B0 (0x00B0 - 0x0000)
struct GA_OstrichDash_C_K2_ActivateAbilityFromEvent final
{
public:
	struct FGameplayEventData                     EventData;                                         // 0x0000(0x00B0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(GA_OstrichDash_C_K2_ActivateAbilityFromEvent) == 0x000008, "Wrong alignment on GA_OstrichDash_C_K2_ActivateAbilityFromEvent");
static_assert(sizeof(GA_OstrichDash_C_K2_ActivateAbilityFromEvent) == 0x0000B0, "Wrong size on GA_OstrichDash_C_K2_ActivateAbilityFromEvent");
static_assert(offsetof(GA_OstrichDash_C_K2_ActivateAbilityFromEvent, EventData) == 0x000000, "Member 'GA_OstrichDash_C_K2_ActivateAbilityFromEvent::EventData' has a wrong offset!");

}

