#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MissionInfoPanel

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FortniteUI_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass MissionInfoPanel.MissionInfoPanel_C
// 0x0040 (0x02E0 - 0x02A0)
class UMissionInfoPanel_C final : public UAthenaMissionInfoPanel
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02A0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UChallengeCountdown_C*                  ChallengeCountdown;                                // 0x02A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Icon_BattlePass;                                   // 0x02B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Icon_LimitedTime;                                  // 0x02B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Icon_Prestige;                                     // 0x02C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonBorder*                          Mission_Header;                                    // 0x02C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       MissionExplanationText;                            // 0x02D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                SecondaryHeaderBorder;                             // 0x02D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	void SetMissionStyle(const struct FFortChallengeSetStyle& Style);
	void ExecuteUbergraph_MissionInfoPanel(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"MissionInfoPanel_C">();
	}
	static class UMissionInfoPanel_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMissionInfoPanel_C>();
	}
};
static_assert(alignof(UMissionInfoPanel_C) == 0x000008, "Wrong alignment on UMissionInfoPanel_C");
static_assert(sizeof(UMissionInfoPanel_C) == 0x0002E0, "Wrong size on UMissionInfoPanel_C");
static_assert(offsetof(UMissionInfoPanel_C, UberGraphFrame) == 0x0002A0, "Member 'UMissionInfoPanel_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UMissionInfoPanel_C, ChallengeCountdown) == 0x0002A8, "Member 'UMissionInfoPanel_C::ChallengeCountdown' has a wrong offset!");
static_assert(offsetof(UMissionInfoPanel_C, Icon_BattlePass) == 0x0002B0, "Member 'UMissionInfoPanel_C::Icon_BattlePass' has a wrong offset!");
static_assert(offsetof(UMissionInfoPanel_C, Icon_LimitedTime) == 0x0002B8, "Member 'UMissionInfoPanel_C::Icon_LimitedTime' has a wrong offset!");
static_assert(offsetof(UMissionInfoPanel_C, Icon_Prestige) == 0x0002C0, "Member 'UMissionInfoPanel_C::Icon_Prestige' has a wrong offset!");
static_assert(offsetof(UMissionInfoPanel_C, Mission_Header) == 0x0002C8, "Member 'UMissionInfoPanel_C::Mission_Header' has a wrong offset!");
static_assert(offsetof(UMissionInfoPanel_C, MissionExplanationText) == 0x0002D0, "Member 'UMissionInfoPanel_C::MissionExplanationText' has a wrong offset!");
static_assert(offsetof(UMissionInfoPanel_C, SecondaryHeaderBorder) == 0x0002D8, "Member 'UMissionInfoPanel_C::SecondaryHeaderBorder' has a wrong offset!");

}

