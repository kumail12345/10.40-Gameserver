#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ChallengeRewardTrackEntry

#include "Basic.hpp"

#include "ChallengeRewardTrackEntry_classes.hpp"
#include "ChallengeRewardTrackEntry_parameters.hpp"


namespace SDK
{

// Function ChallengeRewardTrackEntry.ChallengeRewardTrackEntry_C.SetIsInactive
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UImage*                           MaterialBrush                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsInactive                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UChallengeRewardTrackEntry_C::SetIsInactive(class UImage* MaterialBrush, bool IsInactive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ChallengeRewardTrackEntry_C", "SetIsInactive");

	Params::ChallengeRewardTrackEntry_C_SetIsInactive Parms{};

	Parms.MaterialBrush = MaterialBrush;
	Parms.IsInactive = IsInactive;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ChallengeRewardTrackEntry.ChallengeRewardTrackEntry_C.SetIsPrestige
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UImage*                           MaterialBrush                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ViewingPrestige                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UChallengeRewardTrackEntry_C::SetIsPrestige(class UImage* MaterialBrush, bool ViewingPrestige)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ChallengeRewardTrackEntry_C", "SetIsPrestige");

	Params::ChallengeRewardTrackEntry_C_SetIsPrestige Parms{};

	Parms.MaterialBrush = MaterialBrush;
	Parms.ViewingPrestige = ViewingPrestige;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ChallengeRewardTrackEntry.ChallengeRewardTrackEntry_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UChallengeRewardTrackEntry_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ChallengeRewardTrackEntry_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ChallengeRewardTrackEntry.ChallengeRewardTrackEntry_C.NextRewardToEarn
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bNext                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UChallengeRewardTrackEntry_C::NextRewardToEarn(bool bNext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ChallengeRewardTrackEntry_C", "NextRewardToEarn");

	Params::ChallengeRewardTrackEntry_C_NextRewardToEarn Parms{};

	Parms.bNext = bNext;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ChallengeRewardTrackEntry.ChallengeRewardTrackEntry_C.CompletedNextNode
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bAnimate                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UChallengeRewardTrackEntry_C::CompletedNextNode(bool bAnimate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ChallengeRewardTrackEntry_C", "CompletedNextNode");

	Params::ChallengeRewardTrackEntry_C_CompletedNextNode Parms{};

	Parms.bAnimate = bAnimate;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ChallengeRewardTrackEntry.ChallengeRewardTrackEntry_C.SetToDefaultState
// (Event, Public, BlueprintEvent)

void UChallengeRewardTrackEntry_C::SetToDefaultState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ChallengeRewardTrackEntry_C", "SetToDefaultState");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ChallengeRewardTrackEntry.ChallengeRewardTrackEntry_C.CompletedCurrentNode
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bAnimate                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    LastReward                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UChallengeRewardTrackEntry_C::CompletedCurrentNode(bool bAnimate, bool LastReward)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ChallengeRewardTrackEntry_C", "CompletedCurrentNode");

	Params::ChallengeRewardTrackEntry_C_CompletedCurrentNode Parms{};

	Parms.bAnimate = bAnimate;
	Parms.LastReward = LastReward;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ChallengeRewardTrackEntry.ChallengeRewardTrackEntry_C.SetAsCurrentPreviewItem
// (Event, Public, BlueprintEvent)

void UChallengeRewardTrackEntry_C::SetAsCurrentPreviewItem()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ChallengeRewardTrackEntry_C", "SetAsCurrentPreviewItem");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ChallengeRewardTrackEntry.ChallengeRewardTrackEntry_C.ClearPreviewSelection
// (Event, Public, BlueprintEvent)

void UChallengeRewardTrackEntry_C::ClearPreviewSelection()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ChallengeRewardTrackEntry_C", "ClearPreviewSelection");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ChallengeRewardTrackEntry.ChallengeRewardTrackEntry_C.StyleChange
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bViewingPrestige                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UChallengeRewardTrackEntry_C::StyleChange(bool bViewingPrestige)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ChallengeRewardTrackEntry_C", "StyleChange");

	Params::ChallengeRewardTrackEntry_C_StyleChange Parms{};

	Parms.bViewingPrestige = bViewingPrestige;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ChallengeRewardTrackEntry.ChallengeRewardTrackEntry_C.SetLastNodeInTrack
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bIsLast                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UChallengeRewardTrackEntry_C::SetLastNodeInTrack(bool bIsLast)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ChallengeRewardTrackEntry_C", "SetLastNodeInTrack");

	Params::ChallengeRewardTrackEntry_C_SetLastNodeInTrack Parms{};

	Parms.bIsLast = bIsLast;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ChallengeRewardTrackEntry.ChallengeRewardTrackEntry_C.ExecuteUbergraph_ChallengeRewardTrackEntry
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UChallengeRewardTrackEntry_C::ExecuteUbergraph_ChallengeRewardTrackEntry(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ChallengeRewardTrackEntry_C", "ExecuteUbergraph_ChallengeRewardTrackEntry");

	Params::ChallengeRewardTrackEntry_C_ExecuteUbergraph_ChallengeRewardTrackEntry Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}

}

