#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_OstrichDash

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FortniteGame_classes.hpp"
#include "GameplayAbilities_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass GA_OstrichDash.GA_OstrichDash_C
// 0x0100 (0x0A60 - 0x0960)
class UGA_OstrichDash_C final : public UFortGameplayAbility
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0960(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class ATestMechVehicle_C*                     mech;                                              // 0x0968(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAbilityTask*                           MoveTask;                                          // 0x0970(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                DashDirection;                                     // 0x0978(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_984[0x4];                                      // 0x0984(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 DashCameraMode;                                    // 0x0988(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPostProcessComponent*                  NewVar_0;                                          // 0x0990(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FScalableFloat                         DashLaunchSpeedInAir;                              // 0x0998(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         DashLaunchZInAir;                                  // 0x09B8(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         DashGroundStrength;                                // 0x09D8(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         DashGroundDuration;                                // 0x09F8(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         DashCooldownResetsCamera;                          // 0x0A18(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         DashCameraDuration;                                // 0x0A38(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UForceFeedbackEffect*                   DashRumble;                                        // 0x0A58(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_GA_OstrichDash(int32 EntryPoint);
	void MovementModeChangedDelegate(class ACharacter* Character, EMovementMode PrevMovementMode, uint8 PreviousCustomMode);
	void K2_OnEndAbility(bool bWasCancelled);
	void K2_ActivateAbilityFromEvent(const struct FGameplayEventData& EventData);
	void OnFinish_72E13DD14E115C89101CC78972A55E4F();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GA_OstrichDash_C">();
	}
	static class UGA_OstrichDash_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGA_OstrichDash_C>();
	}
};
static_assert(alignof(UGA_OstrichDash_C) == 0x000008, "Wrong alignment on UGA_OstrichDash_C");
static_assert(sizeof(UGA_OstrichDash_C) == 0x000A60, "Wrong size on UGA_OstrichDash_C");
static_assert(offsetof(UGA_OstrichDash_C, UberGraphFrame) == 0x000960, "Member 'UGA_OstrichDash_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UGA_OstrichDash_C, mech) == 0x000968, "Member 'UGA_OstrichDash_C::mech' has a wrong offset!");
static_assert(offsetof(UGA_OstrichDash_C, MoveTask) == 0x000970, "Member 'UGA_OstrichDash_C::MoveTask' has a wrong offset!");
static_assert(offsetof(UGA_OstrichDash_C, DashDirection) == 0x000978, "Member 'UGA_OstrichDash_C::DashDirection' has a wrong offset!");
static_assert(offsetof(UGA_OstrichDash_C, DashCameraMode) == 0x000988, "Member 'UGA_OstrichDash_C::DashCameraMode' has a wrong offset!");
static_assert(offsetof(UGA_OstrichDash_C, NewVar_0) == 0x000990, "Member 'UGA_OstrichDash_C::NewVar_0' has a wrong offset!");
static_assert(offsetof(UGA_OstrichDash_C, DashLaunchSpeedInAir) == 0x000998, "Member 'UGA_OstrichDash_C::DashLaunchSpeedInAir' has a wrong offset!");
static_assert(offsetof(UGA_OstrichDash_C, DashLaunchZInAir) == 0x0009B8, "Member 'UGA_OstrichDash_C::DashLaunchZInAir' has a wrong offset!");
static_assert(offsetof(UGA_OstrichDash_C, DashGroundStrength) == 0x0009D8, "Member 'UGA_OstrichDash_C::DashGroundStrength' has a wrong offset!");
static_assert(offsetof(UGA_OstrichDash_C, DashGroundDuration) == 0x0009F8, "Member 'UGA_OstrichDash_C::DashGroundDuration' has a wrong offset!");
static_assert(offsetof(UGA_OstrichDash_C, DashCooldownResetsCamera) == 0x000A18, "Member 'UGA_OstrichDash_C::DashCooldownResetsCamera' has a wrong offset!");
static_assert(offsetof(UGA_OstrichDash_C, DashCameraDuration) == 0x000A38, "Member 'UGA_OstrichDash_C::DashCameraDuration' has a wrong offset!");
static_assert(offsetof(UGA_OstrichDash_C, DashRumble) == 0x000A58, "Member 'UGA_OstrichDash_C::DashRumble' has a wrong offset!");

}

