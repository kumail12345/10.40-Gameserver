#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TestMechVehicle

#include "Basic.hpp"

#include "FortniteGame_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "CommonInput_structs.hpp"
#include "Engine_structs.hpp"
#include "GameplayTags_structs.hpp"


namespace SDK::Params
{

// Function TestMechVehicle.TestMechVehicle_C.ExecuteUbergraph_TestMechVehicle
// 0x14D0 (0x14D0 - 0x0000)
struct TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0017(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AFortPlayerPawn*>                CallFunc_GetAllPassengers_ReturnValue;             // 0x0020(0x0010)(ZeroConstructor, ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate;              // 0x0040(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_1;            // 0x0050(0x0010)(ZeroConstructor, NoDestructor)
	struct FGameplayCueParameters                 CallFunc_GC_Params_ReturnValue;                    // 0x0060(0x00B8)(ContainsInstancedReference)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0119(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11A[0x2];                                      // 0x011A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_4;                   // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x012C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array;                            // 0x0138(0x0010)(ConstParm, ZeroConstructor, ReferenceParm)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0148(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0154(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_2;            // 0x0160(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_171[0x7];                                      // 0x0171(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AFortPlayerPawn*>                CallFunc_GetAllPassengers_ReturnValue_1;           // 0x0178(0x0010)(ZeroConstructor, ReferenceParm)
	class AFortPlayerPawn*                        CallFunc_Array_Get_Item;                           // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDrivingVehicle_ReturnValue;             // 0x0194(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_195[0x3];                                      // 0x0195(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x019C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19D[0x3];                                      // 0x019D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_5;               // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess_1;                 // 0x01A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A5[0x3];                                      // 0x01A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x01AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x01B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B5[0x3];                                      // 0x01B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerPawn*                        K2Node_Event_PlayerPawn_1;                         // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_SeatIdx;                              // 0x01C0(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C4[0x4];                                      // 0x01C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerPawn*                        K2Node_Event_PlayerPawn;                           // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Event_ExitSocketName;                       // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D9[0x3];                                      // 0x01D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_Event_Hit_1;                                // 0x01DC(0x0088)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0264(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0270(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0274(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0278(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x027C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x0280(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x0284(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_Event_MyComp;                               // 0x0288(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_Other;                                // 0x0290(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_Event_OtherComp;                            // 0x0298(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bSelfMoved;                           // 0x02A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A1[0x3];                                      // 0x02A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_Event_HitLocation;                          // 0x02A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_HitNormal;                            // 0x02B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_NormalImpulse;                        // 0x02BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event_Hit;                                  // 0x02C8(0x0088)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0350(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0354(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0355(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_356[0x2];                                      // 0x0356(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0358(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x035C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0360(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x036C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0378(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0384(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0390(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0398(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x03A0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x03A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x03B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x03B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x03B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x03C4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABuildingProp*                          K2Node_DynamicCast_AsBuilding_Prop;                // 0x03D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x03D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D9[0x7];                                      // 0x03D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerPawn*                        K2Node_DynamicCast_AsFort_Player_Pawn;             // 0x03E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x03E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CanDamageBuilding_ReturnValue;            // 0x03E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3EA[0x6];                                      // 0x03EA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABuildingActor*                         CallFunc_CanDamageBuilding_Building_Actor;         // 0x03F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput;    // 0x03F8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue;       // 0x0408(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_409[0x7];                                      // 0x0409(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue;    // 0x0410(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerPawnAthena*                  K2Node_DynamicCast_AsFort_Player_Pawn_Athena;      // 0x0418(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0420(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsInVehicle_ReturnValue;                  // 0x0421(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0422(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0423(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_424[0x4];                                      // 0x0424(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ATestMechVehicle_C*                     K2Node_DynamicCast_AsTest_Mech_Vehicle;            // 0x0428(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0430(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x0431(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_432[0x6];                                      // 0x0432(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAttached_ReturnValue;         // 0x0438(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_2;        // 0x0440(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44C[0x4];                                      // 0x044C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array_1;                          // 0x0450(0x0010)(ConstParm, ZeroConstructor, ReferenceParm)
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x0460(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_464[0x4];                                      // 0x0464(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerPawn*                        CallFunc_Array_Get_Item_1;                         // 0x0468(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDrivingVehicle_ReturnValue_1;           // 0x0470(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetIsDashing_ReturnValue;                 // 0x0471(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_472[0x6];                                      // 0x0472(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         K2Node_MakeArray_Array_2;                          // 0x0478(0x0010)(ConstParm, ZeroConstructor, ReferenceParm)
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0488(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_OnSameTeam_ReturnValue;                   // 0x0490(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x0491(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x0492(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_493[0x1];                                      // 0x0493(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0494(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0498(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_499[0x3];                                      // 0x0499(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_NotifyName_3;                   // 0x049C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_4;                // 0x04A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x04A5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x04A6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_Hide;                           // 0x04A7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class AFortPlayerPawn*                        K2Node_CustomEvent_Actor_1;                        // 0x04A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  CallFunc_MakeGameplayTagContainerFromTag_ReturnValue; // 0x04B0(0x0020)()
	bool                                          CallFunc_IsValid_ReturnValue_7;                    // 0x04D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D1[0x7];                                      // 0x04D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerController*                  CallFunc_GetFortPlayerControllerFromActor_ReturnValue; // 0x04D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerControllerGameplay*          K2Node_DynamicCast_AsFort_Player_Controller_Gameplay; // 0x04E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x04E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4E9[0x7];                                      // 0x04E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_CustomEvent_DamagedActor;                   // 0x04F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_Damage_1;                       // 0x04F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4FC[0x4];                                      // 0x04FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            K2Node_CustomEvent_InstigatedBy;                   // 0x0500(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_DamageCauser;                   // 0x0508(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_HitLocation;                    // 0x0510(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51C[0x4];                                      // 0x051C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_CustomEvent_FHitComponent;                  // 0x0520(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_BoneName;                       // 0x0528(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_Momentum;                       // 0x0530(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_8;                    // 0x053C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_9;                    // 0x053D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_5;                // 0x053E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_10;                   // 0x053F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_VehicleIsInAir_ReturnValue;               // 0x0540(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EOstrichDetonationState                       K2Node_Event_InDetonationState;                    // 0x0541(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0542(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0543(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetIsChargingJump_ReturnValue;            // 0x0544(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_545[0x3];                                      // 0x0545(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_3;            // 0x0548(0x0010)(ZeroConstructor, NoDestructor)
	class ACharacter*                             K2Node_CustomEvent_Character;                      // 0x0558(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMovementMode                                 K2Node_CustomEvent_PrevMovementMode;               // 0x0560(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         K2Node_CustomEvent_PreviousCustomMode;             // 0x0561(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0562(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_563[0x5];                                      // 0x0563(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayCueParameters                 CallFunc_MakeGameplayCueParameters_ReturnValue;    // 0x0568(0x00B8)(ContainsInstancedReference)
	bool                                          CallFunc_Not_PreBool_ReturnValue_6;                // 0x0620(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_11;                   // 0x0621(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_622[0x6];                                      // 0x0622(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayCueParameters                 CallFunc_GC_Params_ReturnValue_1;                  // 0x0628(0x00B8)(ContainsInstancedReference)
	struct FGameplayCueParameters                 CallFunc_GC_Params_ReturnValue_2;                  // 0x06E0(0x00B8)(ContainsInstancedReference)
	struct FGameplayCueParameters                 CallFunc_GC_Params_ReturnValue_3;                  // 0x0798(0x00B8)(ContainsInstancedReference)
	class AFortPlayerPawn*                        K2Node_CustomEvent_player;                         // 0x0850(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_ExitSocket;                     // 0x0858(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0860(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_12;                   // 0x0861(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_13;                   // 0x0862(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_863[0x5];                                      // 0x0863(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayCueParameters                 CallFunc_GC_Params_ReturnValue_4;                  // 0x0868(0x00B8)(ContainsInstancedReference)
	bool                                          CallFunc_IsInVortex_ReturnValue;                   // 0x0920(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_921[0x7];                                      // 0x0921(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPawn*                              K2Node_Event_ExitingPawn_1;                        // 0x0928(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_ExitDuration;                         // 0x0930(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_934[0x4];                                      // 0x0934(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayEventData                     K2Node_MakeStruct_GameplayEventData;               // 0x0938(0x00B0)()
	class AFortPawn*                              K2Node_Event_ExitingPawn;                          // 0x09E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x09F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x09FC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_2;                          // 0x0A08(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_2;                          // 0x0A0C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_2;                          // 0x0A10(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0A14(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            CallFunc_GetController_ReturnValue_1;              // 0x0A20(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerController*                  K2Node_DynamicCast_AsFort_Player_Controller;       // 0x0A28(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x0A30(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A31[0x3];                                      // 0x0A31(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_ChargeAlpha;                          // 0x0A34(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 CallFunc_GC_Params_ReturnValue_5;                  // 0x0A38(0x00B8)(ContainsInstancedReference)
	class AController*                            CallFunc_GetController_ReturnValue_2;              // 0x0AF0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerController*                  K2Node_DynamicCast_AsFort_Player_Controller_1;     // 0x0AF8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x0B00(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B01[0x7];                                      // 0x0B01(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCameraShake*                           CallFunc_PlayCameraShake_ReturnValue;              // 0x0B08(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetIsDashing_ReturnValue_1;               // 0x0B10(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B11[0x7];                                      // 0x0B11(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_CustomEvent_Actor;                          // 0x0B18(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_4;            // 0x0B20(0x0010)(ZeroConstructor, NoDestructor)
	class ABuildingActor*                         K2Node_DynamicCast_AsBuilding_Actor;               // 0x0B30(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_7;                     // 0x0B38(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B39[0x7];                                      // 0x0B39(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0B40(0x0008)(NoDestructor, HasGetValueTypeHash)
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue_1;  // 0x0B48(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0B50(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B51[0x3];                                      // 0x0B51(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0B54(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue_1;             // 0x0B58(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B59[0x7];                                      // 0x0B59(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue_2;  // 0x0B60(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FActiveGameplayEffectHandle            CallFunc_BP_ApplyGameplayEffectToTarget_ReturnValue; // 0x0B68(0x0008)(NoDestructor, HasGetValueTypeHash)
	class UCameraAnimInst*                        CallFunc_PlayCameraAnim_ReturnValue;               // 0x0B70(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0B78(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0B7C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B7D[0x3];                                      // 0x0B7D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_3;        // 0x0B80(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B8C[0x4];                                      // 0x0B8C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_SphereOverlapActors_OutActors;            // 0x0B90(0x0010)(ZeroConstructor, ReferenceParm)
	bool                                          CallFunc_SphereOverlapActors_ReturnValue;          // 0x0BA0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BA1[0x7];                                      // 0x0BA1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item_2;                         // 0x0BA8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_6;               // 0x0BB0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0BB4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BB5[0x3];                                      // 0x0BB5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABuildingActor*                         K2Node_DynamicCast_AsBuilding_Actor_1;             // 0x0BB8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_8;                     // 0x0BC0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CanDamageBuilding_ReturnValue_1;          // 0x0BC1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BC2[0x6];                                      // 0x0BC2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABuildingActor*                         CallFunc_CanDamageBuilding_Building_Actor_1;       // 0x0BC8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_4;        // 0x0BD0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BDC[0x4];                                      // 0x0BDC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue_3;  // 0x0BE0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<EFortTeamAffiliation>                  K2Node_MakeArray_Array_3;                          // 0x0BE8(0x0010)(ZeroConstructor, ReferenceParm)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_5;        // 0x0BF8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName EventName, float EmitterTime, const struct FVector& Location, const struct FVector& Velocity)> K2Node_CreateDelegate_OutputDelegate_5;            // 0x0C04(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         CallFunc_GetActorTeam_ReturnValue;                 // 0x0C14(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C15[0x3];                                      // 0x0C15(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_6;            // 0x0C18(0x0010)(ZeroConstructor, NoDestructor)
	struct FVector                                CallFunc_KnockAwayDirection_LaunchVelocity;        // 0x0C28(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C34[0x4];                                      // 0x0C34(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue_3;              // 0x0C38(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerController*                  K2Node_DynamicCast_AsFort_Player_Controller_2;     // 0x0C40(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_9;                     // 0x0C48(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C49[0x7];                                      // 0x0C49(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_1;        // 0x0C50(0x0008)(NoDestructor, HasGetValueTypeHash)
	class UCameraShake*                           CallFunc_PlayCameraShake_ReturnValue_1;            // 0x0C58(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_14;                   // 0x0C60(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C61[0x7];                                      // 0x0C61(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 CallFunc_GetMechMesh_ReturnValue;                  // 0x0C68(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPlayMontageCallbackProxy*              CallFunc_CreateProxyObjectForPlayMontage_ReturnValue; // 0x0C70(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 CallFunc_GetMechMesh_ReturnValue_1;                // 0x0C78(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        CallFunc_SpawnSoundAttached_ReturnValue;           // 0x0C80(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_15;                   // 0x0C88(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C89[0x7];                                      // 0x0C89(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 CallFunc_GetMechMesh_ReturnValue_2;                // 0x0C90(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAttached_ReturnValue_1;       // 0x0C98(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMaxHealth_ReturnValue;                 // 0x0CA0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetHealth_ReturnValue;                    // 0x0CA4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_Damage;                         // 0x0CA8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0CAC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0CB0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_CB1[0x3];                                      // 0x0CB1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x0CB4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue;             // 0x0CB8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x0CBC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_CBD[0x3];                                      // 0x0CBD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_EventName;                      // 0x0CC0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_EmitterTime;                    // 0x0CC8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_Location;                       // 0x0CCC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_Velocity;                       // 0x0CD8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_16;                   // 0x0CE4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_1;        // 0x0CE5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetIsDashing_ReturnValue_2;               // 0x0CE6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_7;                // 0x0CE7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAttached_ReturnValue_2;       // 0x0CE8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x0CF0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_CF1[0x3];                                      // 0x0CF1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue_1;           // 0x0CF4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_7;            // 0x0CF8(0x0010)(ZeroConstructor, NoDestructor)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_2;        // 0x0D08(0x0008)(NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class ACharacter* Character, EMovementMode PrevMovementMode, uint8 PreviousCustomMode)> K2Node_CreateDelegate_OutputDelegate_8;            // 0x0D10(0x0010)(ZeroConstructor, NoDestructor)
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0D20(0x0030)(IsPlainOldData, NoDestructor)
	class ABuildingGameplayActor*                 CallFunc_SpawnBuildingGameplayActor_ReturnValue;   // 0x0D50(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABGA_Ostrich_ShieldBubble_C*            K2Node_DynamicCast_AsBGA_Ostrich_Shield_Bubble;    // 0x0D58(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_10;                    // 0x0D60(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsServer_ReturnValue;                     // 0x0D61(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D62[0x2];                                      // 0x0D62(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_VSize_ReturnValue;                        // 0x0D64(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0D68(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlaying_ReturnValue;                    // 0x0D69(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D6A[0x6];                                      // 0x0D6A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0D70(0x0010)(ConstParm, ZeroConstructor, ReferenceParm)
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x0D80(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_CapsuleTraceSingleForObjects_OutHit;      // 0x0D84(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_CapsuleTraceSingleForObjects_ReturnValue; // 0x0E0C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_1;            // 0x0E0D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_1;         // 0x0E0E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E0F[0x1];                                      // 0x0E0F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time_1;                    // 0x0E10(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_1;                // 0x0E14(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location_1;                // 0x0E18(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_1;             // 0x0E24(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_1;                  // 0x0E30(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_1;            // 0x0E3C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_1;                 // 0x0E48(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_1;                // 0x0E50(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_1;            // 0x0E58(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_1;             // 0x0E60(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_1;                 // 0x0E68(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_1;               // 0x0E6C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart_1;              // 0x0E70(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_1;                // 0x0E7C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0E88(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E89[0x3];                                      // 0x0E89(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0E8C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_4;                   // 0x0E90(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E94[0x4];                                      // 0x0E94(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerPawn*                        CallFunc_Array_Get_Item_3;                         // 0x0E98(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDrivingVehicle_ReturnValue_2;           // 0x0EA0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_EA1[0x3];                                      // 0x0EA1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_9;            // 0x0EA4(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         Temp_int_Loop_Counter_Variable_4;                  // 0x0EB4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_5;                  // 0x0EB8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x0EBC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_EBD[0x3];                                      // 0x0EBD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x0EC0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_4;                // 0x0EC4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_EC5[0x3];                                      // 0x0EC5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_5;                 // 0x0EC8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValueAtLevel_ReturnValue;              // 0x0ECC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_10;           // 0x0ED0(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_2;         // 0x0EE0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_EE1[0x3];                                      // 0x0EE1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetValueAtLevel_ReturnValue_1;            // 0x0EE4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_3;         // 0x0EE8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_17;                   // 0x0EE9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_EEA[0x2];                                      // 0x0EEA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_5;                   // 0x0EEC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 CallFunc_MakeGameplayCueParameters_ReturnValue_1;  // 0x0EF0(0x00B8)(ContainsInstancedReference)
	class AFortPlayerPawn*                        CallFunc_Array_Get_Item_4;                         // 0x0FA8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDrivingVehicle_ReturnValue_3;           // 0x0FB0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_FB1[0x7];                                      // 0x0FB1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue_4;  // 0x0FB8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FActiveGameplayEffectHandle            CallFunc_BP_ApplyGameplayEffectToTarget_ReturnValue_1; // 0x0FC0(0x0008)(NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class AActor* DamagedActor, float Damage, class AController* InstigatedBy, class AActor* DamageCauser, const struct FVector& HitLocation, class UPrimitiveComponent* FHitComponent, class FName BoneName, const struct FVector& Momentum)> K2Node_CreateDelegate_OutputDelegate_11;           // 0x0FC8(0x0010)(ZeroConstructor, NoDestructor)
	float                                         K2Node_Event_Damage;                               // 0x0FD8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable;                                // 0x0FDC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_18;                   // 0x0FE4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_FE5[0x3];                                      // 0x0FE5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayCueParameters                 CallFunc_GC_Params_ReturnValue_6;                  // 0x0FE8(0x00B8)(ContainsInstancedReference)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_6;        // 0x10A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_7;        // 0x10AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_8;        // 0x10B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_9;        // 0x10C4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_10;       // 0x10D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName;                     // 0x10DC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10E4[0x4];                                     // 0x10E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EFortTeamAffiliation>                  K2Node_MakeArray_Array_4;                          // 0x10E8(0x0010)(ZeroConstructor, ReferenceParm)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_11;       // 0x10F8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetActorTeam_ReturnValue_1;               // 0x1104(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1105[0x3];                                     // 0x1105(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	const class UAthenaItemWrapDefinition*        K2Node_Event_LoadedWrap;                           // 0x1108(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue_5;  // 0x1110(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FActiveGameplayEffectHandle            CallFunc_BP_ApplyGameplayEffectToTarget_ReturnValue_2; // 0x1118(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FSkeletalMaterial                      CallFunc_Array_Get_Item_5;                         // 0x1120(0x0028)(NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue_7;               // 0x1148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_5;                // 0x114C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_114D[0x3];                                     // 0x114D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_ApplyMaterialAndUseWrapIfPossible_ReturnValue; // 0x1150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_1;                   // 0x1158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_12;           // 0x1160(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          K2Node_Event_bStarting;                            // 0x1170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1171[0x7];                                     // 0x1171(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        CallFunc_SpawnSoundAttached_ReturnValue_1;         // 0x1178(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        CallFunc_SpawnSoundAttached_ReturnValue_2;         // 0x1180(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_13;           // 0x1188(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_14;           // 0x1198(0x0010)(ZeroConstructor, NoDestructor)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_3;        // 0x11A8(0x0008)(NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_2;                   // 0x11B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_15;           // 0x11B8(0x0010)(ZeroConstructor, NoDestructor)
	class USkeletalMeshComponent*                 CallFunc_GetMechMesh_ReturnValue_3;                // 0x11C8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_4;        // 0x11D0(0x0008)(NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAttached_ReturnValue_3;       // 0x11D8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 CallFunc_GC_Params_ReturnValue_7;                  // 0x11E0(0x00B8)(ContainsInstancedReference)
	struct FGameplayCueParameters                 CallFunc_GC_Params_ReturnValue_8;                  // 0x1298(0x00B8)(ContainsInstancedReference)
	struct FGameplayCueParameters                 CallFunc_MakeGameplayCueParameters_ReturnValue_2;  // 0x1350(0x00B8)(ContainsInstancedReference)
	struct FGameplayCueParameters                 CallFunc_GC_Params_ReturnValue_9;                  // 0x1408(0x00B8)(ContainsInstancedReference)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_16;           // 0x14C0(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle) == 0x000010, "Wrong alignment on TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle");
static_assert(sizeof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle) == 0x0014D0, "Wrong size on TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, EntryPoint) == 0x000000, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::EntryPoint' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, Temp_int_Array_Index_Variable) == 0x00000C, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, Temp_int_Array_Index_Variable_1) == 0x000010, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_IsValid_ReturnValue) == 0x000014, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_IsValid_ReturnValue_1) == 0x000015, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_Not_PreBool_ReturnValue) == 0x000016, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_IsValid_ReturnValue_2) == 0x000017, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_Not_PreBool_ReturnValue_1) == 0x000018, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_IsValid_ReturnValue_3) == 0x000019, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_GetAllPassengers_ReturnValue) == 0x000020, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_GetAllPassengers_ReturnValue' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_Array_Length_ReturnValue_1) == 0x000034, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_Array_Length_ReturnValue_2) == 0x000038, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, K2Node_SwitchInteger_CmpSuccess) == 0x00003C, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, K2Node_CreateDelegate_OutputDelegate) == 0x000040, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, K2Node_CreateDelegate_OutputDelegate_1) == 0x000050, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_GC_Params_ReturnValue) == 0x000060, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_GC_Params_ReturnValue' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, Temp_bool_IsClosed_Variable) == 0x000118, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, Temp_bool_Has_Been_Initd_Variable) == 0x000119, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, Temp_int_Loop_Counter_Variable_1) == 0x00011C, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, K2Node_CustomEvent_NotifyName_4) == 0x000120, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::K2Node_CustomEvent_NotifyName_4' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_Add_IntInt_ReturnValue_1) == 0x000128, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_K2_GetActorLocation_ReturnValue) == 0x00012C, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, K2Node_MakeArray_Array) == 0x000138, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_MakeVector_ReturnValue) == 0x000148, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000154, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, K2Node_CreateDelegate_OutputDelegate_2) == 0x000160, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_HasAuthority_ReturnValue) == 0x000170, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_GetAllPassengers_ReturnValue_1) == 0x000178, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_GetAllPassengers_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_Array_Get_Item) == 0x000188, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_Array_Length_ReturnValue_3) == 0x000190, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_IsDrivingVehicle_ReturnValue) == 0x000194, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_IsDrivingVehicle_ReturnValue' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_Array_Length_ReturnValue_4) == 0x000198, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_Less_IntInt_ReturnValue) == 0x00019C, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_Array_Length_ReturnValue_5) == 0x0001A0, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_Array_Length_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, K2Node_SwitchInteger_CmpSuccess_1) == 0x0001A4, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::K2Node_SwitchInteger_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, Temp_int_Loop_Counter_Variable_2) == 0x0001A8, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_Add_IntInt_ReturnValue_2) == 0x0001AC, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, Temp_int_Array_Index_Variable_2) == 0x0001B0, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0001B4, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, K2Node_Event_PlayerPawn_1) == 0x0001B8, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::K2Node_Event_PlayerPawn_1' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, K2Node_Event_SeatIdx) == 0x0001C0, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::K2Node_Event_SeatIdx' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, K2Node_Event_PlayerPawn) == 0x0001C8, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::K2Node_Event_PlayerPawn' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, K2Node_Event_ExitSocketName) == 0x0001D0, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::K2Node_Event_ExitSocketName' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x0001D8, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, K2Node_Event_Hit_1) == 0x0001DC, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::K2Node_Event_Hit_1' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000264, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_BreakVector_X) == 0x000270, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_BreakVector_Y) == 0x000274, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_BreakVector_Z) == 0x000278, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_BreakVector_X_1) == 0x00027C, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_BreakVector_Y_1) == 0x000280, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_BreakVector_Z_1) == 0x000284, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, K2Node_Event_MyComp) == 0x000288, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::K2Node_Event_MyComp' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, K2Node_Event_Other) == 0x000290, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::K2Node_Event_Other' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, K2Node_Event_OtherComp) == 0x000298, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::K2Node_Event_OtherComp' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, K2Node_Event_bSelfMoved) == 0x0002A0, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::K2Node_Event_bSelfMoved' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, K2Node_Event_HitLocation) == 0x0002A4, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::K2Node_Event_HitLocation' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, K2Node_Event_HitNormal) == 0x0002B0, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::K2Node_Event_HitNormal' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, K2Node_Event_NormalImpulse) == 0x0002BC, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::K2Node_Event_NormalImpulse' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, K2Node_Event_Hit) == 0x0002C8, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::K2Node_Event_Hit' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000350, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_BreakHitResult_bBlockingHit) == 0x000354, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_BreakHitResult_bInitialOverlap) == 0x000355, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_BreakHitResult_Time) == 0x000358, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_BreakHitResult_Distance) == 0x00035C, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_BreakHitResult_Location) == 0x000360, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_BreakHitResult_ImpactPoint) == 0x00036C, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_BreakHitResult_Normal) == 0x000378, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_BreakHitResult_ImpactNormal) == 0x000384, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_BreakHitResult_PhysMat) == 0x000390, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_BreakHitResult_HitActor) == 0x000398, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_BreakHitResult_HitComponent) == 0x0003A0, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_BreakHitResult_HitBoneName) == 0x0003A8, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_BreakHitResult_HitItem) == 0x0003B0, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_BreakHitResult_FaceIndex) == 0x0003B4, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_BreakHitResult_TraceStart) == 0x0003B8, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_BreakHitResult_TraceEnd) == 0x0003C4, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, K2Node_DynamicCast_AsBuilding_Prop) == 0x0003D0, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::K2Node_DynamicCast_AsBuilding_Prop' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, K2Node_DynamicCast_bSuccess) == 0x0003D8, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, K2Node_DynamicCast_AsFort_Player_Pawn) == 0x0003E0, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::K2Node_DynamicCast_AsFort_Player_Pawn' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, K2Node_DynamicCast_bSuccess_1) == 0x0003E8, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_CanDamageBuilding_ReturnValue) == 0x0003E9, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_CanDamageBuilding_ReturnValue' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_CanDamageBuilding_Building_Actor) == 0x0003F0, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_CanDamageBuilding_Building_Actor' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_HasMatchingGameplayTag_self_CastInput) == 0x0003F8, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_HasMatchingGameplayTag_self_CastInput' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_HasMatchingGameplayTag_ReturnValue) == 0x000408, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_HasMatchingGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_GetAbilitySystemComponent_ReturnValue) == 0x000410, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_GetAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, K2Node_DynamicCast_AsFort_Player_Pawn_Athena) == 0x000418, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::K2Node_DynamicCast_AsFort_Player_Pawn_Athena' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, K2Node_DynamicCast_bSuccess_2) == 0x000420, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_IsInVehicle_ReturnValue) == 0x000421, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_IsInVehicle_ReturnValue' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_IsValid_ReturnValue_4) == 0x000422, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_Not_PreBool_ReturnValue_2) == 0x000423, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, K2Node_DynamicCast_AsTest_Mech_Vehicle) == 0x000428, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::K2Node_DynamicCast_AsTest_Mech_Vehicle' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, K2Node_DynamicCast_bSuccess_3) == 0x000430, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_Not_PreBool_ReturnValue_3) == 0x000431, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_SpawnEmitterAttached_ReturnValue) == 0x000438, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_SpawnEmitterAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_K2_GetActorLocation_ReturnValue_2) == 0x000440, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_K2_GetActorLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, K2Node_MakeArray_Array_1) == 0x000450, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, Temp_int_Array_Index_Variable_3) == 0x000460, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_Array_Get_Item_1) == 0x000468, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_IsDrivingVehicle_ReturnValue_1) == 0x000470, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_IsDrivingVehicle_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_GetIsDashing_ReturnValue) == 0x000471, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_GetIsDashing_ReturnValue' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, K2Node_MakeArray_Array_2) == 0x000478, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_GetController_ReturnValue) == 0x000488, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_OnSameTeam_ReturnValue) == 0x000490, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_OnSameTeam_ReturnValue' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_IsValid_ReturnValue_5) == 0x000491, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_IsValid_ReturnValue_6) == 0x000492, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_Array_Add_ReturnValue) == 0x000494, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_Array_Contains_ReturnValue) == 0x000498, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, K2Node_CustomEvent_NotifyName_3) == 0x00049C, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::K2Node_CustomEvent_NotifyName_3' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_Not_PreBool_ReturnValue_4) == 0x0004A4, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_Not_PreBool_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_BooleanAND_ReturnValue) == 0x0004A5, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_BooleanAND_ReturnValue_1) == 0x0004A6, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, K2Node_CustomEvent_Hide) == 0x0004A7, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::K2Node_CustomEvent_Hide' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, K2Node_CustomEvent_Actor_1) == 0x0004A8, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::K2Node_CustomEvent_Actor_1' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_MakeGameplayTagContainerFromTag_ReturnValue) == 0x0004B0, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_MakeGameplayTagContainerFromTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_IsValid_ReturnValue_7) == 0x0004D0, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_IsValid_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_GetFortPlayerControllerFromActor_ReturnValue) == 0x0004D8, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_GetFortPlayerControllerFromActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, K2Node_DynamicCast_AsFort_Player_Controller_Gameplay) == 0x0004E0, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::K2Node_DynamicCast_AsFort_Player_Controller_Gameplay' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, K2Node_DynamicCast_bSuccess_4) == 0x0004E8, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, K2Node_CustomEvent_DamagedActor) == 0x0004F0, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::K2Node_CustomEvent_DamagedActor' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, K2Node_CustomEvent_Damage_1) == 0x0004F8, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::K2Node_CustomEvent_Damage_1' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, K2Node_CustomEvent_InstigatedBy) == 0x000500, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::K2Node_CustomEvent_InstigatedBy' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, K2Node_CustomEvent_DamageCauser) == 0x000508, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::K2Node_CustomEvent_DamageCauser' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, K2Node_CustomEvent_HitLocation) == 0x000510, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::K2Node_CustomEvent_HitLocation' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, K2Node_CustomEvent_FHitComponent) == 0x000520, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::K2Node_CustomEvent_FHitComponent' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, K2Node_CustomEvent_BoneName) == 0x000528, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::K2Node_CustomEvent_BoneName' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, K2Node_CustomEvent_Momentum) == 0x000530, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::K2Node_CustomEvent_Momentum' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_IsValid_ReturnValue_8) == 0x00053C, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_IsValid_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_IsValid_ReturnValue_9) == 0x00053D, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_IsValid_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_Not_PreBool_ReturnValue_5) == 0x00053E, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_Not_PreBool_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_IsValid_ReturnValue_10) == 0x00053F, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_IsValid_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_VehicleIsInAir_ReturnValue) == 0x000540, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_VehicleIsInAir_ReturnValue' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, K2Node_Event_InDetonationState) == 0x000541, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::K2Node_Event_InDetonationState' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000542, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000543, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_GetIsChargingJump_ReturnValue) == 0x000544, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_GetIsChargingJump_ReturnValue' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, K2Node_CreateDelegate_OutputDelegate_3) == 0x000548, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, K2Node_CustomEvent_Character) == 0x000558, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::K2Node_CustomEvent_Character' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, K2Node_CustomEvent_PrevMovementMode) == 0x000560, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::K2Node_CustomEvent_PrevMovementMode' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, K2Node_CustomEvent_PreviousCustomMode) == 0x000561, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::K2Node_CustomEvent_PreviousCustomMode' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000562, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_MakeGameplayCueParameters_ReturnValue) == 0x000568, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_MakeGameplayCueParameters_ReturnValue' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_Not_PreBool_ReturnValue_6) == 0x000620, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_Not_PreBool_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_IsValid_ReturnValue_11) == 0x000621, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_IsValid_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_GC_Params_ReturnValue_1) == 0x000628, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_GC_Params_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_GC_Params_ReturnValue_2) == 0x0006E0, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_GC_Params_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_GC_Params_ReturnValue_3) == 0x000798, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_GC_Params_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, K2Node_CustomEvent_player) == 0x000850, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::K2Node_CustomEvent_player' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, K2Node_CustomEvent_ExitSocket) == 0x000858, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::K2Node_CustomEvent_ExitSocket' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000860, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_IsValid_ReturnValue_12) == 0x000861, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_IsValid_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_IsValid_ReturnValue_13) == 0x000862, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_IsValid_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_GC_Params_ReturnValue_4) == 0x000868, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_GC_Params_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_IsInVortex_ReturnValue) == 0x000920, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_IsInVortex_ReturnValue' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, K2Node_Event_ExitingPawn_1) == 0x000928, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::K2Node_Event_ExitingPawn_1' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, K2Node_Event_ExitDuration) == 0x000930, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::K2Node_Event_ExitDuration' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, K2Node_MakeStruct_GameplayEventData) == 0x000938, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::K2Node_MakeStruct_GameplayEventData' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, K2Node_Event_ExitingPawn) == 0x0009E8, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::K2Node_Event_ExitingPawn' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_GetActorForwardVector_ReturnValue) == 0x0009F0, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0009FC, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_BreakVector_X_2) == 0x000A08, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_BreakVector_Y_2) == 0x000A0C, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_BreakVector_Z_2) == 0x000A10, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_MakeVector_ReturnValue_1) == 0x000A14, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_GetController_ReturnValue_1) == 0x000A20, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_GetController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, K2Node_DynamicCast_AsFort_Player_Controller) == 0x000A28, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::K2Node_DynamicCast_AsFort_Player_Controller' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, K2Node_DynamicCast_bSuccess_5) == 0x000A30, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, K2Node_Event_ChargeAlpha) == 0x000A34, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::K2Node_Event_ChargeAlpha' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_GC_Params_ReturnValue_5) == 0x000A38, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_GC_Params_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_GetController_ReturnValue_2) == 0x000AF0, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_GetController_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, K2Node_DynamicCast_AsFort_Player_Controller_1) == 0x000AF8, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::K2Node_DynamicCast_AsFort_Player_Controller_1' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, K2Node_DynamicCast_bSuccess_6) == 0x000B00, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_PlayCameraShake_ReturnValue) == 0x000B08, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_PlayCameraShake_ReturnValue' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_GetIsDashing_ReturnValue_1) == 0x000B10, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_GetIsDashing_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, K2Node_CustomEvent_Actor) == 0x000B18, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::K2Node_CustomEvent_Actor' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, K2Node_CreateDelegate_OutputDelegate_4) == 0x000B20, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, K2Node_DynamicCast_AsBuilding_Actor) == 0x000B30, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::K2Node_DynamicCast_AsBuilding_Actor' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, K2Node_DynamicCast_bSuccess_7) == 0x000B38, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::K2Node_DynamicCast_bSuccess_7' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000B40, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_GetAbilitySystemComponent_ReturnValue_1) == 0x000B48, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_GetAbilitySystemComponent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_BooleanAND_ReturnValue_2) == 0x000B50, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_Array_Add_ReturnValue_1) == 0x000B54, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_Array_Contains_ReturnValue_1) == 0x000B58, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_Array_Contains_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_GetAbilitySystemComponent_ReturnValue_2) == 0x000B60, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_GetAbilitySystemComponent_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_BP_ApplyGameplayEffectToTarget_ReturnValue) == 0x000B68, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_BP_ApplyGameplayEffectToTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_PlayCameraAnim_ReturnValue) == 0x000B70, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_PlayCameraAnim_ReturnValue' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000B78, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000B7C, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_K2_GetActorLocation_ReturnValue_3) == 0x000B80, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_K2_GetActorLocation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_SphereOverlapActors_OutActors) == 0x000B90, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_SphereOverlapActors_OutActors' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_SphereOverlapActors_ReturnValue) == 0x000BA0, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_SphereOverlapActors_ReturnValue' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_Array_Get_Item_2) == 0x000BA8, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_Array_Length_ReturnValue_6) == 0x000BB0, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_Array_Length_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_Less_IntInt_ReturnValue_1) == 0x000BB4, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, K2Node_DynamicCast_AsBuilding_Actor_1) == 0x000BB8, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::K2Node_DynamicCast_AsBuilding_Actor_1' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, K2Node_DynamicCast_bSuccess_8) == 0x000BC0, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::K2Node_DynamicCast_bSuccess_8' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_CanDamageBuilding_ReturnValue_1) == 0x000BC1, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_CanDamageBuilding_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_CanDamageBuilding_Building_Actor_1) == 0x000BC8, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_CanDamageBuilding_Building_Actor_1' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_K2_GetActorLocation_ReturnValue_4) == 0x000BD0, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_K2_GetActorLocation_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_GetAbilitySystemComponent_ReturnValue_3) == 0x000BE0, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_GetAbilitySystemComponent_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, K2Node_MakeArray_Array_3) == 0x000BE8, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::K2Node_MakeArray_Array_3' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_K2_GetActorLocation_ReturnValue_5) == 0x000BF8, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_K2_GetActorLocation_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, K2Node_CreateDelegate_OutputDelegate_5) == 0x000C04, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_GetActorTeam_ReturnValue) == 0x000C14, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_GetActorTeam_ReturnValue' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, K2Node_CreateDelegate_OutputDelegate_6) == 0x000C18, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_KnockAwayDirection_LaunchVelocity) == 0x000C28, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_KnockAwayDirection_LaunchVelocity' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_GetController_ReturnValue_3) == 0x000C38, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_GetController_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, K2Node_DynamicCast_AsFort_Player_Controller_2) == 0x000C40, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::K2Node_DynamicCast_AsFort_Player_Controller_2' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, K2Node_DynamicCast_bSuccess_9) == 0x000C48, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::K2Node_DynamicCast_bSuccess_9' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_K2_SetTimerDelegate_ReturnValue_1) == 0x000C50, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_K2_SetTimerDelegate_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_PlayCameraShake_ReturnValue_1) == 0x000C58, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_PlayCameraShake_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_IsValid_ReturnValue_14) == 0x000C60, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_IsValid_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_GetMechMesh_ReturnValue) == 0x000C68, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_GetMechMesh_ReturnValue' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_CreateProxyObjectForPlayMontage_ReturnValue) == 0x000C70, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_CreateProxyObjectForPlayMontage_ReturnValue' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_GetMechMesh_ReturnValue_1) == 0x000C78, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_GetMechMesh_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_SpawnSoundAttached_ReturnValue) == 0x000C80, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_SpawnSoundAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_IsValid_ReturnValue_15) == 0x000C88, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_IsValid_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_GetMechMesh_ReturnValue_2) == 0x000C90, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_GetMechMesh_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_SpawnEmitterAttached_ReturnValue_1) == 0x000C98, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_SpawnEmitterAttached_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_GetMaxHealth_ReturnValue) == 0x000CA0, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_GetMaxHealth_ReturnValue' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_GetHealth_ReturnValue) == 0x000CA4, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_GetHealth_ReturnValue' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, K2Node_CustomEvent_Damage) == 0x000CA8, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::K2Node_CustomEvent_Damage' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000CAC, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000CB0, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_Lerp_ReturnValue) == 0x000CB4, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_Conv_BoolToFloat_ReturnValue) == 0x000CB8, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_Conv_BoolToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x000CBC, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, K2Node_CustomEvent_EventName) == 0x000CC0, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::K2Node_CustomEvent_EventName' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, K2Node_CustomEvent_EmitterTime) == 0x000CC8, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::K2Node_CustomEvent_EmitterTime' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, K2Node_CustomEvent_Location) == 0x000CCC, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::K2Node_CustomEvent_Location' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, K2Node_CustomEvent_Velocity) == 0x000CD8, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::K2Node_CustomEvent_Velocity' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_IsValid_ReturnValue_16) == 0x000CE4, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_IsValid_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_EqualEqual_NameName_ReturnValue_1) == 0x000CE5, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_EqualEqual_NameName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_GetIsDashing_ReturnValue_2) == 0x000CE6, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_GetIsDashing_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_Not_PreBool_ReturnValue_7) == 0x000CE7, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_Not_PreBool_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_SpawnEmitterAttached_ReturnValue_2) == 0x000CE8, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_SpawnEmitterAttached_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_BooleanAND_ReturnValue_3) == 0x000CF0, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_Conv_BoolToFloat_ReturnValue_1) == 0x000CF4, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_Conv_BoolToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, K2Node_CreateDelegate_OutputDelegate_7) == 0x000CF8, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::K2Node_CreateDelegate_OutputDelegate_7' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_K2_SetTimerDelegate_ReturnValue_2) == 0x000D08, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_K2_SetTimerDelegate_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, K2Node_CreateDelegate_OutputDelegate_8) == 0x000D10, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::K2Node_CreateDelegate_OutputDelegate_8' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_GetTransform_ReturnValue) == 0x000D20, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_SpawnBuildingGameplayActor_ReturnValue) == 0x000D50, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_SpawnBuildingGameplayActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, K2Node_DynamicCast_AsBGA_Ostrich_Shield_Bubble) == 0x000D58, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::K2Node_DynamicCast_AsBGA_Ostrich_Shield_Bubble' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, K2Node_DynamicCast_bSuccess_10) == 0x000D60, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::K2Node_DynamicCast_bSuccess_10' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_IsServer_ReturnValue) == 0x000D61, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_IsServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_VSize_ReturnValue) == 0x000D64, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000D68, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_IsPlaying_ReturnValue) == 0x000D69, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_IsPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, Temp_object_Variable) == 0x000D70, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, Temp_int_Loop_Counter_Variable_3) == 0x000D80, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_CapsuleTraceSingleForObjects_OutHit) == 0x000D84, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_CapsuleTraceSingleForObjects_OutHit' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_CapsuleTraceSingleForObjects_ReturnValue) == 0x000E0C, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_CapsuleTraceSingleForObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_BreakHitResult_bBlockingHit_1) == 0x000E0D, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_BreakHitResult_bBlockingHit_1' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_BreakHitResult_bInitialOverlap_1) == 0x000E0E, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_BreakHitResult_bInitialOverlap_1' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_BreakHitResult_Time_1) == 0x000E10, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_BreakHitResult_Time_1' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_BreakHitResult_Distance_1) == 0x000E14, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_BreakHitResult_Distance_1' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_BreakHitResult_Location_1) == 0x000E18, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_BreakHitResult_Location_1' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_BreakHitResult_ImpactPoint_1) == 0x000E24, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_BreakHitResult_ImpactPoint_1' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_BreakHitResult_Normal_1) == 0x000E30, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_BreakHitResult_Normal_1' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_BreakHitResult_ImpactNormal_1) == 0x000E3C, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_BreakHitResult_ImpactNormal_1' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_BreakHitResult_PhysMat_1) == 0x000E48, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_BreakHitResult_PhysMat_1' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_BreakHitResult_HitActor_1) == 0x000E50, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_BreakHitResult_HitActor_1' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_BreakHitResult_HitComponent_1) == 0x000E58, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_BreakHitResult_HitComponent_1' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_BreakHitResult_HitBoneName_1) == 0x000E60, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_BreakHitResult_HitBoneName_1' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_BreakHitResult_HitItem_1) == 0x000E68, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_BreakHitResult_HitItem_1' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_BreakHitResult_FaceIndex_1) == 0x000E6C, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_BreakHitResult_FaceIndex_1' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_BreakHitResult_TraceStart_1) == 0x000E70, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_BreakHitResult_TraceStart_1' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_BreakHitResult_TraceEnd_1) == 0x000E7C, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_BreakHitResult_TraceEnd_1' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_Less_IntInt_ReturnValue_2) == 0x000E88, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_Add_IntInt_ReturnValue_3) == 0x000E8C, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, Temp_int_Array_Index_Variable_4) == 0x000E90, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::Temp_int_Array_Index_Variable_4' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_Array_Get_Item_3) == 0x000E98, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_IsDrivingVehicle_ReturnValue_2) == 0x000EA0, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_IsDrivingVehicle_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, K2Node_CreateDelegate_OutputDelegate_9) == 0x000EA4, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::K2Node_CreateDelegate_OutputDelegate_9' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, Temp_int_Loop_Counter_Variable_4) == 0x000EB4, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::Temp_int_Loop_Counter_Variable_4' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, Temp_int_Loop_Counter_Variable_5) == 0x000EB8, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::Temp_int_Loop_Counter_Variable_5' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_Less_IntInt_ReturnValue_3) == 0x000EBC, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_Add_IntInt_ReturnValue_4) == 0x000EC0, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_Less_IntInt_ReturnValue_4) == 0x000EC4, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_Less_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_Add_IntInt_ReturnValue_5) == 0x000EC8, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_Add_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_GetValueAtLevel_ReturnValue) == 0x000ECC, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_GetValueAtLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, K2Node_CreateDelegate_OutputDelegate_10) == 0x000ED0, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::K2Node_CreateDelegate_OutputDelegate_10' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_Greater_FloatFloat_ReturnValue_2) == 0x000EE0, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_Greater_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_GetValueAtLevel_ReturnValue_1) == 0x000EE4, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_GetValueAtLevel_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_Greater_FloatFloat_ReturnValue_3) == 0x000EE8, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_Greater_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_IsValid_ReturnValue_17) == 0x000EE9, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_IsValid_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, Temp_int_Array_Index_Variable_5) == 0x000EEC, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::Temp_int_Array_Index_Variable_5' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_MakeGameplayCueParameters_ReturnValue_1) == 0x000EF0, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_MakeGameplayCueParameters_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_Array_Get_Item_4) == 0x000FA8, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_IsDrivingVehicle_ReturnValue_3) == 0x000FB0, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_IsDrivingVehicle_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_GetAbilitySystemComponent_ReturnValue_4) == 0x000FB8, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_GetAbilitySystemComponent_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_BP_ApplyGameplayEffectToTarget_ReturnValue_1) == 0x000FC0, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_BP_ApplyGameplayEffectToTarget_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, K2Node_CreateDelegate_OutputDelegate_11) == 0x000FC8, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::K2Node_CreateDelegate_OutputDelegate_11' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, K2Node_Event_Damage) == 0x000FD8, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::K2Node_Event_Damage' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, Temp_name_Variable) == 0x000FDC, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_IsValid_ReturnValue_18) == 0x000FE4, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_IsValid_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_GC_Params_ReturnValue_6) == 0x000FE8, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_GC_Params_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_K2_GetActorLocation_ReturnValue_6) == 0x0010A0, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_K2_GetActorLocation_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_K2_GetActorLocation_ReturnValue_7) == 0x0010AC, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_K2_GetActorLocation_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_K2_GetActorLocation_ReturnValue_8) == 0x0010B8, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_K2_GetActorLocation_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_K2_GetActorLocation_ReturnValue_9) == 0x0010C4, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_K2_GetActorLocation_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_K2_GetActorLocation_ReturnValue_10) == 0x0010D0, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_K2_GetActorLocation_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, K2Node_CustomEvent_NotifyName) == 0x0010DC, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::K2Node_CustomEvent_NotifyName' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, K2Node_MakeArray_Array_4) == 0x0010E8, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::K2Node_MakeArray_Array_4' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_K2_GetActorLocation_ReturnValue_11) == 0x0010F8, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_K2_GetActorLocation_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_GetActorTeam_ReturnValue_1) == 0x001104, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_GetActorTeam_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, K2Node_Event_LoadedWrap) == 0x001108, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::K2Node_Event_LoadedWrap' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_GetAbilitySystemComponent_ReturnValue_5) == 0x001110, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_GetAbilitySystemComponent_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_BP_ApplyGameplayEffectToTarget_ReturnValue_2) == 0x001118, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_BP_ApplyGameplayEffectToTarget_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_Array_Get_Item_5) == 0x001120, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_Array_Get_Item_5' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_Array_Length_ReturnValue_7) == 0x001148, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_Array_Length_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_Less_IntInt_ReturnValue_5) == 0x00114C, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_Less_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_ApplyMaterialAndUseWrapIfPossible_ReturnValue) == 0x001150, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_ApplyMaterialAndUseWrapIfPossible_ReturnValue' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, K2Node_CustomEvent_NotifyName_1) == 0x001158, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::K2Node_CustomEvent_NotifyName_1' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, K2Node_CreateDelegate_OutputDelegate_12) == 0x001160, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::K2Node_CreateDelegate_OutputDelegate_12' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, K2Node_Event_bStarting) == 0x001170, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::K2Node_Event_bStarting' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_SpawnSoundAttached_ReturnValue_1) == 0x001178, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_SpawnSoundAttached_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_SpawnSoundAttached_ReturnValue_2) == 0x001180, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_SpawnSoundAttached_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, K2Node_CreateDelegate_OutputDelegate_13) == 0x001188, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::K2Node_CreateDelegate_OutputDelegate_13' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, K2Node_CreateDelegate_OutputDelegate_14) == 0x001198, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::K2Node_CreateDelegate_OutputDelegate_14' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_K2_SetTimerDelegate_ReturnValue_3) == 0x0011A8, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_K2_SetTimerDelegate_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, K2Node_CustomEvent_NotifyName_2) == 0x0011B0, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::K2Node_CustomEvent_NotifyName_2' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, K2Node_CreateDelegate_OutputDelegate_15) == 0x0011B8, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::K2Node_CreateDelegate_OutputDelegate_15' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_GetMechMesh_ReturnValue_3) == 0x0011C8, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_GetMechMesh_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_K2_SetTimerDelegate_ReturnValue_4) == 0x0011D0, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_K2_SetTimerDelegate_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_SpawnEmitterAttached_ReturnValue_3) == 0x0011D8, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_SpawnEmitterAttached_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_GC_Params_ReturnValue_7) == 0x0011E0, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_GC_Params_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_GC_Params_ReturnValue_8) == 0x001298, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_GC_Params_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_MakeGameplayCueParameters_ReturnValue_2) == 0x001350, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_MakeGameplayCueParameters_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, CallFunc_GC_Params_ReturnValue_9) == 0x001408, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::CallFunc_GC_Params_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle, K2Node_CreateDelegate_OutputDelegate_16) == 0x0014C0, "Member 'TestMechVehicle_C_ExecuteUbergraph_TestMechVehicle::K2Node_CreateDelegate_OutputDelegate_16' has a wrong offset!");

// Function TestMechVehicle.TestMechVehicle_C.OnLoadingRockets
// 0x0001 (0x0001 - 0x0000)
struct TestMechVehicle_C_OnLoadingRockets final
{
public:
	bool                                          bStarting;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TestMechVehicle_C_OnLoadingRockets) == 0x000001, "Wrong alignment on TestMechVehicle_C_OnLoadingRockets");
static_assert(sizeof(TestMechVehicle_C_OnLoadingRockets) == 0x000001, "Wrong size on TestMechVehicle_C_OnLoadingRockets");
static_assert(offsetof(TestMechVehicle_C_OnLoadingRockets, bStarting) == 0x000000, "Member 'TestMechVehicle_C_OnLoadingRockets::bStarting' has a wrong offset!");

// Function TestMechVehicle.TestMechVehicle_C.K2_ApplyCosmeticWrap
// 0x0008 (0x0008 - 0x0000)
struct TestMechVehicle_C_K2_ApplyCosmeticWrap final
{
public:
	const class UAthenaItemWrapDefinition*        LoadedWrap;                                        // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TestMechVehicle_C_K2_ApplyCosmeticWrap) == 0x000008, "Wrong alignment on TestMechVehicle_C_K2_ApplyCosmeticWrap");
static_assert(sizeof(TestMechVehicle_C_K2_ApplyCosmeticWrap) == 0x000008, "Wrong size on TestMechVehicle_C_K2_ApplyCosmeticWrap");
static_assert(offsetof(TestMechVehicle_C_K2_ApplyCosmeticWrap, LoadedWrap) == 0x000000, "Member 'TestMechVehicle_C_K2_ApplyCosmeticWrap::LoadedWrap' has a wrong offset!");

// Function TestMechVehicle.TestMechVehicle_C.GunnerShieldTakeDamage
// 0x0004 (0x0004 - 0x0000)
struct TestMechVehicle_C_GunnerShieldTakeDamage final
{
public:
	float                                         Damage;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TestMechVehicle_C_GunnerShieldTakeDamage) == 0x000004, "Wrong alignment on TestMechVehicle_C_GunnerShieldTakeDamage");
static_assert(sizeof(TestMechVehicle_C_GunnerShieldTakeDamage) == 0x000004, "Wrong size on TestMechVehicle_C_GunnerShieldTakeDamage");
static_assert(offsetof(TestMechVehicle_C_GunnerShieldTakeDamage, Damage) == 0x000000, "Member 'TestMechVehicle_C_GunnerShieldTakeDamage::Damage' has a wrong offset!");

// Function TestMechVehicle.TestMechVehicle_C.LightningSpark
// 0x0024 (0x0024 - 0x0000)
struct TestMechVehicle_C_LightningSpark final
{
public:
	class FName                                   EventName;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         EmitterTime;                                       // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Location;                                          // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Velocity;                                          // 0x0018(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TestMechVehicle_C_LightningSpark) == 0x000004, "Wrong alignment on TestMechVehicle_C_LightningSpark");
static_assert(sizeof(TestMechVehicle_C_LightningSpark) == 0x000024, "Wrong size on TestMechVehicle_C_LightningSpark");
static_assert(offsetof(TestMechVehicle_C_LightningSpark, EventName) == 0x000000, "Member 'TestMechVehicle_C_LightningSpark::EventName' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_LightningSpark, EmitterTime) == 0x000008, "Member 'TestMechVehicle_C_LightningSpark::EmitterTime' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_LightningSpark, Location) == 0x00000C, "Member 'TestMechVehicle_C_LightningSpark::Location' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_LightningSpark, Velocity) == 0x000018, "Member 'TestMechVehicle_C_LightningSpark::Velocity' has a wrong offset!");

// Function TestMechVehicle.TestMechVehicle_C.UpdateDamageState
// 0x0004 (0x0004 - 0x0000)
struct TestMechVehicle_C_UpdateDamageState final
{
public:
	float                                         Damage;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TestMechVehicle_C_UpdateDamageState) == 0x000004, "Wrong alignment on TestMechVehicle_C_UpdateDamageState");
static_assert(sizeof(TestMechVehicle_C_UpdateDamageState) == 0x000004, "Wrong size on TestMechVehicle_C_UpdateDamageState");
static_assert(offsetof(TestMechVehicle_C_UpdateDamageState, Damage) == 0x000000, "Member 'TestMechVehicle_C_UpdateDamageState::Damage' has a wrong offset!");

// Function TestMechVehicle.TestMechVehicle_C.DashDamageBuilding
// 0x0008 (0x0008 - 0x0000)
struct TestMechVehicle_C_DashDamageBuilding final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TestMechVehicle_C_DashDamageBuilding) == 0x000008, "Wrong alignment on TestMechVehicle_C_DashDamageBuilding");
static_assert(sizeof(TestMechVehicle_C_DashDamageBuilding) == 0x000008, "Wrong size on TestMechVehicle_C_DashDamageBuilding");
static_assert(offsetof(TestMechVehicle_C_DashDamageBuilding, Actor) == 0x000000, "Member 'TestMechVehicle_C_DashDamageBuilding::Actor' has a wrong offset!");

// Function TestMechVehicle.TestMechVehicle_C.OnReleaseChargeJump
// 0x0004 (0x0004 - 0x0000)
struct TestMechVehicle_C_OnReleaseChargeJump final
{
public:
	float                                         ChargeAlpha;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TestMechVehicle_C_OnReleaseChargeJump) == 0x000004, "Wrong alignment on TestMechVehicle_C_OnReleaseChargeJump");
static_assert(sizeof(TestMechVehicle_C_OnReleaseChargeJump) == 0x000004, "Wrong size on TestMechVehicle_C_OnReleaseChargeJump");
static_assert(offsetof(TestMechVehicle_C_OnReleaseChargeJump, ChargeAlpha) == 0x000000, "Member 'TestMechVehicle_C_OnReleaseChargeJump::ChargeAlpha' has a wrong offset!");

// Function TestMechVehicle.TestMechVehicle_C.OnHoldExitStopped
// 0x0008 (0x0008 - 0x0000)
struct TestMechVehicle_C_OnHoldExitStopped final
{
public:
	class AFortPawn*                              ExitingPawn;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TestMechVehicle_C_OnHoldExitStopped) == 0x000008, "Wrong alignment on TestMechVehicle_C_OnHoldExitStopped");
static_assert(sizeof(TestMechVehicle_C_OnHoldExitStopped) == 0x000008, "Wrong size on TestMechVehicle_C_OnHoldExitStopped");
static_assert(offsetof(TestMechVehicle_C_OnHoldExitStopped, ExitingPawn) == 0x000000, "Member 'TestMechVehicle_C_OnHoldExitStopped::ExitingPawn' has a wrong offset!");

// Function TestMechVehicle.TestMechVehicle_C.OnHoldExitStarted
// 0x0010 (0x0010 - 0x0000)
struct TestMechVehicle_C_OnHoldExitStarted final
{
public:
	class AFortPawn*                              ExitingPawn;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ExitDuration;                                      // 0x0008(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TestMechVehicle_C_OnHoldExitStarted) == 0x000008, "Wrong alignment on TestMechVehicle_C_OnHoldExitStarted");
static_assert(sizeof(TestMechVehicle_C_OnHoldExitStarted) == 0x000010, "Wrong size on TestMechVehicle_C_OnHoldExitStarted");
static_assert(offsetof(TestMechVehicle_C_OnHoldExitStarted, ExitingPawn) == 0x000000, "Member 'TestMechVehicle_C_OnHoldExitStarted::ExitingPawn' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_OnHoldExitStarted, ExitDuration) == 0x000008, "Member 'TestMechVehicle_C_OnHoldExitStarted::ExitDuration' has a wrong offset!");

// Function TestMechVehicle.TestMechVehicle_C.SetRecentlyExited
// 0x0010 (0x0010 - 0x0000)
struct TestMechVehicle_C_SetRecentlyExited final
{
public:
	class AFortPlayerPawn*                        Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   ExitSocket;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TestMechVehicle_C_SetRecentlyExited) == 0x000008, "Wrong alignment on TestMechVehicle_C_SetRecentlyExited");
static_assert(sizeof(TestMechVehicle_C_SetRecentlyExited) == 0x000010, "Wrong size on TestMechVehicle_C_SetRecentlyExited");
static_assert(offsetof(TestMechVehicle_C_SetRecentlyExited, Player) == 0x000000, "Member 'TestMechVehicle_C_SetRecentlyExited::Player' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_SetRecentlyExited, ExitSocket) == 0x000008, "Member 'TestMechVehicle_C_SetRecentlyExited::ExitSocket' has a wrong offset!");

// Function TestMechVehicle.TestMechVehicle_C.MovementModeChangedDelegate_Event_0
// 0x0010 (0x0010 - 0x0000)
struct TestMechVehicle_C_MovementModeChangedDelegate_Event_0 final
{
public:
	class ACharacter*                             Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMovementMode                                 PrevMovementMode;                                  // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         PreviousCustomMode;                                // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TestMechVehicle_C_MovementModeChangedDelegate_Event_0) == 0x000008, "Wrong alignment on TestMechVehicle_C_MovementModeChangedDelegate_Event_0");
static_assert(sizeof(TestMechVehicle_C_MovementModeChangedDelegate_Event_0) == 0x000010, "Wrong size on TestMechVehicle_C_MovementModeChangedDelegate_Event_0");
static_assert(offsetof(TestMechVehicle_C_MovementModeChangedDelegate_Event_0, Character) == 0x000000, "Member 'TestMechVehicle_C_MovementModeChangedDelegate_Event_0::Character' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_MovementModeChangedDelegate_Event_0, PrevMovementMode) == 0x000008, "Member 'TestMechVehicle_C_MovementModeChangedDelegate_Event_0::PrevMovementMode' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_MovementModeChangedDelegate_Event_0, PreviousCustomMode) == 0x000009, "Member 'TestMechVehicle_C_MovementModeChangedDelegate_Event_0::PreviousCustomMode' has a wrong offset!");

// Function TestMechVehicle.TestMechVehicle_C.OnDetonateTimerStart
// 0x0001 (0x0001 - 0x0000)
struct TestMechVehicle_C_OnDetonateTimerStart final
{
public:
	EOstrichDetonationState                       InDetonationState;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TestMechVehicle_C_OnDetonateTimerStart) == 0x000001, "Wrong alignment on TestMechVehicle_C_OnDetonateTimerStart");
static_assert(sizeof(TestMechVehicle_C_OnDetonateTimerStart) == 0x000001, "Wrong size on TestMechVehicle_C_OnDetonateTimerStart");
static_assert(offsetof(TestMechVehicle_C_OnDetonateTimerStart, InDetonationState) == 0x000000, "Member 'TestMechVehicle_C_OnDetonateTimerStart::InDetonationState' has a wrong offset!");

// Function TestMechVehicle.TestMechVehicle_C.EventOnDied
// 0x0050 (0x0050 - 0x0000)
struct TestMechVehicle_C_EventOnDied final
{
public:
	class AActor*                                 DamagedActor;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Damage;                                            // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            InstigatedBy;                                      // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 DamageCauser;                                      // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitLocation;                                       // 0x0020(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    FHitComponent;                                     // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   BoneName;                                          // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Momentum;                                          // 0x0040(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TestMechVehicle_C_EventOnDied) == 0x000008, "Wrong alignment on TestMechVehicle_C_EventOnDied");
static_assert(sizeof(TestMechVehicle_C_EventOnDied) == 0x000050, "Wrong size on TestMechVehicle_C_EventOnDied");
static_assert(offsetof(TestMechVehicle_C_EventOnDied, DamagedActor) == 0x000000, "Member 'TestMechVehicle_C_EventOnDied::DamagedActor' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_EventOnDied, Damage) == 0x000008, "Member 'TestMechVehicle_C_EventOnDied::Damage' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_EventOnDied, InstigatedBy) == 0x000010, "Member 'TestMechVehicle_C_EventOnDied::InstigatedBy' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_EventOnDied, DamageCauser) == 0x000018, "Member 'TestMechVehicle_C_EventOnDied::DamageCauser' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_EventOnDied, HitLocation) == 0x000020, "Member 'TestMechVehicle_C_EventOnDied::HitLocation' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_EventOnDied, FHitComponent) == 0x000030, "Member 'TestMechVehicle_C_EventOnDied::FHitComponent' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_EventOnDied, BoneName) == 0x000038, "Member 'TestMechVehicle_C_EventOnDied::BoneName' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_EventOnDied, Momentum) == 0x000040, "Member 'TestMechVehicle_C_EventOnDied::Momentum' has a wrong offset!");

// Function TestMechVehicle.TestMechVehicle_C.HideQuickbar
// 0x0010 (0x0010 - 0x0000)
struct TestMechVehicle_C_HideQuickbar final
{
public:
	bool                                          Hide;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerPawn*                        Actor;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TestMechVehicle_C_HideQuickbar) == 0x000008, "Wrong alignment on TestMechVehicle_C_HideQuickbar");
static_assert(sizeof(TestMechVehicle_C_HideQuickbar) == 0x000010, "Wrong size on TestMechVehicle_C_HideQuickbar");
static_assert(offsetof(TestMechVehicle_C_HideQuickbar, Hide) == 0x000000, "Member 'TestMechVehicle_C_HideQuickbar::Hide' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_HideQuickbar, Actor) == 0x000008, "Member 'TestMechVehicle_C_HideQuickbar::Actor' has a wrong offset!");

// Function TestMechVehicle.TestMechVehicle_C.ReceiveHit
// 0x00C8 (0x00C8 - 0x0000)
struct TestMechVehicle_C_ReceiveHit final
{
public:
	class UPrimitiveComponent*                    MyComp;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Other;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bSelfMoved;                                        // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                HitLocation;                                       // 0x001C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitNormal;                                         // 0x0028(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                NormalImpulse;                                     // 0x0034(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x0040(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(TestMechVehicle_C_ReceiveHit) == 0x000008, "Wrong alignment on TestMechVehicle_C_ReceiveHit");
static_assert(sizeof(TestMechVehicle_C_ReceiveHit) == 0x0000C8, "Wrong size on TestMechVehicle_C_ReceiveHit");
static_assert(offsetof(TestMechVehicle_C_ReceiveHit, MyComp) == 0x000000, "Member 'TestMechVehicle_C_ReceiveHit::MyComp' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ReceiveHit, Other) == 0x000008, "Member 'TestMechVehicle_C_ReceiveHit::Other' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ReceiveHit, OtherComp) == 0x000010, "Member 'TestMechVehicle_C_ReceiveHit::OtherComp' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ReceiveHit, bSelfMoved) == 0x000018, "Member 'TestMechVehicle_C_ReceiveHit::bSelfMoved' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ReceiveHit, HitLocation) == 0x00001C, "Member 'TestMechVehicle_C_ReceiveHit::HitLocation' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ReceiveHit, HitNormal) == 0x000028, "Member 'TestMechVehicle_C_ReceiveHit::HitNormal' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ReceiveHit, NormalImpulse) == 0x000034, "Member 'TestMechVehicle_C_ReceiveHit::NormalImpulse' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_ReceiveHit, Hit) == 0x000040, "Member 'TestMechVehicle_C_ReceiveHit::Hit' has a wrong offset!");

// Function TestMechVehicle.TestMechVehicle_C.OnLanded
// 0x0088 (0x0088 - 0x0000)
struct TestMechVehicle_C_OnLanded final
{
public:
	struct FHitResult                             Hit;                                               // 0x0000(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(TestMechVehicle_C_OnLanded) == 0x000004, "Wrong alignment on TestMechVehicle_C_OnLanded");
static_assert(sizeof(TestMechVehicle_C_OnLanded) == 0x000088, "Wrong size on TestMechVehicle_C_OnLanded");
static_assert(offsetof(TestMechVehicle_C_OnLanded, Hit) == 0x000000, "Member 'TestMechVehicle_C_OnLanded::Hit' has a wrong offset!");

// Function TestMechVehicle.TestMechVehicle_C.OnPawnExitVehicle
// 0x0010 (0x0010 - 0x0000)
struct TestMechVehicle_C_OnPawnExitVehicle final
{
public:
	class AFortPlayerPawn*                        PlayerPawn;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   ExitSocketName;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TestMechVehicle_C_OnPawnExitVehicle) == 0x000008, "Wrong alignment on TestMechVehicle_C_OnPawnExitVehicle");
static_assert(sizeof(TestMechVehicle_C_OnPawnExitVehicle) == 0x000010, "Wrong size on TestMechVehicle_C_OnPawnExitVehicle");
static_assert(offsetof(TestMechVehicle_C_OnPawnExitVehicle, PlayerPawn) == 0x000000, "Member 'TestMechVehicle_C_OnPawnExitVehicle::PlayerPawn' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_OnPawnExitVehicle, ExitSocketName) == 0x000008, "Member 'TestMechVehicle_C_OnPawnExitVehicle::ExitSocketName' has a wrong offset!");

// Function TestMechVehicle.TestMechVehicle_C.OnPawnEnterVehicle
// 0x0010 (0x0010 - 0x0000)
struct TestMechVehicle_C_OnPawnEnterVehicle final
{
public:
	class AFortPlayerPawn*                        PlayerPawn;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SeatIdx;                                           // 0x0008(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TestMechVehicle_C_OnPawnEnterVehicle) == 0x000008, "Wrong alignment on TestMechVehicle_C_OnPawnEnterVehicle");
static_assert(sizeof(TestMechVehicle_C_OnPawnEnterVehicle) == 0x000010, "Wrong size on TestMechVehicle_C_OnPawnEnterVehicle");
static_assert(offsetof(TestMechVehicle_C_OnPawnEnterVehicle, PlayerPawn) == 0x000000, "Member 'TestMechVehicle_C_OnPawnEnterVehicle::PlayerPawn' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_OnPawnEnterVehicle, SeatIdx) == 0x000008, "Member 'TestMechVehicle_C_OnPawnEnterVehicle::SeatIdx' has a wrong offset!");

// Function TestMechVehicle.TestMechVehicle_C.OnCompleted_EAC6A467481883EEBB88FCB823F471BA
// 0x0008 (0x0008 - 0x0000)
struct TestMechVehicle_C_OnCompleted_EAC6A467481883EEBB88FCB823F471BA final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TestMechVehicle_C_OnCompleted_EAC6A467481883EEBB88FCB823F471BA) == 0x000004, "Wrong alignment on TestMechVehicle_C_OnCompleted_EAC6A467481883EEBB88FCB823F471BA");
static_assert(sizeof(TestMechVehicle_C_OnCompleted_EAC6A467481883EEBB88FCB823F471BA) == 0x000008, "Wrong size on TestMechVehicle_C_OnCompleted_EAC6A467481883EEBB88FCB823F471BA");
static_assert(offsetof(TestMechVehicle_C_OnCompleted_EAC6A467481883EEBB88FCB823F471BA, NotifyName) == 0x000000, "Member 'TestMechVehicle_C_OnCompleted_EAC6A467481883EEBB88FCB823F471BA::NotifyName' has a wrong offset!");

// Function TestMechVehicle.TestMechVehicle_C.OnBlendOut_EAC6A467481883EEBB88FCB823F471BA
// 0x0008 (0x0008 - 0x0000)
struct TestMechVehicle_C_OnBlendOut_EAC6A467481883EEBB88FCB823F471BA final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TestMechVehicle_C_OnBlendOut_EAC6A467481883EEBB88FCB823F471BA) == 0x000004, "Wrong alignment on TestMechVehicle_C_OnBlendOut_EAC6A467481883EEBB88FCB823F471BA");
static_assert(sizeof(TestMechVehicle_C_OnBlendOut_EAC6A467481883EEBB88FCB823F471BA) == 0x000008, "Wrong size on TestMechVehicle_C_OnBlendOut_EAC6A467481883EEBB88FCB823F471BA");
static_assert(offsetof(TestMechVehicle_C_OnBlendOut_EAC6A467481883EEBB88FCB823F471BA, NotifyName) == 0x000000, "Member 'TestMechVehicle_C_OnBlendOut_EAC6A467481883EEBB88FCB823F471BA::NotifyName' has a wrong offset!");

// Function TestMechVehicle.TestMechVehicle_C.OnInterrupted_EAC6A467481883EEBB88FCB823F471BA
// 0x0008 (0x0008 - 0x0000)
struct TestMechVehicle_C_OnInterrupted_EAC6A467481883EEBB88FCB823F471BA final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TestMechVehicle_C_OnInterrupted_EAC6A467481883EEBB88FCB823F471BA) == 0x000004, "Wrong alignment on TestMechVehicle_C_OnInterrupted_EAC6A467481883EEBB88FCB823F471BA");
static_assert(sizeof(TestMechVehicle_C_OnInterrupted_EAC6A467481883EEBB88FCB823F471BA) == 0x000008, "Wrong size on TestMechVehicle_C_OnInterrupted_EAC6A467481883EEBB88FCB823F471BA");
static_assert(offsetof(TestMechVehicle_C_OnInterrupted_EAC6A467481883EEBB88FCB823F471BA, NotifyName) == 0x000000, "Member 'TestMechVehicle_C_OnInterrupted_EAC6A467481883EEBB88FCB823F471BA::NotifyName' has a wrong offset!");

// Function TestMechVehicle.TestMechVehicle_C.OnNotifyBegin_EAC6A467481883EEBB88FCB823F471BA
// 0x0008 (0x0008 - 0x0000)
struct TestMechVehicle_C_OnNotifyBegin_EAC6A467481883EEBB88FCB823F471BA final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TestMechVehicle_C_OnNotifyBegin_EAC6A467481883EEBB88FCB823F471BA) == 0x000004, "Wrong alignment on TestMechVehicle_C_OnNotifyBegin_EAC6A467481883EEBB88FCB823F471BA");
static_assert(sizeof(TestMechVehicle_C_OnNotifyBegin_EAC6A467481883EEBB88FCB823F471BA) == 0x000008, "Wrong size on TestMechVehicle_C_OnNotifyBegin_EAC6A467481883EEBB88FCB823F471BA");
static_assert(offsetof(TestMechVehicle_C_OnNotifyBegin_EAC6A467481883EEBB88FCB823F471BA, NotifyName) == 0x000000, "Member 'TestMechVehicle_C_OnNotifyBegin_EAC6A467481883EEBB88FCB823F471BA::NotifyName' has a wrong offset!");

// Function TestMechVehicle.TestMechVehicle_C.OnNotifyEnd_EAC6A467481883EEBB88FCB823F471BA
// 0x0008 (0x0008 - 0x0000)
struct TestMechVehicle_C_OnNotifyEnd_EAC6A467481883EEBB88FCB823F471BA final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TestMechVehicle_C_OnNotifyEnd_EAC6A467481883EEBB88FCB823F471BA) == 0x000004, "Wrong alignment on TestMechVehicle_C_OnNotifyEnd_EAC6A467481883EEBB88FCB823F471BA");
static_assert(sizeof(TestMechVehicle_C_OnNotifyEnd_EAC6A467481883EEBB88FCB823F471BA) == 0x000008, "Wrong size on TestMechVehicle_C_OnNotifyEnd_EAC6A467481883EEBB88FCB823F471BA");
static_assert(offsetof(TestMechVehicle_C_OnNotifyEnd_EAC6A467481883EEBB88FCB823F471BA, NotifyName) == 0x000000, "Member 'TestMechVehicle_C_OnNotifyEnd_EAC6A467481883EEBB88FCB823F471BA::NotifyName' has a wrong offset!");

// Function TestMechVehicle.TestMechVehicle_C.UserConstructionScript
// 0x0070 (0x0070 - 0x0000)
struct TestMechVehicle_C_UserConstructionScript final
{
public:
	float                                         CallFunc_GetValueAtLevel_ReturnValue;              // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValueAtLevel_ReturnValue_1;            // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValueAtLevel_ReturnValue_2;            // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValueAtLevel_ReturnValue_3;            // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetValueAtLevel_ReturnValue_4;            // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetValueAtLevel_ReturnValue_5;            // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValueAtLevel_ReturnValue_6;            // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValueAtLevel_ReturnValue_7;            // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 CallFunc_GetMechMesh_ReturnValue;                  // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 CallFunc_GetEmoteMesh_ReturnValue;                 // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValueAtLevel_ReturnValue_8;            // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValueAtLevel_ReturnValue_9;            // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValueAtLevel_ReturnValue_10;           // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValueAtLevel_ReturnValue_11;           // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValueAtLevel_ReturnValue_12;           // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValueAtLevel_ReturnValue_13;           // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValueAtLevel_ReturnValue_14;           // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValueAtLevel_ReturnValue_15;           // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValueAtLevel_ReturnValue_16;           // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValueAtLevel_ReturnValue_17;           // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValueAtLevel_ReturnValue_18;           // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TestMechVehicle_C_UserConstructionScript) == 0x000008, "Wrong alignment on TestMechVehicle_C_UserConstructionScript");
static_assert(sizeof(TestMechVehicle_C_UserConstructionScript) == 0x000070, "Wrong size on TestMechVehicle_C_UserConstructionScript");
static_assert(offsetof(TestMechVehicle_C_UserConstructionScript, CallFunc_GetValueAtLevel_ReturnValue) == 0x000000, "Member 'TestMechVehicle_C_UserConstructionScript::CallFunc_GetValueAtLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_UserConstructionScript, CallFunc_GetValueAtLevel_ReturnValue_1) == 0x000004, "Member 'TestMechVehicle_C_UserConstructionScript::CallFunc_GetValueAtLevel_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_UserConstructionScript, CallFunc_GetValueAtLevel_ReturnValue_2) == 0x000008, "Member 'TestMechVehicle_C_UserConstructionScript::CallFunc_GetValueAtLevel_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_UserConstructionScript, CallFunc_GetValueAtLevel_ReturnValue_3) == 0x00000C, "Member 'TestMechVehicle_C_UserConstructionScript::CallFunc_GetValueAtLevel_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_UserConstructionScript, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000010, "Member 'TestMechVehicle_C_UserConstructionScript::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_UserConstructionScript, CallFunc_GetValueAtLevel_ReturnValue_4) == 0x000014, "Member 'TestMechVehicle_C_UserConstructionScript::CallFunc_GetValueAtLevel_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_UserConstructionScript, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x000018, "Member 'TestMechVehicle_C_UserConstructionScript::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_UserConstructionScript, CallFunc_GetValueAtLevel_ReturnValue_5) == 0x00001C, "Member 'TestMechVehicle_C_UserConstructionScript::CallFunc_GetValueAtLevel_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_UserConstructionScript, CallFunc_GetValueAtLevel_ReturnValue_6) == 0x000020, "Member 'TestMechVehicle_C_UserConstructionScript::CallFunc_GetValueAtLevel_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_UserConstructionScript, CallFunc_GetValueAtLevel_ReturnValue_7) == 0x000024, "Member 'TestMechVehicle_C_UserConstructionScript::CallFunc_GetValueAtLevel_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_UserConstructionScript, CallFunc_Add_FloatFloat_ReturnValue) == 0x000028, "Member 'TestMechVehicle_C_UserConstructionScript::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_UserConstructionScript, CallFunc_FTrunc_ReturnValue) == 0x00002C, "Member 'TestMechVehicle_C_UserConstructionScript::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_UserConstructionScript, CallFunc_GetMechMesh_ReturnValue) == 0x000030, "Member 'TestMechVehicle_C_UserConstructionScript::CallFunc_GetMechMesh_ReturnValue' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_UserConstructionScript, CallFunc_GetEmoteMesh_ReturnValue) == 0x000038, "Member 'TestMechVehicle_C_UserConstructionScript::CallFunc_GetEmoteMesh_ReturnValue' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_UserConstructionScript, CallFunc_GetValueAtLevel_ReturnValue_8) == 0x000040, "Member 'TestMechVehicle_C_UserConstructionScript::CallFunc_GetValueAtLevel_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_UserConstructionScript, CallFunc_GetValueAtLevel_ReturnValue_9) == 0x000044, "Member 'TestMechVehicle_C_UserConstructionScript::CallFunc_GetValueAtLevel_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_UserConstructionScript, CallFunc_GetValueAtLevel_ReturnValue_10) == 0x000048, "Member 'TestMechVehicle_C_UserConstructionScript::CallFunc_GetValueAtLevel_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_UserConstructionScript, CallFunc_GetValueAtLevel_ReturnValue_11) == 0x00004C, "Member 'TestMechVehicle_C_UserConstructionScript::CallFunc_GetValueAtLevel_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_UserConstructionScript, CallFunc_GetValueAtLevel_ReturnValue_12) == 0x000050, "Member 'TestMechVehicle_C_UserConstructionScript::CallFunc_GetValueAtLevel_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_UserConstructionScript, CallFunc_GetValueAtLevel_ReturnValue_13) == 0x000054, "Member 'TestMechVehicle_C_UserConstructionScript::CallFunc_GetValueAtLevel_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_UserConstructionScript, CallFunc_GetValueAtLevel_ReturnValue_14) == 0x000058, "Member 'TestMechVehicle_C_UserConstructionScript::CallFunc_GetValueAtLevel_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_UserConstructionScript, CallFunc_GetValueAtLevel_ReturnValue_15) == 0x00005C, "Member 'TestMechVehicle_C_UserConstructionScript::CallFunc_GetValueAtLevel_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_UserConstructionScript, CallFunc_GetValueAtLevel_ReturnValue_16) == 0x000060, "Member 'TestMechVehicle_C_UserConstructionScript::CallFunc_GetValueAtLevel_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_UserConstructionScript, CallFunc_GetValueAtLevel_ReturnValue_17) == 0x000064, "Member 'TestMechVehicle_C_UserConstructionScript::CallFunc_GetValueAtLevel_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_UserConstructionScript, CallFunc_GetValueAtLevel_ReturnValue_18) == 0x000068, "Member 'TestMechVehicle_C_UserConstructionScript::CallFunc_GetValueAtLevel_ReturnValue_18' has a wrong offset!");

// Function TestMechVehicle.TestMechVehicle_C.CanDamageBuilding
// 0x0030 (0x0030 - 0x0000)
struct TestMechVehicle_C_CanDamageBuilding final
{
public:
	class ABuildingActor*                         BuildingActor;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MaxHealthThreshold;                                // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABuildingActor*                         Building_Actor;                                    // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMaxHealth_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ActorHasTag_ReturnValue;                  // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E[0x2];                                       // 0x001E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetMaxHealth_ReturnValue_1;               // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0026(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0027(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TestMechVehicle_C_CanDamageBuilding) == 0x000008, "Wrong alignment on TestMechVehicle_C_CanDamageBuilding");
static_assert(sizeof(TestMechVehicle_C_CanDamageBuilding) == 0x000030, "Wrong size on TestMechVehicle_C_CanDamageBuilding");
static_assert(offsetof(TestMechVehicle_C_CanDamageBuilding, BuildingActor) == 0x000000, "Member 'TestMechVehicle_C_CanDamageBuilding::BuildingActor' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_CanDamageBuilding, MaxHealthThreshold) == 0x000008, "Member 'TestMechVehicle_C_CanDamageBuilding::MaxHealthThreshold' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_CanDamageBuilding, ReturnValue) == 0x00000C, "Member 'TestMechVehicle_C_CanDamageBuilding::ReturnValue' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_CanDamageBuilding, Building_Actor) == 0x000010, "Member 'TestMechVehicle_C_CanDamageBuilding::Building_Actor' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_CanDamageBuilding, CallFunc_GetMaxHealth_ReturnValue) == 0x000018, "Member 'TestMechVehicle_C_CanDamageBuilding::CallFunc_GetMaxHealth_ReturnValue' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_CanDamageBuilding, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x00001C, "Member 'TestMechVehicle_C_CanDamageBuilding::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_CanDamageBuilding, CallFunc_ActorHasTag_ReturnValue) == 0x00001D, "Member 'TestMechVehicle_C_CanDamageBuilding::CallFunc_ActorHasTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_CanDamageBuilding, CallFunc_GetMaxHealth_ReturnValue_1) == 0x000020, "Member 'TestMechVehicle_C_CanDamageBuilding::CallFunc_GetMaxHealth_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_CanDamageBuilding, CallFunc_Not_PreBool_ReturnValue) == 0x000024, "Member 'TestMechVehicle_C_CanDamageBuilding::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_CanDamageBuilding, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000025, "Member 'TestMechVehicle_C_CanDamageBuilding::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_CanDamageBuilding, CallFunc_BooleanAND_ReturnValue) == 0x000026, "Member 'TestMechVehicle_C_CanDamageBuilding::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_CanDamageBuilding, CallFunc_BooleanAND_ReturnValue_1) == 0x000027, "Member 'TestMechVehicle_C_CanDamageBuilding::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_CanDamageBuilding, CallFunc_BooleanAND_ReturnValue_2) == 0x000028, "Member 'TestMechVehicle_C_CanDamageBuilding::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");

// Function TestMechVehicle.TestMechVehicle_C.KnockAwayDirection
// 0x0078 (0x0078 - 0x0000)
struct TestMechVehicle_C_KnockAwayDirection final
{
public:
	class AActor*                                 Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LaunchMagnitude;                                   // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ZAdditive;                                         // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LaunchVelocity;                                    // 0x0010(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0034(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x004C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue;                         // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x006C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TestMechVehicle_C_KnockAwayDirection) == 0x000008, "Wrong alignment on TestMechVehicle_C_KnockAwayDirection");
static_assert(sizeof(TestMechVehicle_C_KnockAwayDirection) == 0x000078, "Wrong size on TestMechVehicle_C_KnockAwayDirection");
static_assert(offsetof(TestMechVehicle_C_KnockAwayDirection, Target) == 0x000000, "Member 'TestMechVehicle_C_KnockAwayDirection::Target' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_KnockAwayDirection, LaunchMagnitude) == 0x000008, "Member 'TestMechVehicle_C_KnockAwayDirection::LaunchMagnitude' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_KnockAwayDirection, ZAdditive) == 0x00000C, "Member 'TestMechVehicle_C_KnockAwayDirection::ZAdditive' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_KnockAwayDirection, LaunchVelocity) == 0x000010, "Member 'TestMechVehicle_C_KnockAwayDirection::LaunchVelocity' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_KnockAwayDirection, CallFunc_K2_GetActorLocation_ReturnValue) == 0x00001C, "Member 'TestMechVehicle_C_KnockAwayDirection::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_KnockAwayDirection, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000028, "Member 'TestMechVehicle_C_KnockAwayDirection::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_KnockAwayDirection, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000034, "Member 'TestMechVehicle_C_KnockAwayDirection::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_KnockAwayDirection, CallFunc_Normal_ReturnValue) == 0x000040, "Member 'TestMechVehicle_C_KnockAwayDirection::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_KnockAwayDirection, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x00004C, "Member 'TestMechVehicle_C_KnockAwayDirection::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_KnockAwayDirection, CallFunc_BreakVector_X) == 0x000058, "Member 'TestMechVehicle_C_KnockAwayDirection::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_KnockAwayDirection, CallFunc_BreakVector_Y) == 0x00005C, "Member 'TestMechVehicle_C_KnockAwayDirection::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_KnockAwayDirection, CallFunc_BreakVector_Z) == 0x000060, "Member 'TestMechVehicle_C_KnockAwayDirection::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_KnockAwayDirection, CallFunc_Add_FloatFloat_ReturnValue) == 0x000064, "Member 'TestMechVehicle_C_KnockAwayDirection::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_KnockAwayDirection, CallFunc_FMax_ReturnValue) == 0x000068, "Member 'TestMechVehicle_C_KnockAwayDirection::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_KnockAwayDirection, CallFunc_MakeVector_ReturnValue) == 0x00006C, "Member 'TestMechVehicle_C_KnockAwayDirection::CallFunc_MakeVector_ReturnValue' has a wrong offset!");

// Function TestMechVehicle.TestMechVehicle_C.GC_Params
// 0x0170 (0x0170 - 0x0000)
struct TestMechVehicle_C_GC_Params final
{
public:
	struct FGameplayCueParameters                 ReturnValue;                                       // 0x0000(0x00B8)(Parm, OutParm, ReturnParm, ContainsInstancedReference)
	struct FGameplayCueParameters                 CallFunc_MakeGameplayCueParameters_ReturnValue;    // 0x00B8(0x00B8)(ContainsInstancedReference)
};
static_assert(alignof(TestMechVehicle_C_GC_Params) == 0x000008, "Wrong alignment on TestMechVehicle_C_GC_Params");
static_assert(sizeof(TestMechVehicle_C_GC_Params) == 0x000170, "Wrong size on TestMechVehicle_C_GC_Params");
static_assert(offsetof(TestMechVehicle_C_GC_Params, ReturnValue) == 0x000000, "Member 'TestMechVehicle_C_GC_Params::ReturnValue' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_GC_Params, CallFunc_MakeGameplayCueParameters_ReturnValue) == 0x0000B8, "Member 'TestMechVehicle_C_GC_Params::CallFunc_MakeGameplayCueParameters_ReturnValue' has a wrong offset!");

// Function TestMechVehicle.TestMechVehicle_C.GetVehicleSeatActionNames
// 0x0118 (0x0118 - 0x0000)
struct TestMechVehicle_C_GetVehicleSeatActionNames final
{
public:
	class AFortPlayerPawn*                        PlayerPawn;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECommonInputType                              OverrideInputType;                                 // 0x0008(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm)
	TArray<class FName>                           ActionNames;                                       // 0x0020(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerController*                  K2Node_DynamicCast_AsFort_Player_Controller;       // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsUsingGamepad_ReturnValue;               // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_43[0x5];                                       // 0x0043(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortGlobalUIContext*                   CallFunc_GetContext_ReturnValue;                   // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortGlobalUIContext*                   CallFunc_GetContext_ReturnValue_1;                 // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetOstrichSecondaryFireName_ReturnValue;  // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetOstrichSelfDestructName_ReturnValue;   // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetOstrichShieldBoostName_ReturnValue;    // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetVehicleExitActionName_ReturnValue;     // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetVehicleChangeSeatActionName_ReturnValue; // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_3;                  // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetOstrichSecondaryFireName_ReturnValue_1; // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetOstrichPrimaryFireName_ReturnValue;    // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_4;                  // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_5;                  // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetVehicleChangeSeatActionName_ReturnValue_1; // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetOstrichSelfDestructName_ReturnValue_1; // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetOstrichPrimaryFireName_ReturnValue_1;  // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetOstrichJumpActionName_ReturnValue;     // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetOstrichBoostActionName_ReturnValue;    // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetVehicleExitActionName_ReturnValue_1;   // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortGlobalUIContext*                   CallFunc_GetContext_ReturnValue_2;                 // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_6;                  // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetOstrichPrimaryFireName_ReturnValue_2;  // 0x00E4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetOstrichSecondaryFireName_ReturnValue_2; // 0x00EC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_7;                  // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_8;                  // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_9;                  // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_10;                 // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_11;                 // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_12;                 // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_13;                 // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_14;                 // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TestMechVehicle_C_GetVehicleSeatActionNames) == 0x000008, "Wrong alignment on TestMechVehicle_C_GetVehicleSeatActionNames");
static_assert(sizeof(TestMechVehicle_C_GetVehicleSeatActionNames) == 0x000118, "Wrong size on TestMechVehicle_C_GetVehicleSeatActionNames");
static_assert(offsetof(TestMechVehicle_C_GetVehicleSeatActionNames, PlayerPawn) == 0x000000, "Member 'TestMechVehicle_C_GetVehicleSeatActionNames::PlayerPawn' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_GetVehicleSeatActionNames, OverrideInputType) == 0x000008, "Member 'TestMechVehicle_C_GetVehicleSeatActionNames::OverrideInputType' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_GetVehicleSeatActionNames, ReturnValue) == 0x000010, "Member 'TestMechVehicle_C_GetVehicleSeatActionNames::ReturnValue' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_GetVehicleSeatActionNames, ActionNames) == 0x000020, "Member 'TestMechVehicle_C_GetVehicleSeatActionNames::ActionNames' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_GetVehicleSeatActionNames, CallFunc_GetController_ReturnValue) == 0x000030, "Member 'TestMechVehicle_C_GetVehicleSeatActionNames::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_GetVehicleSeatActionNames, K2Node_DynamicCast_AsFort_Player_Controller) == 0x000038, "Member 'TestMechVehicle_C_GetVehicleSeatActionNames::K2Node_DynamicCast_AsFort_Player_Controller' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_GetVehicleSeatActionNames, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'TestMechVehicle_C_GetVehicleSeatActionNames::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_GetVehicleSeatActionNames, CallFunc_IsValid_ReturnValue) == 0x000041, "Member 'TestMechVehicle_C_GetVehicleSeatActionNames::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_GetVehicleSeatActionNames, CallFunc_IsUsingGamepad_ReturnValue) == 0x000042, "Member 'TestMechVehicle_C_GetVehicleSeatActionNames::CallFunc_IsUsingGamepad_ReturnValue' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_GetVehicleSeatActionNames, CallFunc_GetContext_ReturnValue) == 0x000048, "Member 'TestMechVehicle_C_GetVehicleSeatActionNames::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_GetVehicleSeatActionNames, CallFunc_GetContext_ReturnValue_1) == 0x000050, "Member 'TestMechVehicle_C_GetVehicleSeatActionNames::CallFunc_GetContext_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_GetVehicleSeatActionNames, CallFunc_GetOstrichSecondaryFireName_ReturnValue) == 0x000058, "Member 'TestMechVehicle_C_GetVehicleSeatActionNames::CallFunc_GetOstrichSecondaryFireName_ReturnValue' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_GetVehicleSeatActionNames, CallFunc_GetOstrichSelfDestructName_ReturnValue) == 0x000060, "Member 'TestMechVehicle_C_GetVehicleSeatActionNames::CallFunc_GetOstrichSelfDestructName_ReturnValue' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_GetVehicleSeatActionNames, CallFunc_GetOstrichShieldBoostName_ReturnValue) == 0x000068, "Member 'TestMechVehicle_C_GetVehicleSeatActionNames::CallFunc_GetOstrichShieldBoostName_ReturnValue' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_GetVehicleSeatActionNames, CallFunc_Array_Add_ReturnValue) == 0x000070, "Member 'TestMechVehicle_C_GetVehicleSeatActionNames::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_GetVehicleSeatActionNames, CallFunc_Array_Add_ReturnValue_1) == 0x000074, "Member 'TestMechVehicle_C_GetVehicleSeatActionNames::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_GetVehicleSeatActionNames, CallFunc_GetVehicleExitActionName_ReturnValue) == 0x000078, "Member 'TestMechVehicle_C_GetVehicleSeatActionNames::CallFunc_GetVehicleExitActionName_ReturnValue' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_GetVehicleSeatActionNames, CallFunc_GetVehicleChangeSeatActionName_ReturnValue) == 0x000080, "Member 'TestMechVehicle_C_GetVehicleSeatActionNames::CallFunc_GetVehicleChangeSeatActionName_ReturnValue' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_GetVehicleSeatActionNames, CallFunc_Array_Add_ReturnValue_2) == 0x000088, "Member 'TestMechVehicle_C_GetVehicleSeatActionNames::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_GetVehicleSeatActionNames, CallFunc_Array_Add_ReturnValue_3) == 0x00008C, "Member 'TestMechVehicle_C_GetVehicleSeatActionNames::CallFunc_Array_Add_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_GetVehicleSeatActionNames, CallFunc_GetOstrichSecondaryFireName_ReturnValue_1) == 0x000090, "Member 'TestMechVehicle_C_GetVehicleSeatActionNames::CallFunc_GetOstrichSecondaryFireName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_GetVehicleSeatActionNames, CallFunc_GetOstrichPrimaryFireName_ReturnValue) == 0x000098, "Member 'TestMechVehicle_C_GetVehicleSeatActionNames::CallFunc_GetOstrichPrimaryFireName_ReturnValue' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_GetVehicleSeatActionNames, CallFunc_Array_Add_ReturnValue_4) == 0x0000A0, "Member 'TestMechVehicle_C_GetVehicleSeatActionNames::CallFunc_Array_Add_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_GetVehicleSeatActionNames, CallFunc_Array_Add_ReturnValue_5) == 0x0000A4, "Member 'TestMechVehicle_C_GetVehicleSeatActionNames::CallFunc_Array_Add_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_GetVehicleSeatActionNames, CallFunc_GetVehicleChangeSeatActionName_ReturnValue_1) == 0x0000A8, "Member 'TestMechVehicle_C_GetVehicleSeatActionNames::CallFunc_GetVehicleChangeSeatActionName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_GetVehicleSeatActionNames, CallFunc_GetOstrichSelfDestructName_ReturnValue_1) == 0x0000B0, "Member 'TestMechVehicle_C_GetVehicleSeatActionNames::CallFunc_GetOstrichSelfDestructName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_GetVehicleSeatActionNames, CallFunc_GetOstrichPrimaryFireName_ReturnValue_1) == 0x0000B8, "Member 'TestMechVehicle_C_GetVehicleSeatActionNames::CallFunc_GetOstrichPrimaryFireName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_GetVehicleSeatActionNames, CallFunc_GetOstrichJumpActionName_ReturnValue) == 0x0000C0, "Member 'TestMechVehicle_C_GetVehicleSeatActionNames::CallFunc_GetOstrichJumpActionName_ReturnValue' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_GetVehicleSeatActionNames, CallFunc_GetOstrichBoostActionName_ReturnValue) == 0x0000C8, "Member 'TestMechVehicle_C_GetVehicleSeatActionNames::CallFunc_GetOstrichBoostActionName_ReturnValue' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_GetVehicleSeatActionNames, CallFunc_GetVehicleExitActionName_ReturnValue_1) == 0x0000D0, "Member 'TestMechVehicle_C_GetVehicleSeatActionNames::CallFunc_GetVehicleExitActionName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_GetVehicleSeatActionNames, CallFunc_GetContext_ReturnValue_2) == 0x0000D8, "Member 'TestMechVehicle_C_GetVehicleSeatActionNames::CallFunc_GetContext_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_GetVehicleSeatActionNames, CallFunc_Array_Add_ReturnValue_6) == 0x0000E0, "Member 'TestMechVehicle_C_GetVehicleSeatActionNames::CallFunc_Array_Add_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_GetVehicleSeatActionNames, CallFunc_GetOstrichPrimaryFireName_ReturnValue_2) == 0x0000E4, "Member 'TestMechVehicle_C_GetVehicleSeatActionNames::CallFunc_GetOstrichPrimaryFireName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_GetVehicleSeatActionNames, CallFunc_GetOstrichSecondaryFireName_ReturnValue_2) == 0x0000EC, "Member 'TestMechVehicle_C_GetVehicleSeatActionNames::CallFunc_GetOstrichSecondaryFireName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_GetVehicleSeatActionNames, CallFunc_Array_Add_ReturnValue_7) == 0x0000F4, "Member 'TestMechVehicle_C_GetVehicleSeatActionNames::CallFunc_Array_Add_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_GetVehicleSeatActionNames, CallFunc_Array_Add_ReturnValue_8) == 0x0000F8, "Member 'TestMechVehicle_C_GetVehicleSeatActionNames::CallFunc_Array_Add_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_GetVehicleSeatActionNames, CallFunc_Array_Add_ReturnValue_9) == 0x0000FC, "Member 'TestMechVehicle_C_GetVehicleSeatActionNames::CallFunc_Array_Add_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_GetVehicleSeatActionNames, CallFunc_Array_Add_ReturnValue_10) == 0x000100, "Member 'TestMechVehicle_C_GetVehicleSeatActionNames::CallFunc_Array_Add_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_GetVehicleSeatActionNames, CallFunc_Array_Add_ReturnValue_11) == 0x000104, "Member 'TestMechVehicle_C_GetVehicleSeatActionNames::CallFunc_Array_Add_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_GetVehicleSeatActionNames, CallFunc_Array_Add_ReturnValue_12) == 0x000108, "Member 'TestMechVehicle_C_GetVehicleSeatActionNames::CallFunc_Array_Add_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_GetVehicleSeatActionNames, CallFunc_Array_Add_ReturnValue_13) == 0x00010C, "Member 'TestMechVehicle_C_GetVehicleSeatActionNames::CallFunc_Array_Add_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_GetVehicleSeatActionNames, CallFunc_Array_Add_ReturnValue_14) == 0x000110, "Member 'TestMechVehicle_C_GetVehicleSeatActionNames::CallFunc_Array_Add_ReturnValue_14' has a wrong offset!");

// Function TestMechVehicle.TestMechVehicle_C.GetVehicleSeatActionLabels
// 0x0208 (0x0208 - 0x0000)
struct TestMechVehicle_C_GetVehicleSeatActionLabels final
{
public:
	class AFortPlayerPawn*                        PlayerPawn;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECommonInputType                              OverrideInputType;                                 // 0x0008(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FText>                           ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm)
	TArray<class FText>                           ActionLabels;                                      // 0x0020(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	class FText                                   CallFunc_MakeLiteralText_ReturnValue;              // 0x0030(0x0018)()
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_MakeLiteralText_ReturnValue_1;            // 0x0050(0x0018)()
	class FText                                   CallFunc_MakeLiteralText_ReturnValue_2;            // 0x0068(0x0018)()
	class FText                                   CallFunc_MakeLiteralText_ReturnValue_3;            // 0x0080(0x0018)()
	class FText                                   CallFunc_MakeLiteralText_ReturnValue_4;            // 0x0098(0x0018)()
	class FText                                   CallFunc_MakeLiteralText_ReturnValue_5;            // 0x00B0(0x0018)()
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_3;                  // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_4;                  // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DC[0x4];                                       // 0x00DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_MakeLiteralText_ReturnValue_6;            // 0x00E0(0x0018)()
	float                                         CallFunc_GetValueAtLevel_ReturnValue;              // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FC[0x4];                                       // 0x00FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0100(0x0040)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_5;                  // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_144[0x4];                                      // 0x0144(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0148(0x0010)(ZeroConstructor, ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0158(0x0018)()
	int32                                         CallFunc_Array_Add_ReturnValue_6;                  // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_7;                  // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_MakeLiteralText_ReturnValue_7;            // 0x0178(0x0018)()
	class FText                                   CallFunc_MakeLiteralText_ReturnValue_8;            // 0x0190(0x0018)()
	int32                                         CallFunc_Array_Add_ReturnValue_8;                  // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_9;                  // 0x01AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_MakeLiteralText_ReturnValue_9;            // 0x01B0(0x0018)()
	class FText                                   CallFunc_MakeLiteralText_ReturnValue_10;           // 0x01C8(0x0018)()
	int32                                         CallFunc_Array_Add_ReturnValue_10;                 // 0x01E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_11;                 // 0x01E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_MakeLiteralText_ReturnValue_11;           // 0x01E8(0x0018)()
	int32                                         CallFunc_Array_Add_ReturnValue_12;                 // 0x0200(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TestMechVehicle_C_GetVehicleSeatActionLabels) == 0x000008, "Wrong alignment on TestMechVehicle_C_GetVehicleSeatActionLabels");
static_assert(sizeof(TestMechVehicle_C_GetVehicleSeatActionLabels) == 0x000208, "Wrong size on TestMechVehicle_C_GetVehicleSeatActionLabels");
static_assert(offsetof(TestMechVehicle_C_GetVehicleSeatActionLabels, PlayerPawn) == 0x000000, "Member 'TestMechVehicle_C_GetVehicleSeatActionLabels::PlayerPawn' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_GetVehicleSeatActionLabels, OverrideInputType) == 0x000008, "Member 'TestMechVehicle_C_GetVehicleSeatActionLabels::OverrideInputType' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_GetVehicleSeatActionLabels, ReturnValue) == 0x000010, "Member 'TestMechVehicle_C_GetVehicleSeatActionLabels::ReturnValue' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_GetVehicleSeatActionLabels, ActionLabels) == 0x000020, "Member 'TestMechVehicle_C_GetVehicleSeatActionLabels::ActionLabels' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_GetVehicleSeatActionLabels, CallFunc_MakeLiteralText_ReturnValue) == 0x000030, "Member 'TestMechVehicle_C_GetVehicleSeatActionLabels::CallFunc_MakeLiteralText_ReturnValue' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_GetVehicleSeatActionLabels, CallFunc_IsValid_ReturnValue) == 0x000048, "Member 'TestMechVehicle_C_GetVehicleSeatActionLabels::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_GetVehicleSeatActionLabels, CallFunc_MakeLiteralText_ReturnValue_1) == 0x000050, "Member 'TestMechVehicle_C_GetVehicleSeatActionLabels::CallFunc_MakeLiteralText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_GetVehicleSeatActionLabels, CallFunc_MakeLiteralText_ReturnValue_2) == 0x000068, "Member 'TestMechVehicle_C_GetVehicleSeatActionLabels::CallFunc_MakeLiteralText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_GetVehicleSeatActionLabels, CallFunc_MakeLiteralText_ReturnValue_3) == 0x000080, "Member 'TestMechVehicle_C_GetVehicleSeatActionLabels::CallFunc_MakeLiteralText_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_GetVehicleSeatActionLabels, CallFunc_MakeLiteralText_ReturnValue_4) == 0x000098, "Member 'TestMechVehicle_C_GetVehicleSeatActionLabels::CallFunc_MakeLiteralText_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_GetVehicleSeatActionLabels, CallFunc_MakeLiteralText_ReturnValue_5) == 0x0000B0, "Member 'TestMechVehicle_C_GetVehicleSeatActionLabels::CallFunc_MakeLiteralText_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_GetVehicleSeatActionLabels, CallFunc_Array_Add_ReturnValue) == 0x0000C8, "Member 'TestMechVehicle_C_GetVehicleSeatActionLabels::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_GetVehicleSeatActionLabels, CallFunc_Array_Add_ReturnValue_1) == 0x0000CC, "Member 'TestMechVehicle_C_GetVehicleSeatActionLabels::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_GetVehicleSeatActionLabels, CallFunc_Array_Add_ReturnValue_2) == 0x0000D0, "Member 'TestMechVehicle_C_GetVehicleSeatActionLabels::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_GetVehicleSeatActionLabels, CallFunc_Array_Add_ReturnValue_3) == 0x0000D4, "Member 'TestMechVehicle_C_GetVehicleSeatActionLabels::CallFunc_Array_Add_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_GetVehicleSeatActionLabels, CallFunc_Array_Add_ReturnValue_4) == 0x0000D8, "Member 'TestMechVehicle_C_GetVehicleSeatActionLabels::CallFunc_Array_Add_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_GetVehicleSeatActionLabels, CallFunc_MakeLiteralText_ReturnValue_6) == 0x0000E0, "Member 'TestMechVehicle_C_GetVehicleSeatActionLabels::CallFunc_MakeLiteralText_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_GetVehicleSeatActionLabels, CallFunc_GetValueAtLevel_ReturnValue) == 0x0000F8, "Member 'TestMechVehicle_C_GetVehicleSeatActionLabels::CallFunc_GetValueAtLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_GetVehicleSeatActionLabels, K2Node_MakeStruct_FormatArgumentData) == 0x000100, "Member 'TestMechVehicle_C_GetVehicleSeatActionLabels::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_GetVehicleSeatActionLabels, CallFunc_Array_Add_ReturnValue_5) == 0x000140, "Member 'TestMechVehicle_C_GetVehicleSeatActionLabels::CallFunc_Array_Add_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_GetVehicleSeatActionLabels, K2Node_MakeArray_Array) == 0x000148, "Member 'TestMechVehicle_C_GetVehicleSeatActionLabels::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_GetVehicleSeatActionLabels, CallFunc_Format_ReturnValue) == 0x000158, "Member 'TestMechVehicle_C_GetVehicleSeatActionLabels::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_GetVehicleSeatActionLabels, CallFunc_Array_Add_ReturnValue_6) == 0x000170, "Member 'TestMechVehicle_C_GetVehicleSeatActionLabels::CallFunc_Array_Add_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_GetVehicleSeatActionLabels, CallFunc_Array_Add_ReturnValue_7) == 0x000174, "Member 'TestMechVehicle_C_GetVehicleSeatActionLabels::CallFunc_Array_Add_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_GetVehicleSeatActionLabels, CallFunc_MakeLiteralText_ReturnValue_7) == 0x000178, "Member 'TestMechVehicle_C_GetVehicleSeatActionLabels::CallFunc_MakeLiteralText_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_GetVehicleSeatActionLabels, CallFunc_MakeLiteralText_ReturnValue_8) == 0x000190, "Member 'TestMechVehicle_C_GetVehicleSeatActionLabels::CallFunc_MakeLiteralText_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_GetVehicleSeatActionLabels, CallFunc_Array_Add_ReturnValue_8) == 0x0001A8, "Member 'TestMechVehicle_C_GetVehicleSeatActionLabels::CallFunc_Array_Add_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_GetVehicleSeatActionLabels, CallFunc_Array_Add_ReturnValue_9) == 0x0001AC, "Member 'TestMechVehicle_C_GetVehicleSeatActionLabels::CallFunc_Array_Add_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_GetVehicleSeatActionLabels, CallFunc_MakeLiteralText_ReturnValue_9) == 0x0001B0, "Member 'TestMechVehicle_C_GetVehicleSeatActionLabels::CallFunc_MakeLiteralText_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_GetVehicleSeatActionLabels, CallFunc_MakeLiteralText_ReturnValue_10) == 0x0001C8, "Member 'TestMechVehicle_C_GetVehicleSeatActionLabels::CallFunc_MakeLiteralText_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_GetVehicleSeatActionLabels, CallFunc_Array_Add_ReturnValue_10) == 0x0001E0, "Member 'TestMechVehicle_C_GetVehicleSeatActionLabels::CallFunc_Array_Add_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_GetVehicleSeatActionLabels, CallFunc_Array_Add_ReturnValue_11) == 0x0001E4, "Member 'TestMechVehicle_C_GetVehicleSeatActionLabels::CallFunc_Array_Add_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_GetVehicleSeatActionLabels, CallFunc_MakeLiteralText_ReturnValue_11) == 0x0001E8, "Member 'TestMechVehicle_C_GetVehicleSeatActionLabels::CallFunc_MakeLiteralText_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_GetVehicleSeatActionLabels, CallFunc_Array_Add_ReturnValue_12) == 0x000200, "Member 'TestMechVehicle_C_GetVehicleSeatActionLabels::CallFunc_Array_Add_ReturnValue_12' has a wrong offset!");

// Function TestMechVehicle.TestMechVehicle_C.OnRep_Dashing
// 0x00B8 (0x00B8 - 0x0000)
struct TestMechVehicle_C_OnRep_Dashing final
{
public:
	struct FGameplayCueParameters                 CallFunc_GC_Params_ReturnValue;                    // 0x0000(0x00B8)(ContainsInstancedReference)
};
static_assert(alignof(TestMechVehicle_C_OnRep_Dashing) == 0x000008, "Wrong alignment on TestMechVehicle_C_OnRep_Dashing");
static_assert(sizeof(TestMechVehicle_C_OnRep_Dashing) == 0x0000B8, "Wrong size on TestMechVehicle_C_OnRep_Dashing");
static_assert(offsetof(TestMechVehicle_C_OnRep_Dashing, CallFunc_GC_Params_ReturnValue) == 0x000000, "Member 'TestMechVehicle_C_OnRep_Dashing::CallFunc_GC_Params_ReturnValue' has a wrong offset!");

// Function TestMechVehicle.TestMechVehicle_C.DamageAndLaunchActors
// 0x0108 (0x0108 - 0x0000)
struct TestMechVehicle_C_DamageAndLaunchActors final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         LandedHitActors;                                   // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate)
	TScriptInterface<class IFortVehicleInterface> K2Node_DynamicCast_AsFort_Vehicle_Interface;       // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue;    // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ATestMechVehicle_C*                     K2Node_DynamicCast_AsTest_Mech_Vehicle;            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetVehicleActorPtr_ReturnValue;           // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerPawn*                        K2Node_DynamicCast_AsFort_Player_Pawn;             // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue_1;  // 0x0060(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput;    // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue;       // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerPawnAthena*                  K2Node_DynamicCast_AsFort_Player_Pawn_Athena;      // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsInVehicle_ReturnValue;                  // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x008A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x008B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsInVehicle_ReturnValue_1;                // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8D[0x3];                                       // 0x008D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetVehicleActor_ReturnValue;              // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ATestMechVehicle_C*                     K2Node_DynamicCast_AsTest_Mech_Vehicle_1;          // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A1[0x3];                                       // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 CallFunc_GetMechMesh_ReturnValue;                  // 0x00B0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue;            // 0x00B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00C4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckLineOfSightToActor_ReturnValue;      // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue_1;      // 0x00D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D3[0x1];                                       // 0x00D3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FActiveGameplayEffectHandle            CallFunc_BP_ApplyGameplayEffectToTarget_ReturnValue; // 0x00D4(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue_2;      // 0x00DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DD[0x3];                                       // 0x00DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_KnockAwayDirection_LaunchVelocity;        // 0x00E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue_3;      // 0x00EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00ED(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x00EE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_EF[0x1];                                       // 0x00EF(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_OnSameTeam_ReturnValue;                   // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x00FA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_OnSameTeam_ReturnValue_1;                 // 0x00FB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_KnockAwayDirection_LaunchVelocity_1;      // 0x00FC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TestMechVehicle_C_DamageAndLaunchActors) == 0x000008, "Wrong alignment on TestMechVehicle_C_DamageAndLaunchActors");
static_assert(sizeof(TestMechVehicle_C_DamageAndLaunchActors) == 0x000108, "Wrong size on TestMechVehicle_C_DamageAndLaunchActors");
static_assert(offsetof(TestMechVehicle_C_DamageAndLaunchActors, Actor) == 0x000000, "Member 'TestMechVehicle_C_DamageAndLaunchActors::Actor' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_DamageAndLaunchActors, LandedHitActors) == 0x000008, "Member 'TestMechVehicle_C_DamageAndLaunchActors::LandedHitActors' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_DamageAndLaunchActors, K2Node_DynamicCast_AsFort_Vehicle_Interface) == 0x000018, "Member 'TestMechVehicle_C_DamageAndLaunchActors::K2Node_DynamicCast_AsFort_Vehicle_Interface' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_DamageAndLaunchActors, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'TestMechVehicle_C_DamageAndLaunchActors::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_DamageAndLaunchActors, CallFunc_GetAbilitySystemComponent_ReturnValue) == 0x000030, "Member 'TestMechVehicle_C_DamageAndLaunchActors::CallFunc_GetAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_DamageAndLaunchActors, K2Node_DynamicCast_AsTest_Mech_Vehicle) == 0x000038, "Member 'TestMechVehicle_C_DamageAndLaunchActors::K2Node_DynamicCast_AsTest_Mech_Vehicle' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_DamageAndLaunchActors, K2Node_DynamicCast_bSuccess_1) == 0x000040, "Member 'TestMechVehicle_C_DamageAndLaunchActors::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_DamageAndLaunchActors, CallFunc_GetVehicleActorPtr_ReturnValue) == 0x000048, "Member 'TestMechVehicle_C_DamageAndLaunchActors::CallFunc_GetVehicleActorPtr_ReturnValue' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_DamageAndLaunchActors, K2Node_DynamicCast_AsFort_Player_Pawn) == 0x000050, "Member 'TestMechVehicle_C_DamageAndLaunchActors::K2Node_DynamicCast_AsFort_Player_Pawn' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_DamageAndLaunchActors, K2Node_DynamicCast_bSuccess_2) == 0x000058, "Member 'TestMechVehicle_C_DamageAndLaunchActors::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_DamageAndLaunchActors, CallFunc_GetAbilitySystemComponent_ReturnValue_1) == 0x000060, "Member 'TestMechVehicle_C_DamageAndLaunchActors::CallFunc_GetAbilitySystemComponent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_DamageAndLaunchActors, CallFunc_HasMatchingGameplayTag_self_CastInput) == 0x000068, "Member 'TestMechVehicle_C_DamageAndLaunchActors::CallFunc_HasMatchingGameplayTag_self_CastInput' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_DamageAndLaunchActors, CallFunc_HasMatchingGameplayTag_ReturnValue) == 0x000078, "Member 'TestMechVehicle_C_DamageAndLaunchActors::CallFunc_HasMatchingGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_DamageAndLaunchActors, K2Node_DynamicCast_AsFort_Player_Pawn_Athena) == 0x000080, "Member 'TestMechVehicle_C_DamageAndLaunchActors::K2Node_DynamicCast_AsFort_Player_Pawn_Athena' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_DamageAndLaunchActors, K2Node_DynamicCast_bSuccess_3) == 0x000088, "Member 'TestMechVehicle_C_DamageAndLaunchActors::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_DamageAndLaunchActors, CallFunc_IsInVehicle_ReturnValue) == 0x000089, "Member 'TestMechVehicle_C_DamageAndLaunchActors::CallFunc_IsInVehicle_ReturnValue' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_DamageAndLaunchActors, CallFunc_IsValid_ReturnValue) == 0x00008A, "Member 'TestMechVehicle_C_DamageAndLaunchActors::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_DamageAndLaunchActors, CallFunc_Not_PreBool_ReturnValue) == 0x00008B, "Member 'TestMechVehicle_C_DamageAndLaunchActors::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_DamageAndLaunchActors, CallFunc_IsInVehicle_ReturnValue_1) == 0x00008C, "Member 'TestMechVehicle_C_DamageAndLaunchActors::CallFunc_IsInVehicle_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_DamageAndLaunchActors, CallFunc_GetVehicleActor_ReturnValue) == 0x000090, "Member 'TestMechVehicle_C_DamageAndLaunchActors::CallFunc_GetVehicleActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_DamageAndLaunchActors, K2Node_DynamicCast_AsTest_Mech_Vehicle_1) == 0x000098, "Member 'TestMechVehicle_C_DamageAndLaunchActors::K2Node_DynamicCast_AsTest_Mech_Vehicle_1' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_DamageAndLaunchActors, K2Node_DynamicCast_bSuccess_4) == 0x0000A0, "Member 'TestMechVehicle_C_DamageAndLaunchActors::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_DamageAndLaunchActors, CallFunc_Array_Add_ReturnValue) == 0x0000A4, "Member 'TestMechVehicle_C_DamageAndLaunchActors::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_DamageAndLaunchActors, CallFunc_Array_Contains_ReturnValue) == 0x0000A8, "Member 'TestMechVehicle_C_DamageAndLaunchActors::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_DamageAndLaunchActors, CallFunc_GetMechMesh_ReturnValue) == 0x0000B0, "Member 'TestMechVehicle_C_DamageAndLaunchActors::CallFunc_GetMechMesh_ReturnValue' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_DamageAndLaunchActors, CallFunc_GetSocketLocation_ReturnValue) == 0x0000B8, "Member 'TestMechVehicle_C_DamageAndLaunchActors::CallFunc_GetSocketLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_DamageAndLaunchActors, CallFunc_Add_VectorVector_ReturnValue) == 0x0000C4, "Member 'TestMechVehicle_C_DamageAndLaunchActors::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_DamageAndLaunchActors, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x0000D0, "Member 'TestMechVehicle_C_DamageAndLaunchActors::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_DamageAndLaunchActors, CallFunc_CheckLineOfSightToActor_ReturnValue) == 0x0000D1, "Member 'TestMechVehicle_C_DamageAndLaunchActors::CallFunc_CheckLineOfSightToActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_DamageAndLaunchActors, CallFunc_NotEqual_ObjectObject_ReturnValue_1) == 0x0000D2, "Member 'TestMechVehicle_C_DamageAndLaunchActors::CallFunc_NotEqual_ObjectObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_DamageAndLaunchActors, CallFunc_BP_ApplyGameplayEffectToTarget_ReturnValue) == 0x0000D4, "Member 'TestMechVehicle_C_DamageAndLaunchActors::CallFunc_BP_ApplyGameplayEffectToTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_DamageAndLaunchActors, CallFunc_NotEqual_ObjectObject_ReturnValue_2) == 0x0000DC, "Member 'TestMechVehicle_C_DamageAndLaunchActors::CallFunc_NotEqual_ObjectObject_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_DamageAndLaunchActors, CallFunc_KnockAwayDirection_LaunchVelocity) == 0x0000E0, "Member 'TestMechVehicle_C_DamageAndLaunchActors::CallFunc_KnockAwayDirection_LaunchVelocity' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_DamageAndLaunchActors, CallFunc_NotEqual_ObjectObject_ReturnValue_3) == 0x0000EC, "Member 'TestMechVehicle_C_DamageAndLaunchActors::CallFunc_NotEqual_ObjectObject_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_DamageAndLaunchActors, CallFunc_BooleanAND_ReturnValue) == 0x0000ED, "Member 'TestMechVehicle_C_DamageAndLaunchActors::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_DamageAndLaunchActors, CallFunc_BooleanAND_ReturnValue_1) == 0x0000EE, "Member 'TestMechVehicle_C_DamageAndLaunchActors::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_DamageAndLaunchActors, CallFunc_GetController_ReturnValue) == 0x0000F0, "Member 'TestMechVehicle_C_DamageAndLaunchActors::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_DamageAndLaunchActors, CallFunc_OnSameTeam_ReturnValue) == 0x0000F8, "Member 'TestMechVehicle_C_DamageAndLaunchActors::CallFunc_OnSameTeam_ReturnValue' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_DamageAndLaunchActors, CallFunc_IsValid_ReturnValue_1) == 0x0000F9, "Member 'TestMechVehicle_C_DamageAndLaunchActors::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_DamageAndLaunchActors, CallFunc_IsValid_ReturnValue_2) == 0x0000FA, "Member 'TestMechVehicle_C_DamageAndLaunchActors::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_DamageAndLaunchActors, CallFunc_OnSameTeam_ReturnValue_1) == 0x0000FB, "Member 'TestMechVehicle_C_DamageAndLaunchActors::CallFunc_OnSameTeam_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_DamageAndLaunchActors, CallFunc_KnockAwayDirection_LaunchVelocity_1) == 0x0000FC, "Member 'TestMechVehicle_C_DamageAndLaunchActors::CallFunc_KnockAwayDirection_LaunchVelocity_1' has a wrong offset!");

// Function TestMechVehicle.TestMechVehicle_C.KickDestroyAndKnockActors
// 0x0490 (0x0490 - 0x0000)
struct TestMechVehicle_C_KickDestroyAndKnockActors final
{
public:
	TArray<class AActor*>                         KickHitActors;                                     // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0020(0x0010)(ConstParm, ZeroConstructor, ReferenceParm)
	struct FGameplayEffectContextHandle           K2Node_MakeStruct_GameplayEffectContextHandle;     // 0x0030(0x0018)()
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue;    // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEffectContextHandle           K2Node_MakeStruct_GameplayEffectContextHandle_1;   // 0x0050(0x0018)()
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue_1;  // 0x0068(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 CallFunc_GetMechMesh_ReturnValue;                  // 0x0070(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue;            // 0x007C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0088(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_AA[0x6];                                       // 0x00AA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array;                            // 0x00B0(0x0010)(ConstParm, ZeroConstructor, ReferenceParm)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x00C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CC[0x4];                                       // 0x00CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue_2;  // 0x00D0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x00D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetControlRotation_ReturnValue;           // 0x00E4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue_1;      // 0x00F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0108(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x0114(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0120(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x012C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_2;           // 0x0138(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_3;           // 0x0144(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FHitResult>                     CallFunc_BoxTraceMultiForObjects_OutHits;          // 0x0150(0x0010)(ZeroConstructor, ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_BoxTraceMultiForObjects_ReturnValue;      // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_161[0x3];                                      // 0x0161(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_Array_Get_Item;                           // 0x0168(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x01F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x01F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x01F2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1F3[0x1];                                      // 0x01F3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x01F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x01F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x01FC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0208(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0214(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0220(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22C[0x4];                                      // 0x022C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0240(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0248(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0250(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0254(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0258(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0264(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABuildingActor*                         K2Node_DynamicCast_AsBuilding_Actor;               // 0x0270(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0278(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_279[0x3];                                      // 0x0279(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_Array_Get_Item_1;                         // 0x027C(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_CanDamageBuilding_ReturnValue;            // 0x0304(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_305[0x3];                                      // 0x0305(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABuildingActor*                         CallFunc_CanDamageBuilding_Building_Actor;         // 0x0308(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_1;            // 0x0310(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_1;         // 0x0311(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_312[0x2];                                      // 0x0312(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time_1;                    // 0x0314(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_1;                // 0x0318(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location_1;                // 0x031C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_1;             // 0x0328(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_1;                  // 0x0334(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_1;            // 0x0340(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34C[0x4];                                      // 0x034C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_1;                 // 0x0350(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_1;                // 0x0358(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_1;            // 0x0360(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_1;             // 0x0368(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_1;                 // 0x0370(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_1;               // 0x0374(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart_1;              // 0x0378(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_1;                // 0x0384(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue_3;  // 0x0390(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckLineOfSightToActor_ReturnValue;      // 0x0398(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_399[0x3];                                      // 0x0399(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FActiveGameplayEffectHandle            CallFunc_BP_ApplyGameplayEffectToTarget_ReturnValue; // 0x039C(0x0008)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x03A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortAIPawn*                            K2Node_DynamicCast_AsFort_AIPawn;                  // 0x03A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x03B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B1[0x7];                                      // 0x03B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IFortVehicleInterface> K2Node_DynamicCast_AsFort_Vehicle_Interface;       // 0x03B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x03C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C9[0x7];                                      // 0x03C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue_4;  // 0x03D0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ATestMechVehicle_C*                     K2Node_DynamicCast_AsTest_Mech_Vehicle;            // 0x03D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x03E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3E1[0x3];                                      // 0x03E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FActiveGameplayEffectHandle            CallFunc_BP_ApplyGameplayEffectToTarget_ReturnValue_1; // 0x03E4(0x0008)(NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3EC[0x4];                                      // 0x03EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetVehicleActorPtr_ReturnValue;           // 0x03F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerPawn*                        K2Node_DynamicCast_AsFort_Player_Pawn;             // 0x03F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0400(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_401[0x3];                                      // 0x0401(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_KnockAwayDirection_LaunchVelocity;        // 0x0404(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput;    // 0x0410(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue;       // 0x0420(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_421[0x7];                                      // 0x0421(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerPawnAthena*                  K2Node_DynamicCast_AsFort_Player_Pawn_Athena;      // 0x0428(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x0430(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_OnSameTeam_ReturnValue;                   // 0x0431(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsInVehicle_ReturnValue;                  // 0x0432(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0433(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0434(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_435[0x3];                                      // 0x0435(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetVehicleActor_ReturnValue;              // 0x0438(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_KnockAwayDirection_LaunchVelocity_1;      // 0x0440(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44C[0x4];                                      // 0x044C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ATestMechVehicle_C*                     K2Node_DynamicCast_AsTest_Mech_Vehicle_1;          // 0x0450(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x0458(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_459[0x7];                                      // 0x0459(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue_5;  // 0x0460(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_OnSameTeam_ReturnValue_1;                 // 0x0468(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_469[0x3];                                      // 0x0469(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FActiveGameplayEffectHandle            CallFunc_BP_ApplyGameplayEffectToTarget_ReturnValue_2; // 0x046C(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInVehicle_ReturnValue_1;                // 0x0474(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0475(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue_1;      // 0x0476(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue_2;      // 0x0477(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue_3;      // 0x0478(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0479(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x047A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_47B[0x1];                                      // 0x047B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FActiveGameplayEffectHandle            CallFunc_ApplyGlobalEnvironmentGameplayEffectToActor_ReturnValue; // 0x047C(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0484(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_485[0x3];                                      // 0x0485(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0488(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x048C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TestMechVehicle_C_KickDestroyAndKnockActors) == 0x000008, "Wrong alignment on TestMechVehicle_C_KickDestroyAndKnockActors");
static_assert(sizeof(TestMechVehicle_C_KickDestroyAndKnockActors) == 0x000490, "Wrong size on TestMechVehicle_C_KickDestroyAndKnockActors");
static_assert(offsetof(TestMechVehicle_C_KickDestroyAndKnockActors, KickHitActors) == 0x000000, "Member 'TestMechVehicle_C_KickDestroyAndKnockActors::KickHitActors' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_KickDestroyAndKnockActors, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'TestMechVehicle_C_KickDestroyAndKnockActors::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_KickDestroyAndKnockActors, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'TestMechVehicle_C_KickDestroyAndKnockActors::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_KickDestroyAndKnockActors, Temp_int_Array_Index_Variable) == 0x000018, "Member 'TestMechVehicle_C_KickDestroyAndKnockActors::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_KickDestroyAndKnockActors, Temp_int_Array_Index_Variable_1) == 0x00001C, "Member 'TestMechVehicle_C_KickDestroyAndKnockActors::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_KickDestroyAndKnockActors, Temp_object_Variable) == 0x000020, "Member 'TestMechVehicle_C_KickDestroyAndKnockActors::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_KickDestroyAndKnockActors, K2Node_MakeStruct_GameplayEffectContextHandle) == 0x000030, "Member 'TestMechVehicle_C_KickDestroyAndKnockActors::K2Node_MakeStruct_GameplayEffectContextHandle' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_KickDestroyAndKnockActors, CallFunc_GetAbilitySystemComponent_ReturnValue) == 0x000048, "Member 'TestMechVehicle_C_KickDestroyAndKnockActors::CallFunc_GetAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_KickDestroyAndKnockActors, K2Node_MakeStruct_GameplayEffectContextHandle_1) == 0x000050, "Member 'TestMechVehicle_C_KickDestroyAndKnockActors::K2Node_MakeStruct_GameplayEffectContextHandle_1' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_KickDestroyAndKnockActors, CallFunc_GetAbilitySystemComponent_ReturnValue_1) == 0x000068, "Member 'TestMechVehicle_C_KickDestroyAndKnockActors::CallFunc_GetAbilitySystemComponent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_KickDestroyAndKnockActors, CallFunc_GetMechMesh_ReturnValue) == 0x000070, "Member 'TestMechVehicle_C_KickDestroyAndKnockActors::CallFunc_GetMechMesh_ReturnValue' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_KickDestroyAndKnockActors, Temp_int_Loop_Counter_Variable_1) == 0x000078, "Member 'TestMechVehicle_C_KickDestroyAndKnockActors::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_KickDestroyAndKnockActors, CallFunc_GetSocketLocation_ReturnValue) == 0x00007C, "Member 'TestMechVehicle_C_KickDestroyAndKnockActors::CallFunc_GetSocketLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_KickDestroyAndKnockActors, CallFunc_Add_VectorVector_ReturnValue) == 0x000088, "Member 'TestMechVehicle_C_KickDestroyAndKnockActors::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_KickDestroyAndKnockActors, CallFunc_Add_IntInt_ReturnValue_1) == 0x000094, "Member 'TestMechVehicle_C_KickDestroyAndKnockActors::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_KickDestroyAndKnockActors, CallFunc_HasAuthority_ReturnValue) == 0x000098, "Member 'TestMechVehicle_C_KickDestroyAndKnockActors::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_KickDestroyAndKnockActors, CallFunc_GetController_ReturnValue) == 0x0000A0, "Member 'TestMechVehicle_C_KickDestroyAndKnockActors::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_KickDestroyAndKnockActors, CallFunc_IsValid_ReturnValue) == 0x0000A8, "Member 'TestMechVehicle_C_KickDestroyAndKnockActors::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_KickDestroyAndKnockActors, CallFunc_IsValid_ReturnValue_1) == 0x0000A9, "Member 'TestMechVehicle_C_KickDestroyAndKnockActors::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_KickDestroyAndKnockActors, K2Node_MakeArray_Array) == 0x0000B0, "Member 'TestMechVehicle_C_KickDestroyAndKnockActors::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_KickDestroyAndKnockActors, CallFunc_GetActorForwardVector_ReturnValue) == 0x0000C0, "Member 'TestMechVehicle_C_KickDestroyAndKnockActors::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_KickDestroyAndKnockActors, CallFunc_GetAbilitySystemComponent_ReturnValue_2) == 0x0000D0, "Member 'TestMechVehicle_C_KickDestroyAndKnockActors::CallFunc_GetAbilitySystemComponent_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_KickDestroyAndKnockActors, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0000D8, "Member 'TestMechVehicle_C_KickDestroyAndKnockActors::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_KickDestroyAndKnockActors, CallFunc_GetControlRotation_ReturnValue) == 0x0000E4, "Member 'TestMechVehicle_C_KickDestroyAndKnockActors::CallFunc_GetControlRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_KickDestroyAndKnockActors, CallFunc_GetActorForwardVector_ReturnValue_1) == 0x0000F0, "Member 'TestMechVehicle_C_KickDestroyAndKnockActors::CallFunc_GetActorForwardVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_KickDestroyAndKnockActors, CallFunc_BreakRotator_Roll) == 0x0000FC, "Member 'TestMechVehicle_C_KickDestroyAndKnockActors::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_KickDestroyAndKnockActors, CallFunc_BreakRotator_Pitch) == 0x000100, "Member 'TestMechVehicle_C_KickDestroyAndKnockActors::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_KickDestroyAndKnockActors, CallFunc_BreakRotator_Yaw) == 0x000104, "Member 'TestMechVehicle_C_KickDestroyAndKnockActors::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_KickDestroyAndKnockActors, CallFunc_MakeRotator_ReturnValue) == 0x000108, "Member 'TestMechVehicle_C_KickDestroyAndKnockActors::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_KickDestroyAndKnockActors, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x000114, "Member 'TestMechVehicle_C_KickDestroyAndKnockActors::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_KickDestroyAndKnockActors, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000120, "Member 'TestMechVehicle_C_KickDestroyAndKnockActors::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_KickDestroyAndKnockActors, CallFunc_Add_VectorVector_ReturnValue_1) == 0x00012C, "Member 'TestMechVehicle_C_KickDestroyAndKnockActors::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_KickDestroyAndKnockActors, CallFunc_Add_VectorVector_ReturnValue_2) == 0x000138, "Member 'TestMechVehicle_C_KickDestroyAndKnockActors::CallFunc_Add_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_KickDestroyAndKnockActors, CallFunc_Add_VectorVector_ReturnValue_3) == 0x000144, "Member 'TestMechVehicle_C_KickDestroyAndKnockActors::CallFunc_Add_VectorVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_KickDestroyAndKnockActors, CallFunc_BoxTraceMultiForObjects_OutHits) == 0x000150, "Member 'TestMechVehicle_C_KickDestroyAndKnockActors::CallFunc_BoxTraceMultiForObjects_OutHits' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_KickDestroyAndKnockActors, CallFunc_BoxTraceMultiForObjects_ReturnValue) == 0x000160, "Member 'TestMechVehicle_C_KickDestroyAndKnockActors::CallFunc_BoxTraceMultiForObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_KickDestroyAndKnockActors, CallFunc_Array_Length_ReturnValue) == 0x000164, "Member 'TestMechVehicle_C_KickDestroyAndKnockActors::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_KickDestroyAndKnockActors, CallFunc_Array_Get_Item) == 0x000168, "Member 'TestMechVehicle_C_KickDestroyAndKnockActors::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_KickDestroyAndKnockActors, CallFunc_Less_IntInt_ReturnValue) == 0x0001F0, "Member 'TestMechVehicle_C_KickDestroyAndKnockActors::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_KickDestroyAndKnockActors, CallFunc_BreakHitResult_bBlockingHit) == 0x0001F1, "Member 'TestMechVehicle_C_KickDestroyAndKnockActors::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_KickDestroyAndKnockActors, CallFunc_BreakHitResult_bInitialOverlap) == 0x0001F2, "Member 'TestMechVehicle_C_KickDestroyAndKnockActors::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_KickDestroyAndKnockActors, CallFunc_BreakHitResult_Time) == 0x0001F4, "Member 'TestMechVehicle_C_KickDestroyAndKnockActors::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_KickDestroyAndKnockActors, CallFunc_BreakHitResult_Distance) == 0x0001F8, "Member 'TestMechVehicle_C_KickDestroyAndKnockActors::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_KickDestroyAndKnockActors, CallFunc_BreakHitResult_Location) == 0x0001FC, "Member 'TestMechVehicle_C_KickDestroyAndKnockActors::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_KickDestroyAndKnockActors, CallFunc_BreakHitResult_ImpactPoint) == 0x000208, "Member 'TestMechVehicle_C_KickDestroyAndKnockActors::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_KickDestroyAndKnockActors, CallFunc_BreakHitResult_Normal) == 0x000214, "Member 'TestMechVehicle_C_KickDestroyAndKnockActors::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_KickDestroyAndKnockActors, CallFunc_BreakHitResult_ImpactNormal) == 0x000220, "Member 'TestMechVehicle_C_KickDestroyAndKnockActors::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_KickDestroyAndKnockActors, CallFunc_BreakHitResult_PhysMat) == 0x000230, "Member 'TestMechVehicle_C_KickDestroyAndKnockActors::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_KickDestroyAndKnockActors, CallFunc_BreakHitResult_HitActor) == 0x000238, "Member 'TestMechVehicle_C_KickDestroyAndKnockActors::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_KickDestroyAndKnockActors, CallFunc_BreakHitResult_HitComponent) == 0x000240, "Member 'TestMechVehicle_C_KickDestroyAndKnockActors::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_KickDestroyAndKnockActors, CallFunc_BreakHitResult_HitBoneName) == 0x000248, "Member 'TestMechVehicle_C_KickDestroyAndKnockActors::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_KickDestroyAndKnockActors, CallFunc_BreakHitResult_HitItem) == 0x000250, "Member 'TestMechVehicle_C_KickDestroyAndKnockActors::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_KickDestroyAndKnockActors, CallFunc_BreakHitResult_FaceIndex) == 0x000254, "Member 'TestMechVehicle_C_KickDestroyAndKnockActors::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_KickDestroyAndKnockActors, CallFunc_BreakHitResult_TraceStart) == 0x000258, "Member 'TestMechVehicle_C_KickDestroyAndKnockActors::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_KickDestroyAndKnockActors, CallFunc_BreakHitResult_TraceEnd) == 0x000264, "Member 'TestMechVehicle_C_KickDestroyAndKnockActors::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_KickDestroyAndKnockActors, K2Node_DynamicCast_AsBuilding_Actor) == 0x000270, "Member 'TestMechVehicle_C_KickDestroyAndKnockActors::K2Node_DynamicCast_AsBuilding_Actor' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_KickDestroyAndKnockActors, K2Node_DynamicCast_bSuccess) == 0x000278, "Member 'TestMechVehicle_C_KickDestroyAndKnockActors::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_KickDestroyAndKnockActors, CallFunc_Array_Get_Item_1) == 0x00027C, "Member 'TestMechVehicle_C_KickDestroyAndKnockActors::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_KickDestroyAndKnockActors, CallFunc_CanDamageBuilding_ReturnValue) == 0x000304, "Member 'TestMechVehicle_C_KickDestroyAndKnockActors::CallFunc_CanDamageBuilding_ReturnValue' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_KickDestroyAndKnockActors, CallFunc_CanDamageBuilding_Building_Actor) == 0x000308, "Member 'TestMechVehicle_C_KickDestroyAndKnockActors::CallFunc_CanDamageBuilding_Building_Actor' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_KickDestroyAndKnockActors, CallFunc_BreakHitResult_bBlockingHit_1) == 0x000310, "Member 'TestMechVehicle_C_KickDestroyAndKnockActors::CallFunc_BreakHitResult_bBlockingHit_1' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_KickDestroyAndKnockActors, CallFunc_BreakHitResult_bInitialOverlap_1) == 0x000311, "Member 'TestMechVehicle_C_KickDestroyAndKnockActors::CallFunc_BreakHitResult_bInitialOverlap_1' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_KickDestroyAndKnockActors, CallFunc_BreakHitResult_Time_1) == 0x000314, "Member 'TestMechVehicle_C_KickDestroyAndKnockActors::CallFunc_BreakHitResult_Time_1' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_KickDestroyAndKnockActors, CallFunc_BreakHitResult_Distance_1) == 0x000318, "Member 'TestMechVehicle_C_KickDestroyAndKnockActors::CallFunc_BreakHitResult_Distance_1' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_KickDestroyAndKnockActors, CallFunc_BreakHitResult_Location_1) == 0x00031C, "Member 'TestMechVehicle_C_KickDestroyAndKnockActors::CallFunc_BreakHitResult_Location_1' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_KickDestroyAndKnockActors, CallFunc_BreakHitResult_ImpactPoint_1) == 0x000328, "Member 'TestMechVehicle_C_KickDestroyAndKnockActors::CallFunc_BreakHitResult_ImpactPoint_1' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_KickDestroyAndKnockActors, CallFunc_BreakHitResult_Normal_1) == 0x000334, "Member 'TestMechVehicle_C_KickDestroyAndKnockActors::CallFunc_BreakHitResult_Normal_1' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_KickDestroyAndKnockActors, CallFunc_BreakHitResult_ImpactNormal_1) == 0x000340, "Member 'TestMechVehicle_C_KickDestroyAndKnockActors::CallFunc_BreakHitResult_ImpactNormal_1' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_KickDestroyAndKnockActors, CallFunc_BreakHitResult_PhysMat_1) == 0x000350, "Member 'TestMechVehicle_C_KickDestroyAndKnockActors::CallFunc_BreakHitResult_PhysMat_1' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_KickDestroyAndKnockActors, CallFunc_BreakHitResult_HitActor_1) == 0x000358, "Member 'TestMechVehicle_C_KickDestroyAndKnockActors::CallFunc_BreakHitResult_HitActor_1' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_KickDestroyAndKnockActors, CallFunc_BreakHitResult_HitComponent_1) == 0x000360, "Member 'TestMechVehicle_C_KickDestroyAndKnockActors::CallFunc_BreakHitResult_HitComponent_1' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_KickDestroyAndKnockActors, CallFunc_BreakHitResult_HitBoneName_1) == 0x000368, "Member 'TestMechVehicle_C_KickDestroyAndKnockActors::CallFunc_BreakHitResult_HitBoneName_1' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_KickDestroyAndKnockActors, CallFunc_BreakHitResult_HitItem_1) == 0x000370, "Member 'TestMechVehicle_C_KickDestroyAndKnockActors::CallFunc_BreakHitResult_HitItem_1' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_KickDestroyAndKnockActors, CallFunc_BreakHitResult_FaceIndex_1) == 0x000374, "Member 'TestMechVehicle_C_KickDestroyAndKnockActors::CallFunc_BreakHitResult_FaceIndex_1' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_KickDestroyAndKnockActors, CallFunc_BreakHitResult_TraceStart_1) == 0x000378, "Member 'TestMechVehicle_C_KickDestroyAndKnockActors::CallFunc_BreakHitResult_TraceStart_1' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_KickDestroyAndKnockActors, CallFunc_BreakHitResult_TraceEnd_1) == 0x000384, "Member 'TestMechVehicle_C_KickDestroyAndKnockActors::CallFunc_BreakHitResult_TraceEnd_1' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_KickDestroyAndKnockActors, CallFunc_GetAbilitySystemComponent_ReturnValue_3) == 0x000390, "Member 'TestMechVehicle_C_KickDestroyAndKnockActors::CallFunc_GetAbilitySystemComponent_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_KickDestroyAndKnockActors, CallFunc_CheckLineOfSightToActor_ReturnValue) == 0x000398, "Member 'TestMechVehicle_C_KickDestroyAndKnockActors::CallFunc_CheckLineOfSightToActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_KickDestroyAndKnockActors, CallFunc_BP_ApplyGameplayEffectToTarget_ReturnValue) == 0x00039C, "Member 'TestMechVehicle_C_KickDestroyAndKnockActors::CallFunc_BP_ApplyGameplayEffectToTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_KickDestroyAndKnockActors, CallFunc_Array_Add_ReturnValue) == 0x0003A4, "Member 'TestMechVehicle_C_KickDestroyAndKnockActors::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_KickDestroyAndKnockActors, K2Node_DynamicCast_AsFort_AIPawn) == 0x0003A8, "Member 'TestMechVehicle_C_KickDestroyAndKnockActors::K2Node_DynamicCast_AsFort_AIPawn' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_KickDestroyAndKnockActors, K2Node_DynamicCast_bSuccess_1) == 0x0003B0, "Member 'TestMechVehicle_C_KickDestroyAndKnockActors::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_KickDestroyAndKnockActors, K2Node_DynamicCast_AsFort_Vehicle_Interface) == 0x0003B8, "Member 'TestMechVehicle_C_KickDestroyAndKnockActors::K2Node_DynamicCast_AsFort_Vehicle_Interface' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_KickDestroyAndKnockActors, K2Node_DynamicCast_bSuccess_2) == 0x0003C8, "Member 'TestMechVehicle_C_KickDestroyAndKnockActors::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_KickDestroyAndKnockActors, CallFunc_GetAbilitySystemComponent_ReturnValue_4) == 0x0003D0, "Member 'TestMechVehicle_C_KickDestroyAndKnockActors::CallFunc_GetAbilitySystemComponent_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_KickDestroyAndKnockActors, K2Node_DynamicCast_AsTest_Mech_Vehicle) == 0x0003D8, "Member 'TestMechVehicle_C_KickDestroyAndKnockActors::K2Node_DynamicCast_AsTest_Mech_Vehicle' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_KickDestroyAndKnockActors, K2Node_DynamicCast_bSuccess_3) == 0x0003E0, "Member 'TestMechVehicle_C_KickDestroyAndKnockActors::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_KickDestroyAndKnockActors, CallFunc_BP_ApplyGameplayEffectToTarget_ReturnValue_1) == 0x0003E4, "Member 'TestMechVehicle_C_KickDestroyAndKnockActors::CallFunc_BP_ApplyGameplayEffectToTarget_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_KickDestroyAndKnockActors, CallFunc_GetVehicleActorPtr_ReturnValue) == 0x0003F0, "Member 'TestMechVehicle_C_KickDestroyAndKnockActors::CallFunc_GetVehicleActorPtr_ReturnValue' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_KickDestroyAndKnockActors, K2Node_DynamicCast_AsFort_Player_Pawn) == 0x0003F8, "Member 'TestMechVehicle_C_KickDestroyAndKnockActors::K2Node_DynamicCast_AsFort_Player_Pawn' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_KickDestroyAndKnockActors, K2Node_DynamicCast_bSuccess_4) == 0x000400, "Member 'TestMechVehicle_C_KickDestroyAndKnockActors::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_KickDestroyAndKnockActors, CallFunc_KnockAwayDirection_LaunchVelocity) == 0x000404, "Member 'TestMechVehicle_C_KickDestroyAndKnockActors::CallFunc_KnockAwayDirection_LaunchVelocity' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_KickDestroyAndKnockActors, CallFunc_HasMatchingGameplayTag_self_CastInput) == 0x000410, "Member 'TestMechVehicle_C_KickDestroyAndKnockActors::CallFunc_HasMatchingGameplayTag_self_CastInput' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_KickDestroyAndKnockActors, CallFunc_HasMatchingGameplayTag_ReturnValue) == 0x000420, "Member 'TestMechVehicle_C_KickDestroyAndKnockActors::CallFunc_HasMatchingGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_KickDestroyAndKnockActors, K2Node_DynamicCast_AsFort_Player_Pawn_Athena) == 0x000428, "Member 'TestMechVehicle_C_KickDestroyAndKnockActors::K2Node_DynamicCast_AsFort_Player_Pawn_Athena' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_KickDestroyAndKnockActors, K2Node_DynamicCast_bSuccess_5) == 0x000430, "Member 'TestMechVehicle_C_KickDestroyAndKnockActors::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_KickDestroyAndKnockActors, CallFunc_OnSameTeam_ReturnValue) == 0x000431, "Member 'TestMechVehicle_C_KickDestroyAndKnockActors::CallFunc_OnSameTeam_ReturnValue' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_KickDestroyAndKnockActors, CallFunc_IsInVehicle_ReturnValue) == 0x000432, "Member 'TestMechVehicle_C_KickDestroyAndKnockActors::CallFunc_IsInVehicle_ReturnValue' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_KickDestroyAndKnockActors, CallFunc_IsValid_ReturnValue_2) == 0x000433, "Member 'TestMechVehicle_C_KickDestroyAndKnockActors::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_KickDestroyAndKnockActors, CallFunc_Not_PreBool_ReturnValue) == 0x000434, "Member 'TestMechVehicle_C_KickDestroyAndKnockActors::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_KickDestroyAndKnockActors, CallFunc_GetVehicleActor_ReturnValue) == 0x000438, "Member 'TestMechVehicle_C_KickDestroyAndKnockActors::CallFunc_GetVehicleActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_KickDestroyAndKnockActors, CallFunc_KnockAwayDirection_LaunchVelocity_1) == 0x000440, "Member 'TestMechVehicle_C_KickDestroyAndKnockActors::CallFunc_KnockAwayDirection_LaunchVelocity_1' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_KickDestroyAndKnockActors, K2Node_DynamicCast_AsTest_Mech_Vehicle_1) == 0x000450, "Member 'TestMechVehicle_C_KickDestroyAndKnockActors::K2Node_DynamicCast_AsTest_Mech_Vehicle_1' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_KickDestroyAndKnockActors, K2Node_DynamicCast_bSuccess_6) == 0x000458, "Member 'TestMechVehicle_C_KickDestroyAndKnockActors::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_KickDestroyAndKnockActors, CallFunc_GetAbilitySystemComponent_ReturnValue_5) == 0x000460, "Member 'TestMechVehicle_C_KickDestroyAndKnockActors::CallFunc_GetAbilitySystemComponent_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_KickDestroyAndKnockActors, CallFunc_OnSameTeam_ReturnValue_1) == 0x000468, "Member 'TestMechVehicle_C_KickDestroyAndKnockActors::CallFunc_OnSameTeam_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_KickDestroyAndKnockActors, CallFunc_BP_ApplyGameplayEffectToTarget_ReturnValue_2) == 0x00046C, "Member 'TestMechVehicle_C_KickDestroyAndKnockActors::CallFunc_BP_ApplyGameplayEffectToTarget_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_KickDestroyAndKnockActors, CallFunc_IsInVehicle_ReturnValue_1) == 0x000474, "Member 'TestMechVehicle_C_KickDestroyAndKnockActors::CallFunc_IsInVehicle_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_KickDestroyAndKnockActors, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000475, "Member 'TestMechVehicle_C_KickDestroyAndKnockActors::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_KickDestroyAndKnockActors, CallFunc_NotEqual_ObjectObject_ReturnValue_1) == 0x000476, "Member 'TestMechVehicle_C_KickDestroyAndKnockActors::CallFunc_NotEqual_ObjectObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_KickDestroyAndKnockActors, CallFunc_NotEqual_ObjectObject_ReturnValue_2) == 0x000477, "Member 'TestMechVehicle_C_KickDestroyAndKnockActors::CallFunc_NotEqual_ObjectObject_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_KickDestroyAndKnockActors, CallFunc_NotEqual_ObjectObject_ReturnValue_3) == 0x000478, "Member 'TestMechVehicle_C_KickDestroyAndKnockActors::CallFunc_NotEqual_ObjectObject_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_KickDestroyAndKnockActors, CallFunc_BooleanAND_ReturnValue) == 0x000479, "Member 'TestMechVehicle_C_KickDestroyAndKnockActors::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_KickDestroyAndKnockActors, CallFunc_BooleanAND_ReturnValue_1) == 0x00047A, "Member 'TestMechVehicle_C_KickDestroyAndKnockActors::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_KickDestroyAndKnockActors, CallFunc_ApplyGlobalEnvironmentGameplayEffectToActor_ReturnValue) == 0x00047C, "Member 'TestMechVehicle_C_KickDestroyAndKnockActors::CallFunc_ApplyGlobalEnvironmentGameplayEffectToActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_KickDestroyAndKnockActors, CallFunc_Array_Contains_ReturnValue) == 0x000484, "Member 'TestMechVehicle_C_KickDestroyAndKnockActors::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_KickDestroyAndKnockActors, CallFunc_Array_Length_ReturnValue_1) == 0x000488, "Member 'TestMechVehicle_C_KickDestroyAndKnockActors::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_KickDestroyAndKnockActors, CallFunc_Less_IntInt_ReturnValue_1) == 0x00048C, "Member 'TestMechVehicle_C_KickDestroyAndKnockActors::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");

// Function TestMechVehicle.TestMechVehicle_C.JumpSlamDamageAndLaunch
// 0x0358 (0x0358 - 0x0000)
struct TestMechVehicle_C_JumpSlamDamageAndLaunch final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         CallFunc_Set_ToArray_Result;                       // 0x0010(0x0010)(ZeroConstructor, ReferenceParm)
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABuildingActor*                         K2Node_DynamicCast_AsBuilding_Actor;               // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortAIPawn*                            K2Node_DynamicCast_AsFort_AIPawn;                  // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CanDamageBuilding_ReturnValue;            // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4A[0x6];                                       // 0x004A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABuildingActor*                         CallFunc_CanDamageBuilding_Building_Actor;         // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue;    // 0x0058(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IFortVehicleInterface> K2Node_DynamicCast_AsFort_Vehicle_Interface;       // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerPawn*                        K2Node_DynamicCast_AsFort_Player_Pawn;             // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ATestMechVehicle_C*                     K2Node_DynamicCast_AsTest_Mech_Vehicle;            // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput;    // 0x0098(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue;       // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerPawnAthena*                  K2Node_DynamicCast_AsFort_Player_Pawn_Athena;      // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsInVehicle_ReturnValue;                  // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00BB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BC[0x4];                                       // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue_1;  // 0x00C0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInVehicle_ReturnValue_1;                // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C9[0x7];                                       // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetVehicleActor_ReturnValue;              // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ATestMechVehicle_C*                     K2Node_DynamicCast_AsTest_Mech_Vehicle_1;          // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x00E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue_1;      // 0x00E2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue_2;      // 0x00E3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E4[0x4];                                       // 0x00E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetVehicleActorPtr_ReturnValue;           // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F1[0x3];                                       // 0x00F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F9[0x3];                                       // 0x00F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0100(0x0010)(ConstParm, ZeroConstructor, ReferenceParm)
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue_2;  // 0x0110(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FActiveGameplayEffectHandle            CallFunc_BP_ApplyGameplayEffectToTarget_ReturnValue; // 0x0118(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayEffectContextHandle           K2Node_MakeStruct_GameplayEffectContextHandle;     // 0x0120(0x0018)()
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue_3;  // 0x0138(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 CallFunc_GetMechMesh_ReturnValue;                  // 0x0140(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue;            // 0x0148(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue_3;      // 0x0154(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_155[0x3];                                      // 0x0155(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0158(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckLineOfSightToActor_ReturnValue;      // 0x0164(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_165[0x3];                                      // 0x0165(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FActiveGameplayEffectHandle            CallFunc_ApplyGlobalEnvironmentGameplayEffectToActor_ReturnValue; // 0x0168(0x0008)(NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_KnockAwayDirection_LaunchVelocity;        // 0x0174(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_181[0x3];                                      // 0x0181(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0184(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_18C[0x4];                                      // 0x018C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item_1;                         // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue_4;  // 0x01A0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_OnSameTeam_ReturnValue;                   // 0x01A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x01AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_OnSameTeam_ReturnValue_1;                 // 0x01AB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_KnockAwayDirection_LaunchVelocity_1;      // 0x01AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x01B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FActiveGameplayEffectHandle            CallFunc_BP_ApplyGameplayEffectToTarget_ReturnValue_1; // 0x01BC(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x01C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1C5[0x3];                                      // 0x01C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x01CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1CD[0x3];                                      // 0x01CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue_5;  // 0x01D0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FActiveGameplayEffectHandle            CallFunc_BP_ApplyGameplayEffectToTarget_ReturnValue_2; // 0x01D8(0x0008)(NoDestructor, HasGetValueTypeHash)
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array;                            // 0x01E0(0x0010)(ConstParm, ZeroConstructor, ReferenceParm)
	struct FRotator                               CallFunc_GetControlRotation_ReturnValue;           // 0x01F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x01FC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0208(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x020C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0210(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0214(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0220(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22C[0x4];                                      // 0x022C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FHitResult>                     CallFunc_BoxTraceMultiForObjects_OutHits;          // 0x0230(0x0010)(ZeroConstructor, ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_BoxTraceMultiForObjects_ReturnValue;      // 0x0240(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_241[0x3];                                      // 0x0241(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0244(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_Array_Get_Item_2;                         // 0x0248(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x02D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x02D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x02D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D3[0x1];                                      // 0x02D3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x02D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x02D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x02DC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x02E8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x02F4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0300(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_30C[0x4];                                      // 0x030C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0310(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0318(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0320(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0328(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0330(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0334(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0338(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0344(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Set_Contains_ReturnValue;                 // 0x0350(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TestMechVehicle_C_JumpSlamDamageAndLaunch) == 0x000008, "Wrong alignment on TestMechVehicle_C_JumpSlamDamageAndLaunch");
static_assert(sizeof(TestMechVehicle_C_JumpSlamDamageAndLaunch) == 0x000358, "Wrong size on TestMechVehicle_C_JumpSlamDamageAndLaunch");
static_assert(offsetof(TestMechVehicle_C_JumpSlamDamageAndLaunch, Temp_int_Array_Index_Variable) == 0x000000, "Member 'TestMechVehicle_C_JumpSlamDamageAndLaunch::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_JumpSlamDamageAndLaunch, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'TestMechVehicle_C_JumpSlamDamageAndLaunch::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_JumpSlamDamageAndLaunch, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'TestMechVehicle_C_JumpSlamDamageAndLaunch::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_JumpSlamDamageAndLaunch, Temp_int_Array_Index_Variable_1) == 0x00000C, "Member 'TestMechVehicle_C_JumpSlamDamageAndLaunch::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_JumpSlamDamageAndLaunch, CallFunc_Set_ToArray_Result) == 0x000010, "Member 'TestMechVehicle_C_JumpSlamDamageAndLaunch::CallFunc_Set_ToArray_Result' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_JumpSlamDamageAndLaunch, CallFunc_Array_Get_Item) == 0x000020, "Member 'TestMechVehicle_C_JumpSlamDamageAndLaunch::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_JumpSlamDamageAndLaunch, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'TestMechVehicle_C_JumpSlamDamageAndLaunch::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_JumpSlamDamageAndLaunch, K2Node_DynamicCast_AsBuilding_Actor) == 0x000030, "Member 'TestMechVehicle_C_JumpSlamDamageAndLaunch::K2Node_DynamicCast_AsBuilding_Actor' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_JumpSlamDamageAndLaunch, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'TestMechVehicle_C_JumpSlamDamageAndLaunch::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_JumpSlamDamageAndLaunch, K2Node_DynamicCast_AsFort_AIPawn) == 0x000040, "Member 'TestMechVehicle_C_JumpSlamDamageAndLaunch::K2Node_DynamicCast_AsFort_AIPawn' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_JumpSlamDamageAndLaunch, K2Node_DynamicCast_bSuccess_1) == 0x000048, "Member 'TestMechVehicle_C_JumpSlamDamageAndLaunch::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_JumpSlamDamageAndLaunch, CallFunc_CanDamageBuilding_ReturnValue) == 0x000049, "Member 'TestMechVehicle_C_JumpSlamDamageAndLaunch::CallFunc_CanDamageBuilding_ReturnValue' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_JumpSlamDamageAndLaunch, CallFunc_CanDamageBuilding_Building_Actor) == 0x000050, "Member 'TestMechVehicle_C_JumpSlamDamageAndLaunch::CallFunc_CanDamageBuilding_Building_Actor' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_JumpSlamDamageAndLaunch, CallFunc_GetAbilitySystemComponent_ReturnValue) == 0x000058, "Member 'TestMechVehicle_C_JumpSlamDamageAndLaunch::CallFunc_GetAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_JumpSlamDamageAndLaunch, K2Node_DynamicCast_AsFort_Vehicle_Interface) == 0x000060, "Member 'TestMechVehicle_C_JumpSlamDamageAndLaunch::K2Node_DynamicCast_AsFort_Vehicle_Interface' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_JumpSlamDamageAndLaunch, K2Node_DynamicCast_bSuccess_2) == 0x000070, "Member 'TestMechVehicle_C_JumpSlamDamageAndLaunch::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_JumpSlamDamageAndLaunch, K2Node_DynamicCast_AsFort_Player_Pawn) == 0x000078, "Member 'TestMechVehicle_C_JumpSlamDamageAndLaunch::K2Node_DynamicCast_AsFort_Player_Pawn' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_JumpSlamDamageAndLaunch, K2Node_DynamicCast_bSuccess_3) == 0x000080, "Member 'TestMechVehicle_C_JumpSlamDamageAndLaunch::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_JumpSlamDamageAndLaunch, K2Node_DynamicCast_AsTest_Mech_Vehicle) == 0x000088, "Member 'TestMechVehicle_C_JumpSlamDamageAndLaunch::K2Node_DynamicCast_AsTest_Mech_Vehicle' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_JumpSlamDamageAndLaunch, K2Node_DynamicCast_bSuccess_4) == 0x000090, "Member 'TestMechVehicle_C_JumpSlamDamageAndLaunch::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_JumpSlamDamageAndLaunch, CallFunc_HasMatchingGameplayTag_self_CastInput) == 0x000098, "Member 'TestMechVehicle_C_JumpSlamDamageAndLaunch::CallFunc_HasMatchingGameplayTag_self_CastInput' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_JumpSlamDamageAndLaunch, CallFunc_HasMatchingGameplayTag_ReturnValue) == 0x0000A8, "Member 'TestMechVehicle_C_JumpSlamDamageAndLaunch::CallFunc_HasMatchingGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_JumpSlamDamageAndLaunch, K2Node_DynamicCast_AsFort_Player_Pawn_Athena) == 0x0000B0, "Member 'TestMechVehicle_C_JumpSlamDamageAndLaunch::K2Node_DynamicCast_AsFort_Player_Pawn_Athena' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_JumpSlamDamageAndLaunch, K2Node_DynamicCast_bSuccess_5) == 0x0000B8, "Member 'TestMechVehicle_C_JumpSlamDamageAndLaunch::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_JumpSlamDamageAndLaunch, CallFunc_IsInVehicle_ReturnValue) == 0x0000B9, "Member 'TestMechVehicle_C_JumpSlamDamageAndLaunch::CallFunc_IsInVehicle_ReturnValue' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_JumpSlamDamageAndLaunch, CallFunc_IsValid_ReturnValue) == 0x0000BA, "Member 'TestMechVehicle_C_JumpSlamDamageAndLaunch::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_JumpSlamDamageAndLaunch, CallFunc_Not_PreBool_ReturnValue) == 0x0000BB, "Member 'TestMechVehicle_C_JumpSlamDamageAndLaunch::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_JumpSlamDamageAndLaunch, CallFunc_GetAbilitySystemComponent_ReturnValue_1) == 0x0000C0, "Member 'TestMechVehicle_C_JumpSlamDamageAndLaunch::CallFunc_GetAbilitySystemComponent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_JumpSlamDamageAndLaunch, CallFunc_IsInVehicle_ReturnValue_1) == 0x0000C8, "Member 'TestMechVehicle_C_JumpSlamDamageAndLaunch::CallFunc_IsInVehicle_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_JumpSlamDamageAndLaunch, CallFunc_GetVehicleActor_ReturnValue) == 0x0000D0, "Member 'TestMechVehicle_C_JumpSlamDamageAndLaunch::CallFunc_GetVehicleActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_JumpSlamDamageAndLaunch, K2Node_DynamicCast_AsTest_Mech_Vehicle_1) == 0x0000D8, "Member 'TestMechVehicle_C_JumpSlamDamageAndLaunch::K2Node_DynamicCast_AsTest_Mech_Vehicle_1' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_JumpSlamDamageAndLaunch, K2Node_DynamicCast_bSuccess_6) == 0x0000E0, "Member 'TestMechVehicle_C_JumpSlamDamageAndLaunch::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_JumpSlamDamageAndLaunch, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x0000E1, "Member 'TestMechVehicle_C_JumpSlamDamageAndLaunch::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_JumpSlamDamageAndLaunch, CallFunc_NotEqual_ObjectObject_ReturnValue_1) == 0x0000E2, "Member 'TestMechVehicle_C_JumpSlamDamageAndLaunch::CallFunc_NotEqual_ObjectObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_JumpSlamDamageAndLaunch, CallFunc_NotEqual_ObjectObject_ReturnValue_2) == 0x0000E3, "Member 'TestMechVehicle_C_JumpSlamDamageAndLaunch::CallFunc_NotEqual_ObjectObject_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_JumpSlamDamageAndLaunch, CallFunc_GetVehicleActorPtr_ReturnValue) == 0x0000E8, "Member 'TestMechVehicle_C_JumpSlamDamageAndLaunch::CallFunc_GetVehicleActorPtr_ReturnValue' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_JumpSlamDamageAndLaunch, CallFunc_BooleanAND_ReturnValue) == 0x0000F0, "Member 'TestMechVehicle_C_JumpSlamDamageAndLaunch::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_JumpSlamDamageAndLaunch, CallFunc_Array_Length_ReturnValue_1) == 0x0000F4, "Member 'TestMechVehicle_C_JumpSlamDamageAndLaunch::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_JumpSlamDamageAndLaunch, CallFunc_BooleanAND_ReturnValue_1) == 0x0000F8, "Member 'TestMechVehicle_C_JumpSlamDamageAndLaunch::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_JumpSlamDamageAndLaunch, CallFunc_Array_Add_ReturnValue) == 0x0000FC, "Member 'TestMechVehicle_C_JumpSlamDamageAndLaunch::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_JumpSlamDamageAndLaunch, Temp_object_Variable) == 0x000100, "Member 'TestMechVehicle_C_JumpSlamDamageAndLaunch::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_JumpSlamDamageAndLaunch, CallFunc_GetAbilitySystemComponent_ReturnValue_2) == 0x000110, "Member 'TestMechVehicle_C_JumpSlamDamageAndLaunch::CallFunc_GetAbilitySystemComponent_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_JumpSlamDamageAndLaunch, CallFunc_BP_ApplyGameplayEffectToTarget_ReturnValue) == 0x000118, "Member 'TestMechVehicle_C_JumpSlamDamageAndLaunch::CallFunc_BP_ApplyGameplayEffectToTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_JumpSlamDamageAndLaunch, K2Node_MakeStruct_GameplayEffectContextHandle) == 0x000120, "Member 'TestMechVehicle_C_JumpSlamDamageAndLaunch::K2Node_MakeStruct_GameplayEffectContextHandle' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_JumpSlamDamageAndLaunch, CallFunc_GetAbilitySystemComponent_ReturnValue_3) == 0x000138, "Member 'TestMechVehicle_C_JumpSlamDamageAndLaunch::CallFunc_GetAbilitySystemComponent_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_JumpSlamDamageAndLaunch, CallFunc_GetMechMesh_ReturnValue) == 0x000140, "Member 'TestMechVehicle_C_JumpSlamDamageAndLaunch::CallFunc_GetMechMesh_ReturnValue' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_JumpSlamDamageAndLaunch, CallFunc_GetSocketLocation_ReturnValue) == 0x000148, "Member 'TestMechVehicle_C_JumpSlamDamageAndLaunch::CallFunc_GetSocketLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_JumpSlamDamageAndLaunch, CallFunc_NotEqual_ObjectObject_ReturnValue_3) == 0x000154, "Member 'TestMechVehicle_C_JumpSlamDamageAndLaunch::CallFunc_NotEqual_ObjectObject_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_JumpSlamDamageAndLaunch, CallFunc_Add_VectorVector_ReturnValue) == 0x000158, "Member 'TestMechVehicle_C_JumpSlamDamageAndLaunch::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_JumpSlamDamageAndLaunch, CallFunc_CheckLineOfSightToActor_ReturnValue) == 0x000164, "Member 'TestMechVehicle_C_JumpSlamDamageAndLaunch::CallFunc_CheckLineOfSightToActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_JumpSlamDamageAndLaunch, CallFunc_ApplyGlobalEnvironmentGameplayEffectToActor_ReturnValue) == 0x000168, "Member 'TestMechVehicle_C_JumpSlamDamageAndLaunch::CallFunc_ApplyGlobalEnvironmentGameplayEffectToActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_JumpSlamDamageAndLaunch, Temp_int_Loop_Counter_Variable_1) == 0x000170, "Member 'TestMechVehicle_C_JumpSlamDamageAndLaunch::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_JumpSlamDamageAndLaunch, CallFunc_KnockAwayDirection_LaunchVelocity) == 0x000174, "Member 'TestMechVehicle_C_JumpSlamDamageAndLaunch::CallFunc_KnockAwayDirection_LaunchVelocity' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_JumpSlamDamageAndLaunch, CallFunc_Less_IntInt_ReturnValue) == 0x000180, "Member 'TestMechVehicle_C_JumpSlamDamageAndLaunch::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_JumpSlamDamageAndLaunch, CallFunc_Add_IntInt_ReturnValue_1) == 0x000184, "Member 'TestMechVehicle_C_JumpSlamDamageAndLaunch::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_JumpSlamDamageAndLaunch, Temp_int_Array_Index_Variable_2) == 0x000188, "Member 'TestMechVehicle_C_JumpSlamDamageAndLaunch::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_JumpSlamDamageAndLaunch, CallFunc_Array_Get_Item_1) == 0x000190, "Member 'TestMechVehicle_C_JumpSlamDamageAndLaunch::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_JumpSlamDamageAndLaunch, CallFunc_GetController_ReturnValue) == 0x000198, "Member 'TestMechVehicle_C_JumpSlamDamageAndLaunch::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_JumpSlamDamageAndLaunch, CallFunc_GetAbilitySystemComponent_ReturnValue_4) == 0x0001A0, "Member 'TestMechVehicle_C_JumpSlamDamageAndLaunch::CallFunc_GetAbilitySystemComponent_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_JumpSlamDamageAndLaunch, CallFunc_IsValid_ReturnValue_1) == 0x0001A8, "Member 'TestMechVehicle_C_JumpSlamDamageAndLaunch::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_JumpSlamDamageAndLaunch, CallFunc_OnSameTeam_ReturnValue) == 0x0001A9, "Member 'TestMechVehicle_C_JumpSlamDamageAndLaunch::CallFunc_OnSameTeam_ReturnValue' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_JumpSlamDamageAndLaunch, CallFunc_IsValid_ReturnValue_2) == 0x0001AA, "Member 'TestMechVehicle_C_JumpSlamDamageAndLaunch::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_JumpSlamDamageAndLaunch, CallFunc_OnSameTeam_ReturnValue_1) == 0x0001AB, "Member 'TestMechVehicle_C_JumpSlamDamageAndLaunch::CallFunc_OnSameTeam_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_JumpSlamDamageAndLaunch, CallFunc_KnockAwayDirection_LaunchVelocity_1) == 0x0001AC, "Member 'TestMechVehicle_C_JumpSlamDamageAndLaunch::CallFunc_KnockAwayDirection_LaunchVelocity_1' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_JumpSlamDamageAndLaunch, Temp_int_Loop_Counter_Variable_2) == 0x0001B8, "Member 'TestMechVehicle_C_JumpSlamDamageAndLaunch::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_JumpSlamDamageAndLaunch, CallFunc_BP_ApplyGameplayEffectToTarget_ReturnValue_1) == 0x0001BC, "Member 'TestMechVehicle_C_JumpSlamDamageAndLaunch::CallFunc_BP_ApplyGameplayEffectToTarget_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_JumpSlamDamageAndLaunch, CallFunc_Less_IntInt_ReturnValue_1) == 0x0001C4, "Member 'TestMechVehicle_C_JumpSlamDamageAndLaunch::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_JumpSlamDamageAndLaunch, CallFunc_Add_IntInt_ReturnValue_2) == 0x0001C8, "Member 'TestMechVehicle_C_JumpSlamDamageAndLaunch::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_JumpSlamDamageAndLaunch, CallFunc_IsValid_ReturnValue_3) == 0x0001CC, "Member 'TestMechVehicle_C_JumpSlamDamageAndLaunch::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_JumpSlamDamageAndLaunch, CallFunc_GetAbilitySystemComponent_ReturnValue_5) == 0x0001D0, "Member 'TestMechVehicle_C_JumpSlamDamageAndLaunch::CallFunc_GetAbilitySystemComponent_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_JumpSlamDamageAndLaunch, CallFunc_BP_ApplyGameplayEffectToTarget_ReturnValue_2) == 0x0001D8, "Member 'TestMechVehicle_C_JumpSlamDamageAndLaunch::CallFunc_BP_ApplyGameplayEffectToTarget_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_JumpSlamDamageAndLaunch, K2Node_MakeArray_Array) == 0x0001E0, "Member 'TestMechVehicle_C_JumpSlamDamageAndLaunch::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_JumpSlamDamageAndLaunch, CallFunc_GetControlRotation_ReturnValue) == 0x0001F0, "Member 'TestMechVehicle_C_JumpSlamDamageAndLaunch::CallFunc_GetControlRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_JumpSlamDamageAndLaunch, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0001FC, "Member 'TestMechVehicle_C_JumpSlamDamageAndLaunch::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_JumpSlamDamageAndLaunch, CallFunc_BreakRotator_Roll) == 0x000208, "Member 'TestMechVehicle_C_JumpSlamDamageAndLaunch::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_JumpSlamDamageAndLaunch, CallFunc_BreakRotator_Pitch) == 0x00020C, "Member 'TestMechVehicle_C_JumpSlamDamageAndLaunch::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_JumpSlamDamageAndLaunch, CallFunc_BreakRotator_Yaw) == 0x000210, "Member 'TestMechVehicle_C_JumpSlamDamageAndLaunch::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_JumpSlamDamageAndLaunch, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000214, "Member 'TestMechVehicle_C_JumpSlamDamageAndLaunch::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_JumpSlamDamageAndLaunch, CallFunc_MakeRotator_ReturnValue) == 0x000220, "Member 'TestMechVehicle_C_JumpSlamDamageAndLaunch::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_JumpSlamDamageAndLaunch, CallFunc_BoxTraceMultiForObjects_OutHits) == 0x000230, "Member 'TestMechVehicle_C_JumpSlamDamageAndLaunch::CallFunc_BoxTraceMultiForObjects_OutHits' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_JumpSlamDamageAndLaunch, CallFunc_BoxTraceMultiForObjects_ReturnValue) == 0x000240, "Member 'TestMechVehicle_C_JumpSlamDamageAndLaunch::CallFunc_BoxTraceMultiForObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_JumpSlamDamageAndLaunch, CallFunc_Array_Length_ReturnValue_2) == 0x000244, "Member 'TestMechVehicle_C_JumpSlamDamageAndLaunch::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_JumpSlamDamageAndLaunch, CallFunc_Array_Get_Item_2) == 0x000248, "Member 'TestMechVehicle_C_JumpSlamDamageAndLaunch::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_JumpSlamDamageAndLaunch, CallFunc_Less_IntInt_ReturnValue_2) == 0x0002D0, "Member 'TestMechVehicle_C_JumpSlamDamageAndLaunch::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_JumpSlamDamageAndLaunch, CallFunc_BreakHitResult_bBlockingHit) == 0x0002D1, "Member 'TestMechVehicle_C_JumpSlamDamageAndLaunch::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_JumpSlamDamageAndLaunch, CallFunc_BreakHitResult_bInitialOverlap) == 0x0002D2, "Member 'TestMechVehicle_C_JumpSlamDamageAndLaunch::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_JumpSlamDamageAndLaunch, CallFunc_BreakHitResult_Time) == 0x0002D4, "Member 'TestMechVehicle_C_JumpSlamDamageAndLaunch::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_JumpSlamDamageAndLaunch, CallFunc_BreakHitResult_Distance) == 0x0002D8, "Member 'TestMechVehicle_C_JumpSlamDamageAndLaunch::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_JumpSlamDamageAndLaunch, CallFunc_BreakHitResult_Location) == 0x0002DC, "Member 'TestMechVehicle_C_JumpSlamDamageAndLaunch::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_JumpSlamDamageAndLaunch, CallFunc_BreakHitResult_ImpactPoint) == 0x0002E8, "Member 'TestMechVehicle_C_JumpSlamDamageAndLaunch::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_JumpSlamDamageAndLaunch, CallFunc_BreakHitResult_Normal) == 0x0002F4, "Member 'TestMechVehicle_C_JumpSlamDamageAndLaunch::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_JumpSlamDamageAndLaunch, CallFunc_BreakHitResult_ImpactNormal) == 0x000300, "Member 'TestMechVehicle_C_JumpSlamDamageAndLaunch::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_JumpSlamDamageAndLaunch, CallFunc_BreakHitResult_PhysMat) == 0x000310, "Member 'TestMechVehicle_C_JumpSlamDamageAndLaunch::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_JumpSlamDamageAndLaunch, CallFunc_BreakHitResult_HitActor) == 0x000318, "Member 'TestMechVehicle_C_JumpSlamDamageAndLaunch::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_JumpSlamDamageAndLaunch, CallFunc_BreakHitResult_HitComponent) == 0x000320, "Member 'TestMechVehicle_C_JumpSlamDamageAndLaunch::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_JumpSlamDamageAndLaunch, CallFunc_BreakHitResult_HitBoneName) == 0x000328, "Member 'TestMechVehicle_C_JumpSlamDamageAndLaunch::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_JumpSlamDamageAndLaunch, CallFunc_BreakHitResult_HitItem) == 0x000330, "Member 'TestMechVehicle_C_JumpSlamDamageAndLaunch::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_JumpSlamDamageAndLaunch, CallFunc_BreakHitResult_FaceIndex) == 0x000334, "Member 'TestMechVehicle_C_JumpSlamDamageAndLaunch::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_JumpSlamDamageAndLaunch, CallFunc_BreakHitResult_TraceStart) == 0x000338, "Member 'TestMechVehicle_C_JumpSlamDamageAndLaunch::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_JumpSlamDamageAndLaunch, CallFunc_BreakHitResult_TraceEnd) == 0x000344, "Member 'TestMechVehicle_C_JumpSlamDamageAndLaunch::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_JumpSlamDamageAndLaunch, CallFunc_Set_Contains_ReturnValue) == 0x000350, "Member 'TestMechVehicle_C_JumpSlamDamageAndLaunch::CallFunc_Set_Contains_ReturnValue' has a wrong offset!");

// Function TestMechVehicle.TestMechVehicle_C.OnRep_ChargeJumping
// 0x00B8 (0x00B8 - 0x0000)
struct TestMechVehicle_C_OnRep_ChargeJumping final
{
public:
	struct FGameplayCueParameters                 CallFunc_GC_Params_ReturnValue;                    // 0x0000(0x00B8)(ContainsInstancedReference)
};
static_assert(alignof(TestMechVehicle_C_OnRep_ChargeJumping) == 0x000008, "Wrong alignment on TestMechVehicle_C_OnRep_ChargeJumping");
static_assert(sizeof(TestMechVehicle_C_OnRep_ChargeJumping) == 0x0000B8, "Wrong size on TestMechVehicle_C_OnRep_ChargeJumping");
static_assert(offsetof(TestMechVehicle_C_OnRep_ChargeJumping, CallFunc_GC_Params_ReturnValue) == 0x000000, "Member 'TestMechVehicle_C_OnRep_ChargeJumping::CallFunc_GC_Params_ReturnValue' has a wrong offset!");

// Function TestMechVehicle.TestMechVehicle_C.SendDamageStateToMaterial
// 0x0004 (0x0004 - 0x0000)
struct TestMechVehicle_C_SendDamageStateToMaterial final
{
public:
	float                                         ParameterValue;                                    // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TestMechVehicle_C_SendDamageStateToMaterial) == 0x000004, "Wrong alignment on TestMechVehicle_C_SendDamageStateToMaterial");
static_assert(sizeof(TestMechVehicle_C_SendDamageStateToMaterial) == 0x000004, "Wrong size on TestMechVehicle_C_SendDamageStateToMaterial");
static_assert(offsetof(TestMechVehicle_C_SendDamageStateToMaterial, ParameterValue) == 0x000000, "Member 'TestMechVehicle_C_SendDamageStateToMaterial::ParameterValue' has a wrong offset!");

// Function TestMechVehicle.TestMechVehicle_C.IsGunnerShieldActive
// 0x0003 (0x0003 - 0x0000)
struct TestMechVehicle_C_IsGunnerShieldActive final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsShieldActive_Return;                    // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TestMechVehicle_C_IsGunnerShieldActive) == 0x000001, "Wrong alignment on TestMechVehicle_C_IsGunnerShieldActive");
static_assert(sizeof(TestMechVehicle_C_IsGunnerShieldActive) == 0x000003, "Wrong size on TestMechVehicle_C_IsGunnerShieldActive");
static_assert(offsetof(TestMechVehicle_C_IsGunnerShieldActive, ReturnValue) == 0x000000, "Member 'TestMechVehicle_C_IsGunnerShieldActive::ReturnValue' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_IsGunnerShieldActive, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'TestMechVehicle_C_IsGunnerShieldActive::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(TestMechVehicle_C_IsGunnerShieldActive, CallFunc_IsShieldActive_Return) == 0x000002, "Member 'TestMechVehicle_C_IsGunnerShieldActive::CallFunc_IsShieldActive_Return' has a wrong offset!");

// Function TestMechVehicle.TestMechVehicle_C.GetGroundSlamBool
// 0x0001 (0x0001 - 0x0000)
struct TestMechVehicle_C_GetGroundSlamBool final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TestMechVehicle_C_GetGroundSlamBool) == 0x000001, "Wrong alignment on TestMechVehicle_C_GetGroundSlamBool");
static_assert(sizeof(TestMechVehicle_C_GetGroundSlamBool) == 0x000001, "Wrong size on TestMechVehicle_C_GetGroundSlamBool");
static_assert(offsetof(TestMechVehicle_C_GetGroundSlamBool, ReturnValue) == 0x000000, "Member 'TestMechVehicle_C_GetGroundSlamBool::ReturnValue' has a wrong offset!");

// Function TestMechVehicle.TestMechVehicle_C.GetChargeJumpingFloat
// 0x0004 (0x0004 - 0x0000)
struct TestMechVehicle_C_GetChargeJumpingFloat final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TestMechVehicle_C_GetChargeJumpingFloat) == 0x000004, "Wrong alignment on TestMechVehicle_C_GetChargeJumpingFloat");
static_assert(sizeof(TestMechVehicle_C_GetChargeJumpingFloat) == 0x000004, "Wrong size on TestMechVehicle_C_GetChargeJumpingFloat");
static_assert(offsetof(TestMechVehicle_C_GetChargeJumpingFloat, ReturnValue) == 0x000000, "Member 'TestMechVehicle_C_GetChargeJumpingFloat::ReturnValue' has a wrong offset!");

// Function TestMechVehicle.TestMechVehicle_C.OnRep_SetJumpApex
// 0x000C (0x000C - 0x0000)
struct TestMechVehicle_C_OnRep_SetJumpApex final
{
public:
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0000(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TestMechVehicle_C_OnRep_SetJumpApex) == 0x000004, "Wrong alignment on TestMechVehicle_C_OnRep_SetJumpApex");
static_assert(sizeof(TestMechVehicle_C_OnRep_SetJumpApex) == 0x00000C, "Wrong size on TestMechVehicle_C_OnRep_SetJumpApex");
static_assert(offsetof(TestMechVehicle_C_OnRep_SetJumpApex, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000000, "Member 'TestMechVehicle_C_OnRep_SetJumpApex::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");

}

