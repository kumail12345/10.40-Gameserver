#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ChallengeListEntry_Challenge

#include "Basic.hpp"

#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function ChallengeListEntry_Challenge.ChallengeListEntry_Challenge_C.OnChallengeInfoSet
// 0x0004 (0x0004 - 0x0000)
struct ChallengeListEntry_Challenge_C_OnChallengeInfoSet final
{
public:
	bool                                          bIsComplete;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bIsLocked;                                         // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bCompact;                                          // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          HideRewards;                                       // 0x0003(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ChallengeListEntry_Challenge_C_OnChallengeInfoSet) == 0x000001, "Wrong alignment on ChallengeListEntry_Challenge_C_OnChallengeInfoSet");
static_assert(sizeof(ChallengeListEntry_Challenge_C_OnChallengeInfoSet) == 0x000004, "Wrong size on ChallengeListEntry_Challenge_C_OnChallengeInfoSet");
static_assert(offsetof(ChallengeListEntry_Challenge_C_OnChallengeInfoSet, bIsComplete) == 0x000000, "Member 'ChallengeListEntry_Challenge_C_OnChallengeInfoSet::bIsComplete' has a wrong offset!");
static_assert(offsetof(ChallengeListEntry_Challenge_C_OnChallengeInfoSet, bIsLocked) == 0x000001, "Member 'ChallengeListEntry_Challenge_C_OnChallengeInfoSet::bIsLocked' has a wrong offset!");
static_assert(offsetof(ChallengeListEntry_Challenge_C_OnChallengeInfoSet, bCompact) == 0x000002, "Member 'ChallengeListEntry_Challenge_C_OnChallengeInfoSet::bCompact' has a wrong offset!");
static_assert(offsetof(ChallengeListEntry_Challenge_C_OnChallengeInfoSet, HideRewards) == 0x000003, "Member 'ChallengeListEntry_Challenge_C_OnChallengeInfoSet::HideRewards' has a wrong offset!");

// Function ChallengeListEntry_Challenge.ChallengeListEntry_Challenge_C.OnPartyAssistEnabledChanged
// 0x0001 (0x0001 - 0x0000)
struct ChallengeListEntry_Challenge_C_OnPartyAssistEnabledChanged final
{
public:
	bool                                          bIsPartyAssistEnabled;                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ChallengeListEntry_Challenge_C_OnPartyAssistEnabledChanged) == 0x000001, "Wrong alignment on ChallengeListEntry_Challenge_C_OnPartyAssistEnabledChanged");
static_assert(sizeof(ChallengeListEntry_Challenge_C_OnPartyAssistEnabledChanged) == 0x000001, "Wrong size on ChallengeListEntry_Challenge_C_OnPartyAssistEnabledChanged");
static_assert(offsetof(ChallengeListEntry_Challenge_C_OnPartyAssistEnabledChanged, bIsPartyAssistEnabled) == 0x000000, "Member 'ChallengeListEntry_Challenge_C_OnPartyAssistEnabledChanged::bIsPartyAssistEnabled' has a wrong offset!");

// Function ChallengeListEntry_Challenge.ChallengeListEntry_Challenge_C.BndEvt__Button_PartyAssist_K2Node_ComponentBoundEvent_2_CommonButtonClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct ChallengeListEntry_Challenge_C_BndEvt__Button_PartyAssist_K2Node_ComponentBoundEvent_2_CommonButtonClicked__DelegateSignature final
{
public:
	class UCommonButton*                          Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ChallengeListEntry_Challenge_C_BndEvt__Button_PartyAssist_K2Node_ComponentBoundEvent_2_CommonButtonClicked__DelegateSignature) == 0x000008, "Wrong alignment on ChallengeListEntry_Challenge_C_BndEvt__Button_PartyAssist_K2Node_ComponentBoundEvent_2_CommonButtonClicked__DelegateSignature");
static_assert(sizeof(ChallengeListEntry_Challenge_C_BndEvt__Button_PartyAssist_K2Node_ComponentBoundEvent_2_CommonButtonClicked__DelegateSignature) == 0x000008, "Wrong size on ChallengeListEntry_Challenge_C_BndEvt__Button_PartyAssist_K2Node_ComponentBoundEvent_2_CommonButtonClicked__DelegateSignature");
static_assert(offsetof(ChallengeListEntry_Challenge_C_BndEvt__Button_PartyAssist_K2Node_ComponentBoundEvent_2_CommonButtonClicked__DelegateSignature, Button) == 0x000000, "Member 'ChallengeListEntry_Challenge_C_BndEvt__Button_PartyAssist_K2Node_ComponentBoundEvent_2_CommonButtonClicked__DelegateSignature::Button' has a wrong offset!");

// Function ChallengeListEntry_Challenge.ChallengeListEntry_Challenge_C.BndEvt__Button_PartyAssist_K2Node_ComponentBoundEvent_3_CommonSelectedStateChanged__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ChallengeListEntry_Challenge_C_BndEvt__Button_PartyAssist_K2Node_ComponentBoundEvent_3_CommonSelectedStateChanged__DelegateSignature final
{
public:
	class UCommonButton*                          Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Selected;                                          // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ChallengeListEntry_Challenge_C_BndEvt__Button_PartyAssist_K2Node_ComponentBoundEvent_3_CommonSelectedStateChanged__DelegateSignature) == 0x000008, "Wrong alignment on ChallengeListEntry_Challenge_C_BndEvt__Button_PartyAssist_K2Node_ComponentBoundEvent_3_CommonSelectedStateChanged__DelegateSignature");
static_assert(sizeof(ChallengeListEntry_Challenge_C_BndEvt__Button_PartyAssist_K2Node_ComponentBoundEvent_3_CommonSelectedStateChanged__DelegateSignature) == 0x000010, "Wrong size on ChallengeListEntry_Challenge_C_BndEvt__Button_PartyAssist_K2Node_ComponentBoundEvent_3_CommonSelectedStateChanged__DelegateSignature");
static_assert(offsetof(ChallengeListEntry_Challenge_C_BndEvt__Button_PartyAssist_K2Node_ComponentBoundEvent_3_CommonSelectedStateChanged__DelegateSignature, Button) == 0x000000, "Member 'ChallengeListEntry_Challenge_C_BndEvt__Button_PartyAssist_K2Node_ComponentBoundEvent_3_CommonSelectedStateChanged__DelegateSignature::Button' has a wrong offset!");
static_assert(offsetof(ChallengeListEntry_Challenge_C_BndEvt__Button_PartyAssist_K2Node_ComponentBoundEvent_3_CommonSelectedStateChanged__DelegateSignature, Selected) == 0x000008, "Member 'ChallengeListEntry_Challenge_C_BndEvt__Button_PartyAssist_K2Node_ComponentBoundEvent_3_CommonSelectedStateChanged__DelegateSignature::Selected' has a wrong offset!");

// Function ChallengeListEntry_Challenge.ChallengeListEntry_Challenge_C.ExecuteUbergraph_ChallengeListEntry_Challenge
// 0x0098 (0x0098 - 0x0000)
struct ChallengeListEntry_Challenge_C_ExecuteUbergraph_ChallengeListEntry_Challenge final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_4;                              // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_5;                              // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_6;                              // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_5;                              // 0x0026(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_7;                              // 0x0027(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_8;                              // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bIsComplete;                          // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bIsLocked;                            // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bCompact;                             // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_HideRewards;                          // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B[0x5];                                       // 0x003B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue;         // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_2;                           // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bIsPartyAssistEnabled;                // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default_3;                           // 0x004D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_9;                              // 0x004E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_6;                              // 0x004F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_10;                             // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_4;                           // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52[0x2];                                       // 0x0052(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default_5;                           // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_6;                           // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationTimeRange_ReturnValue;       // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCommonButton*                          K2Node_ComponentBoundEvent_Button_1;               // 0x0068(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_11;                             // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonButton*                          K2Node_ComponentBoundEvent_Button;                 // 0x0078(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_Selected;               // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_7;                              // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default_7;                           // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ChallengeListEntry_Challenge_C_ExecuteUbergraph_ChallengeListEntry_Challenge) == 0x000008, "Wrong alignment on ChallengeListEntry_Challenge_C_ExecuteUbergraph_ChallengeListEntry_Challenge");
static_assert(sizeof(ChallengeListEntry_Challenge_C_ExecuteUbergraph_ChallengeListEntry_Challenge) == 0x000098, "Wrong size on ChallengeListEntry_Challenge_C_ExecuteUbergraph_ChallengeListEntry_Challenge");
static_assert(offsetof(ChallengeListEntry_Challenge_C_ExecuteUbergraph_ChallengeListEntry_Challenge, EntryPoint) == 0x000000, "Member 'ChallengeListEntry_Challenge_C_ExecuteUbergraph_ChallengeListEntry_Challenge::EntryPoint' has a wrong offset!");
static_assert(offsetof(ChallengeListEntry_Challenge_C_ExecuteUbergraph_ChallengeListEntry_Challenge, Temp_byte_Variable) == 0x000004, "Member 'ChallengeListEntry_Challenge_C_ExecuteUbergraph_ChallengeListEntry_Challenge::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(ChallengeListEntry_Challenge_C_ExecuteUbergraph_ChallengeListEntry_Challenge, Temp_bool_Variable) == 0x000005, "Member 'ChallengeListEntry_Challenge_C_ExecuteUbergraph_ChallengeListEntry_Challenge::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ChallengeListEntry_Challenge_C_ExecuteUbergraph_ChallengeListEntry_Challenge, Temp_byte_Variable_1) == 0x000006, "Member 'ChallengeListEntry_Challenge_C_ExecuteUbergraph_ChallengeListEntry_Challenge::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(ChallengeListEntry_Challenge_C_ExecuteUbergraph_ChallengeListEntry_Challenge, Temp_byte_Variable_2) == 0x000007, "Member 'ChallengeListEntry_Challenge_C_ExecuteUbergraph_ChallengeListEntry_Challenge::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(ChallengeListEntry_Challenge_C_ExecuteUbergraph_ChallengeListEntry_Challenge, Temp_bool_Variable_1) == 0x000008, "Member 'ChallengeListEntry_Challenge_C_ExecuteUbergraph_ChallengeListEntry_Challenge::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(ChallengeListEntry_Challenge_C_ExecuteUbergraph_ChallengeListEntry_Challenge, Temp_float_Variable) == 0x00000C, "Member 'ChallengeListEntry_Challenge_C_ExecuteUbergraph_ChallengeListEntry_Challenge::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(ChallengeListEntry_Challenge_C_ExecuteUbergraph_ChallengeListEntry_Challenge, Temp_float_Variable_1) == 0x000010, "Member 'ChallengeListEntry_Challenge_C_ExecuteUbergraph_ChallengeListEntry_Challenge::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(ChallengeListEntry_Challenge_C_ExecuteUbergraph_ChallengeListEntry_Challenge, Temp_bool_Variable_2) == 0x000014, "Member 'ChallengeListEntry_Challenge_C_ExecuteUbergraph_ChallengeListEntry_Challenge::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(ChallengeListEntry_Challenge_C_ExecuteUbergraph_ChallengeListEntry_Challenge, Temp_int_Variable) == 0x000018, "Member 'ChallengeListEntry_Challenge_C_ExecuteUbergraph_ChallengeListEntry_Challenge::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(ChallengeListEntry_Challenge_C_ExecuteUbergraph_ChallengeListEntry_Challenge, Temp_int_Variable_1) == 0x00001C, "Member 'ChallengeListEntry_Challenge_C_ExecuteUbergraph_ChallengeListEntry_Challenge::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(ChallengeListEntry_Challenge_C_ExecuteUbergraph_ChallengeListEntry_Challenge, Temp_bool_Variable_3) == 0x000020, "Member 'ChallengeListEntry_Challenge_C_ExecuteUbergraph_ChallengeListEntry_Challenge::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(ChallengeListEntry_Challenge_C_ExecuteUbergraph_ChallengeListEntry_Challenge, Temp_byte_Variable_3) == 0x000021, "Member 'ChallengeListEntry_Challenge_C_ExecuteUbergraph_ChallengeListEntry_Challenge::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(ChallengeListEntry_Challenge_C_ExecuteUbergraph_ChallengeListEntry_Challenge, Temp_byte_Variable_4) == 0x000022, "Member 'ChallengeListEntry_Challenge_C_ExecuteUbergraph_ChallengeListEntry_Challenge::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(ChallengeListEntry_Challenge_C_ExecuteUbergraph_ChallengeListEntry_Challenge, Temp_bool_Variable_4) == 0x000023, "Member 'ChallengeListEntry_Challenge_C_ExecuteUbergraph_ChallengeListEntry_Challenge::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(ChallengeListEntry_Challenge_C_ExecuteUbergraph_ChallengeListEntry_Challenge, Temp_byte_Variable_5) == 0x000024, "Member 'ChallengeListEntry_Challenge_C_ExecuteUbergraph_ChallengeListEntry_Challenge::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(ChallengeListEntry_Challenge_C_ExecuteUbergraph_ChallengeListEntry_Challenge, Temp_byte_Variable_6) == 0x000025, "Member 'ChallengeListEntry_Challenge_C_ExecuteUbergraph_ChallengeListEntry_Challenge::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(ChallengeListEntry_Challenge_C_ExecuteUbergraph_ChallengeListEntry_Challenge, Temp_bool_Variable_5) == 0x000026, "Member 'ChallengeListEntry_Challenge_C_ExecuteUbergraph_ChallengeListEntry_Challenge::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(ChallengeListEntry_Challenge_C_ExecuteUbergraph_ChallengeListEntry_Challenge, Temp_byte_Variable_7) == 0x000027, "Member 'ChallengeListEntry_Challenge_C_ExecuteUbergraph_ChallengeListEntry_Challenge::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(ChallengeListEntry_Challenge_C_ExecuteUbergraph_ChallengeListEntry_Challenge, Temp_byte_Variable_8) == 0x000028, "Member 'ChallengeListEntry_Challenge_C_ExecuteUbergraph_ChallengeListEntry_Challenge::Temp_byte_Variable_8' has a wrong offset!");
static_assert(offsetof(ChallengeListEntry_Challenge_C_ExecuteUbergraph_ChallengeListEntry_Challenge, K2Node_Event_bIsComplete) == 0x000029, "Member 'ChallengeListEntry_Challenge_C_ExecuteUbergraph_ChallengeListEntry_Challenge::K2Node_Event_bIsComplete' has a wrong offset!");
static_assert(offsetof(ChallengeListEntry_Challenge_C_ExecuteUbergraph_ChallengeListEntry_Challenge, K2Node_Event_bIsLocked) == 0x00002A, "Member 'ChallengeListEntry_Challenge_C_ExecuteUbergraph_ChallengeListEntry_Challenge::K2Node_Event_bIsLocked' has a wrong offset!");
static_assert(offsetof(ChallengeListEntry_Challenge_C_ExecuteUbergraph_ChallengeListEntry_Challenge, K2Node_Event_bCompact) == 0x00002B, "Member 'ChallengeListEntry_Challenge_C_ExecuteUbergraph_ChallengeListEntry_Challenge::K2Node_Event_bCompact' has a wrong offset!");
static_assert(offsetof(ChallengeListEntry_Challenge_C_ExecuteUbergraph_ChallengeListEntry_Challenge, K2Node_Event_HideRewards) == 0x00002C, "Member 'ChallengeListEntry_Challenge_C_ExecuteUbergraph_ChallengeListEntry_Challenge::K2Node_Event_HideRewards' has a wrong offset!");
static_assert(offsetof(ChallengeListEntry_Challenge_C_ExecuteUbergraph_ChallengeListEntry_Challenge, CallFunc_PlayAnimationForward_ReturnValue) == 0x000030, "Member 'ChallengeListEntry_Challenge_C_ExecuteUbergraph_ChallengeListEntry_Challenge::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChallengeListEntry_Challenge_C_ExecuteUbergraph_ChallengeListEntry_Challenge, K2Node_Select_Default) == 0x000038, "Member 'ChallengeListEntry_Challenge_C_ExecuteUbergraph_ChallengeListEntry_Challenge::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(ChallengeListEntry_Challenge_C_ExecuteUbergraph_ChallengeListEntry_Challenge, K2Node_Select_Default_1) == 0x000039, "Member 'ChallengeListEntry_Challenge_C_ExecuteUbergraph_ChallengeListEntry_Challenge::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(ChallengeListEntry_Challenge_C_ExecuteUbergraph_ChallengeListEntry_Challenge, CallFunc_BooleanOR_ReturnValue) == 0x00003A, "Member 'ChallengeListEntry_Challenge_C_ExecuteUbergraph_ChallengeListEntry_Challenge::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChallengeListEntry_Challenge_C_ExecuteUbergraph_ChallengeListEntry_Challenge, CallFunc_PlayAnimationReverse_ReturnValue) == 0x000040, "Member 'ChallengeListEntry_Challenge_C_ExecuteUbergraph_ChallengeListEntry_Challenge::CallFunc_PlayAnimationReverse_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChallengeListEntry_Challenge_C_ExecuteUbergraph_ChallengeListEntry_Challenge, K2Node_Select_Default_2) == 0x000048, "Member 'ChallengeListEntry_Challenge_C_ExecuteUbergraph_ChallengeListEntry_Challenge::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(ChallengeListEntry_Challenge_C_ExecuteUbergraph_ChallengeListEntry_Challenge, K2Node_Event_bIsPartyAssistEnabled) == 0x00004C, "Member 'ChallengeListEntry_Challenge_C_ExecuteUbergraph_ChallengeListEntry_Challenge::K2Node_Event_bIsPartyAssistEnabled' has a wrong offset!");
static_assert(offsetof(ChallengeListEntry_Challenge_C_ExecuteUbergraph_ChallengeListEntry_Challenge, K2Node_Select_Default_3) == 0x00004D, "Member 'ChallengeListEntry_Challenge_C_ExecuteUbergraph_ChallengeListEntry_Challenge::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(ChallengeListEntry_Challenge_C_ExecuteUbergraph_ChallengeListEntry_Challenge, Temp_byte_Variable_9) == 0x00004E, "Member 'ChallengeListEntry_Challenge_C_ExecuteUbergraph_ChallengeListEntry_Challenge::Temp_byte_Variable_9' has a wrong offset!");
static_assert(offsetof(ChallengeListEntry_Challenge_C_ExecuteUbergraph_ChallengeListEntry_Challenge, Temp_bool_Variable_6) == 0x00004F, "Member 'ChallengeListEntry_Challenge_C_ExecuteUbergraph_ChallengeListEntry_Challenge::Temp_bool_Variable_6' has a wrong offset!");
static_assert(offsetof(ChallengeListEntry_Challenge_C_ExecuteUbergraph_ChallengeListEntry_Challenge, Temp_byte_Variable_10) == 0x000050, "Member 'ChallengeListEntry_Challenge_C_ExecuteUbergraph_ChallengeListEntry_Challenge::Temp_byte_Variable_10' has a wrong offset!");
static_assert(offsetof(ChallengeListEntry_Challenge_C_ExecuteUbergraph_ChallengeListEntry_Challenge, K2Node_Select_Default_4) == 0x000051, "Member 'ChallengeListEntry_Challenge_C_ExecuteUbergraph_ChallengeListEntry_Challenge::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(ChallengeListEntry_Challenge_C_ExecuteUbergraph_ChallengeListEntry_Challenge, K2Node_Select_Default_5) == 0x000054, "Member 'ChallengeListEntry_Challenge_C_ExecuteUbergraph_ChallengeListEntry_Challenge::K2Node_Select_Default_5' has a wrong offset!");
static_assert(offsetof(ChallengeListEntry_Challenge_C_ExecuteUbergraph_ChallengeListEntry_Challenge, K2Node_Select_Default_6) == 0x000058, "Member 'ChallengeListEntry_Challenge_C_ExecuteUbergraph_ChallengeListEntry_Challenge::K2Node_Select_Default_6' has a wrong offset!");
static_assert(offsetof(ChallengeListEntry_Challenge_C_ExecuteUbergraph_ChallengeListEntry_Challenge, CallFunc_PlayAnimationTimeRange_ReturnValue) == 0x000060, "Member 'ChallengeListEntry_Challenge_C_ExecuteUbergraph_ChallengeListEntry_Challenge::CallFunc_PlayAnimationTimeRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChallengeListEntry_Challenge_C_ExecuteUbergraph_ChallengeListEntry_Challenge, K2Node_ComponentBoundEvent_Button_1) == 0x000068, "Member 'ChallengeListEntry_Challenge_C_ExecuteUbergraph_ChallengeListEntry_Challenge::K2Node_ComponentBoundEvent_Button_1' has a wrong offset!");
static_assert(offsetof(ChallengeListEntry_Challenge_C_ExecuteUbergraph_ChallengeListEntry_Challenge, Temp_byte_Variable_11) == 0x000070, "Member 'ChallengeListEntry_Challenge_C_ExecuteUbergraph_ChallengeListEntry_Challenge::Temp_byte_Variable_11' has a wrong offset!");
static_assert(offsetof(ChallengeListEntry_Challenge_C_ExecuteUbergraph_ChallengeListEntry_Challenge, K2Node_ComponentBoundEvent_Button) == 0x000078, "Member 'ChallengeListEntry_Challenge_C_ExecuteUbergraph_ChallengeListEntry_Challenge::K2Node_ComponentBoundEvent_Button' has a wrong offset!");
static_assert(offsetof(ChallengeListEntry_Challenge_C_ExecuteUbergraph_ChallengeListEntry_Challenge, K2Node_ComponentBoundEvent_Selected) == 0x000080, "Member 'ChallengeListEntry_Challenge_C_ExecuteUbergraph_ChallengeListEntry_Challenge::K2Node_ComponentBoundEvent_Selected' has a wrong offset!");
static_assert(offsetof(ChallengeListEntry_Challenge_C_ExecuteUbergraph_ChallengeListEntry_Challenge, CallFunc_PlayAnimation_ReturnValue) == 0x000088, "Member 'ChallengeListEntry_Challenge_C_ExecuteUbergraph_ChallengeListEntry_Challenge::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChallengeListEntry_Challenge_C_ExecuteUbergraph_ChallengeListEntry_Challenge, Temp_bool_Variable_7) == 0x000090, "Member 'ChallengeListEntry_Challenge_C_ExecuteUbergraph_ChallengeListEntry_Challenge::Temp_bool_Variable_7' has a wrong offset!");
static_assert(offsetof(ChallengeListEntry_Challenge_C_ExecuteUbergraph_ChallengeListEntry_Challenge, K2Node_Select_Default_7) == 0x000091, "Member 'ChallengeListEntry_Challenge_C_ExecuteUbergraph_ChallengeListEntry_Challenge::K2Node_Select_Default_7' has a wrong offset!");

}

