#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_FrontendBackPlate

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_FrontendBackPlate.BP_FrontendBackPlate_C.ExecuteUbergraph_BP_FrontendBackPlate
// 0x0088 (0x0088 - 0x0000)
struct BP_FrontendBackPlate_C_ExecuteUbergraph_BP_FrontendBackPlate final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_2;                              // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_17[0x1];                                       // 0x0017(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector_X;                            // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameUserSettings*                      CallFunc_GetGameUserSettings_ReturnValue;          // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetVisualEffectQuality_ReturnValue;       // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_55[0x3];                                       // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameUserSettings*                      CallFunc_GetGameUserSettings_ReturnValue_1;        // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetVisualEffectQuality_ReturnValue_1;     // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue_1;                // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_IsEnabled;                      // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Select_Default;                             // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_72[0x2];                                       // 0x0072(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_MakeStruct_LinearColor_1;                   // 0x0074(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FrontendBackPlate_C_ExecuteUbergraph_BP_FrontendBackPlate) == 0x000008, "Wrong alignment on BP_FrontendBackPlate_C_ExecuteUbergraph_BP_FrontendBackPlate");
static_assert(sizeof(BP_FrontendBackPlate_C_ExecuteUbergraph_BP_FrontendBackPlate) == 0x000088, "Wrong size on BP_FrontendBackPlate_C_ExecuteUbergraph_BP_FrontendBackPlate");
static_assert(offsetof(BP_FrontendBackPlate_C_ExecuteUbergraph_BP_FrontendBackPlate, EntryPoint) == 0x000000, "Member 'BP_FrontendBackPlate_C_ExecuteUbergraph_BP_FrontendBackPlate::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_FrontendBackPlate_C_ExecuteUbergraph_BP_FrontendBackPlate, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'BP_FrontendBackPlate_C_ExecuteUbergraph_BP_FrontendBackPlate::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_FrontendBackPlate_C_ExecuteUbergraph_BP_FrontendBackPlate, Temp_bool_Variable) == 0x000014, "Member 'BP_FrontendBackPlate_C_ExecuteUbergraph_BP_FrontendBackPlate::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_FrontendBackPlate_C_ExecuteUbergraph_BP_FrontendBackPlate, Temp_bool_Variable_1) == 0x000015, "Member 'BP_FrontendBackPlate_C_ExecuteUbergraph_BP_FrontendBackPlate::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_FrontendBackPlate_C_ExecuteUbergraph_BP_FrontendBackPlate, Temp_bool_Variable_2) == 0x000016, "Member 'BP_FrontendBackPlate_C_ExecuteUbergraph_BP_FrontendBackPlate::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_FrontendBackPlate_C_ExecuteUbergraph_BP_FrontendBackPlate, CallFunc_BreakVector_X) == 0x000018, "Member 'BP_FrontendBackPlate_C_ExecuteUbergraph_BP_FrontendBackPlate::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_FrontendBackPlate_C_ExecuteUbergraph_BP_FrontendBackPlate, CallFunc_BreakVector_Y) == 0x00001C, "Member 'BP_FrontendBackPlate_C_ExecuteUbergraph_BP_FrontendBackPlate::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_FrontendBackPlate_C_ExecuteUbergraph_BP_FrontendBackPlate, CallFunc_BreakVector_Z) == 0x000020, "Member 'BP_FrontendBackPlate_C_ExecuteUbergraph_BP_FrontendBackPlate::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_FrontendBackPlate_C_ExecuteUbergraph_BP_FrontendBackPlate, CallFunc_BreakVector_X_1) == 0x000024, "Member 'BP_FrontendBackPlate_C_ExecuteUbergraph_BP_FrontendBackPlate::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BP_FrontendBackPlate_C_ExecuteUbergraph_BP_FrontendBackPlate, CallFunc_BreakVector_Y_1) == 0x000028, "Member 'BP_FrontendBackPlate_C_ExecuteUbergraph_BP_FrontendBackPlate::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BP_FrontendBackPlate_C_ExecuteUbergraph_BP_FrontendBackPlate, CallFunc_BreakVector_Z_1) == 0x00002C, "Member 'BP_FrontendBackPlate_C_ExecuteUbergraph_BP_FrontendBackPlate::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BP_FrontendBackPlate_C_ExecuteUbergraph_BP_FrontendBackPlate, K2Node_MakeStruct_LinearColor) == 0x000030, "Member 'BP_FrontendBackPlate_C_ExecuteUbergraph_BP_FrontendBackPlate::K2Node_MakeStruct_LinearColor' has a wrong offset!");
static_assert(offsetof(BP_FrontendBackPlate_C_ExecuteUbergraph_BP_FrontendBackPlate, K2Node_Event_DeltaSeconds) == 0x000040, "Member 'BP_FrontendBackPlate_C_ExecuteUbergraph_BP_FrontendBackPlate::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_FrontendBackPlate_C_ExecuteUbergraph_BP_FrontendBackPlate, CallFunc_GetGameUserSettings_ReturnValue) == 0x000048, "Member 'BP_FrontendBackPlate_C_ExecuteUbergraph_BP_FrontendBackPlate::CallFunc_GetGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FrontendBackPlate_C_ExecuteUbergraph_BP_FrontendBackPlate, CallFunc_GetVisualEffectQuality_ReturnValue) == 0x000050, "Member 'BP_FrontendBackPlate_C_ExecuteUbergraph_BP_FrontendBackPlate::CallFunc_GetVisualEffectQuality_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FrontendBackPlate_C_ExecuteUbergraph_BP_FrontendBackPlate, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000054, "Member 'BP_FrontendBackPlate_C_ExecuteUbergraph_BP_FrontendBackPlate::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FrontendBackPlate_C_ExecuteUbergraph_BP_FrontendBackPlate, CallFunc_GetGameUserSettings_ReturnValue_1) == 0x000058, "Member 'BP_FrontendBackPlate_C_ExecuteUbergraph_BP_FrontendBackPlate::CallFunc_GetGameUserSettings_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FrontendBackPlate_C_ExecuteUbergraph_BP_FrontendBackPlate, CallFunc_SelectFloat_ReturnValue) == 0x000060, "Member 'BP_FrontendBackPlate_C_ExecuteUbergraph_BP_FrontendBackPlate::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FrontendBackPlate_C_ExecuteUbergraph_BP_FrontendBackPlate, CallFunc_GetVisualEffectQuality_ReturnValue_1) == 0x000064, "Member 'BP_FrontendBackPlate_C_ExecuteUbergraph_BP_FrontendBackPlate::CallFunc_GetVisualEffectQuality_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FrontendBackPlate_C_ExecuteUbergraph_BP_FrontendBackPlate, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x000068, "Member 'BP_FrontendBackPlate_C_ExecuteUbergraph_BP_FrontendBackPlate::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FrontendBackPlate_C_ExecuteUbergraph_BP_FrontendBackPlate, CallFunc_SelectFloat_ReturnValue_1) == 0x00006C, "Member 'BP_FrontendBackPlate_C_ExecuteUbergraph_BP_FrontendBackPlate::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FrontendBackPlate_C_ExecuteUbergraph_BP_FrontendBackPlate, K2Node_CustomEvent_IsEnabled) == 0x000070, "Member 'BP_FrontendBackPlate_C_ExecuteUbergraph_BP_FrontendBackPlate::K2Node_CustomEvent_IsEnabled' has a wrong offset!");
static_assert(offsetof(BP_FrontendBackPlate_C_ExecuteUbergraph_BP_FrontendBackPlate, K2Node_Select_Default) == 0x000071, "Member 'BP_FrontendBackPlate_C_ExecuteUbergraph_BP_FrontendBackPlate::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_FrontendBackPlate_C_ExecuteUbergraph_BP_FrontendBackPlate, K2Node_MakeStruct_LinearColor_1) == 0x000074, "Member 'BP_FrontendBackPlate_C_ExecuteUbergraph_BP_FrontendBackPlate::K2Node_MakeStruct_LinearColor_1' has a wrong offset!");

// Function BP_FrontendBackPlate.BP_FrontendBackPlate_C.SetEnableBlackMondayFX
// 0x0001 (0x0001 - 0x0000)
struct BP_FrontendBackPlate_C_SetEnableBlackMondayFX final
{
public:
	bool                                          IsEnabled;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_FrontendBackPlate_C_SetEnableBlackMondayFX) == 0x000001, "Wrong alignment on BP_FrontendBackPlate_C_SetEnableBlackMondayFX");
static_assert(sizeof(BP_FrontendBackPlate_C_SetEnableBlackMondayFX) == 0x000001, "Wrong size on BP_FrontendBackPlate_C_SetEnableBlackMondayFX");
static_assert(offsetof(BP_FrontendBackPlate_C_SetEnableBlackMondayFX, IsEnabled) == 0x000000, "Member 'BP_FrontendBackPlate_C_SetEnableBlackMondayFX::IsEnabled' has a wrong offset!");

// Function BP_FrontendBackPlate.BP_FrontendBackPlate_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_FrontendBackPlate_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FrontendBackPlate_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_FrontendBackPlate_C_ReceiveTick");
static_assert(sizeof(BP_FrontendBackPlate_C_ReceiveTick) == 0x000004, "Wrong size on BP_FrontendBackPlate_C_ReceiveTick");
static_assert(offsetof(BP_FrontendBackPlate_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_FrontendBackPlate_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_FrontendBackPlate.BP_FrontendBackPlate_C.UserConstructionScript
// 0x0018 (0x0018 - 0x0000)
struct BP_FrontendBackPlate_C_UserConstructionScript final
{
public:
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_1; // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_2; // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FrontendBackPlate_C_UserConstructionScript) == 0x000008, "Wrong alignment on BP_FrontendBackPlate_C_UserConstructionScript");
static_assert(sizeof(BP_FrontendBackPlate_C_UserConstructionScript) == 0x000018, "Wrong size on BP_FrontendBackPlate_C_UserConstructionScript");
static_assert(offsetof(BP_FrontendBackPlate_C_UserConstructionScript, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000000, "Member 'BP_FrontendBackPlate_C_UserConstructionScript::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FrontendBackPlate_C_UserConstructionScript, CallFunc_CreateDynamicMaterialInstance_ReturnValue_1) == 0x000008, "Member 'BP_FrontendBackPlate_C_UserConstructionScript::CallFunc_CreateDynamicMaterialInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FrontendBackPlate_C_UserConstructionScript, CallFunc_CreateDynamicMaterialInstance_ReturnValue_2) == 0x000010, "Member 'BP_FrontendBackPlate_C_UserConstructionScript::CallFunc_CreateDynamicMaterialInstance_ReturnValue_2' has a wrong offset!");

// Function BP_FrontendBackPlate.BP_FrontendBackPlate_C.SetBackgroundTexture
// 0x0060 (0x0060 - 0x0000)
struct BP_FrontendBackPlate_C_SetBackgroundTexture final
{
public:
	class UTexture*                               Texture;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Material;                                          // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     PreBlurMaterial_0;                                 // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable;                              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_26[0x2];                                       // 0x0026(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     K2Node_Select_Default;                             // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture*                               K2Node_Select_Default_1;                           // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     K2Node_Select_Default_2;                           // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_1; // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_2; // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FrontendBackPlate_C_SetBackgroundTexture) == 0x000008, "Wrong alignment on BP_FrontendBackPlate_C_SetBackgroundTexture");
static_assert(sizeof(BP_FrontendBackPlate_C_SetBackgroundTexture) == 0x000060, "Wrong size on BP_FrontendBackPlate_C_SetBackgroundTexture");
static_assert(offsetof(BP_FrontendBackPlate_C_SetBackgroundTexture, Texture) == 0x000000, "Member 'BP_FrontendBackPlate_C_SetBackgroundTexture::Texture' has a wrong offset!");
static_assert(offsetof(BP_FrontendBackPlate_C_SetBackgroundTexture, Material) == 0x000008, "Member 'BP_FrontendBackPlate_C_SetBackgroundTexture::Material' has a wrong offset!");
static_assert(offsetof(BP_FrontendBackPlate_C_SetBackgroundTexture, PreBlurMaterial_0) == 0x000010, "Member 'BP_FrontendBackPlate_C_SetBackgroundTexture::PreBlurMaterial_0' has a wrong offset!");
static_assert(offsetof(BP_FrontendBackPlate_C_SetBackgroundTexture, Temp_object_Variable) == 0x000018, "Member 'BP_FrontendBackPlate_C_SetBackgroundTexture::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_FrontendBackPlate_C_SetBackgroundTexture, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'BP_FrontendBackPlate_C_SetBackgroundTexture::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FrontendBackPlate_C_SetBackgroundTexture, CallFunc_IsValid_ReturnValue_1) == 0x000021, "Member 'BP_FrontendBackPlate_C_SetBackgroundTexture::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FrontendBackPlate_C_SetBackgroundTexture, CallFunc_IsValid_ReturnValue_2) == 0x000022, "Member 'BP_FrontendBackPlate_C_SetBackgroundTexture::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_FrontendBackPlate_C_SetBackgroundTexture, CallFunc_IsValid_ReturnValue_3) == 0x000023, "Member 'BP_FrontendBackPlate_C_SetBackgroundTexture::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_FrontendBackPlate_C_SetBackgroundTexture, Temp_bool_Variable) == 0x000024, "Member 'BP_FrontendBackPlate_C_SetBackgroundTexture::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_FrontendBackPlate_C_SetBackgroundTexture, Temp_bool_Variable_1) == 0x000025, "Member 'BP_FrontendBackPlate_C_SetBackgroundTexture::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_FrontendBackPlate_C_SetBackgroundTexture, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000028, "Member 'BP_FrontendBackPlate_C_SetBackgroundTexture::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FrontendBackPlate_C_SetBackgroundTexture, K2Node_Select_Default) == 0x000030, "Member 'BP_FrontendBackPlate_C_SetBackgroundTexture::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_FrontendBackPlate_C_SetBackgroundTexture, Temp_bool_Variable_2) == 0x000038, "Member 'BP_FrontendBackPlate_C_SetBackgroundTexture::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_FrontendBackPlate_C_SetBackgroundTexture, K2Node_Select_Default_1) == 0x000040, "Member 'BP_FrontendBackPlate_C_SetBackgroundTexture::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_FrontendBackPlate_C_SetBackgroundTexture, K2Node_Select_Default_2) == 0x000048, "Member 'BP_FrontendBackPlate_C_SetBackgroundTexture::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BP_FrontendBackPlate_C_SetBackgroundTexture, CallFunc_CreateDynamicMaterialInstance_ReturnValue_1) == 0x000050, "Member 'BP_FrontendBackPlate_C_SetBackgroundTexture::CallFunc_CreateDynamicMaterialInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FrontendBackPlate_C_SetBackgroundTexture, CallFunc_CreateDynamicMaterialInstance_ReturnValue_2) == 0x000058, "Member 'BP_FrontendBackPlate_C_SetBackgroundTexture::CallFunc_CreateDynamicMaterialInstance_ReturnValue_2' has a wrong offset!");

// Function BP_FrontendBackPlate.BP_FrontendBackPlate_C.EnableRealtimeUpdate
// 0x0010 (0x0010 - 0x0000)
struct BP_FrontendBackPlate_C_EnableRealtimeUpdate final
{
public:
	bool                                          Enabled;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture*                               K2Node_Select_Default;                             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FrontendBackPlate_C_EnableRealtimeUpdate) == 0x000008, "Wrong alignment on BP_FrontendBackPlate_C_EnableRealtimeUpdate");
static_assert(sizeof(BP_FrontendBackPlate_C_EnableRealtimeUpdate) == 0x000010, "Wrong size on BP_FrontendBackPlate_C_EnableRealtimeUpdate");
static_assert(offsetof(BP_FrontendBackPlate_C_EnableRealtimeUpdate, Enabled) == 0x000000, "Member 'BP_FrontendBackPlate_C_EnableRealtimeUpdate::Enabled' has a wrong offset!");
static_assert(offsetof(BP_FrontendBackPlate_C_EnableRealtimeUpdate, Temp_bool_Variable) == 0x000001, "Member 'BP_FrontendBackPlate_C_EnableRealtimeUpdate::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_FrontendBackPlate_C_EnableRealtimeUpdate, K2Node_Select_Default) == 0x000008, "Member 'BP_FrontendBackPlate_C_EnableRealtimeUpdate::K2Node_Select_Default' has a wrong offset!");

}

