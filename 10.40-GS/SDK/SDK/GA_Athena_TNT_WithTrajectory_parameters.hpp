#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_Athena_TNT_WithTrajectory

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "FortniteGame_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function GA_Athena_TNT_WithTrajectory.GA_Athena_TNT_WithTrajectory_C.ExecuteUbergraph_GA_Athena_TNT_WithTrajectory
// 0x0430 (0x0430 - 0x0000)
struct GA_Athena_TNT_WithTrajectory_C_ExecuteUbergraph_GA_Athena_TNT_WithTrajectory final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FProjectileEventData                   K2Node_CustomEvent_ProjectileData_2;               // 0x0008(0x0028)(ConstParm, ContainsInstancedReference)
	TDelegate<void(struct FProjectileEventData& ProjectileData)> K2Node_CreateDelegate_OutputDelegate;              // 0x0030(0x0010)(ZeroConstructor, NoDestructor)
	struct FProjectileEventData                   K2Node_CustomEvent_ProjectileData_1;               // 0x0040(0x0028)(ConstParm, ContainsInstancedReference)
	TDelegate<void(struct FProjectileEventData& ProjectileData)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0068(0x0010)(ZeroConstructor, NoDestructor)
	struct FProjectileEventData                   K2Node_CustomEvent_ProjectileData;                 // 0x0078(0x0028)(ConstParm, ContainsInstancedReference)
	TDelegate<void(struct FProjectileEventData& ProjectileData)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x00A0(0x0010)(ZeroConstructor, NoDestructor)
	struct FProjectileEventData                   Temp_struct_Variable;                              // 0x00B0(0x0028)(ContainsInstancedReference)
	TDelegate<void(class AActor* DamagedActor, float Damage, class AController* InstigatedBy, class AActor* DamageCauser, const struct FVector& HitLocation, class UPrimitiveComponent* FHitComponent, class FName BoneName, const struct FVector& Momentum)> K2Node_CreateDelegate_OutputDelegate_3;            // 0x00D8(0x0010)(ZeroConstructor, NoDestructor)
	float                                         CallFunc_K2_GetTimerRemainingTimeHandle_ReturnValue; // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bWasCancelled;                        // 0x00EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_ED[0x3];                                       // 0x00ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue;  // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerPawn*                        K2Node_DynamicCast_AsFort_Player_Pawn;             // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_101[0x7];                                      // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerPawnAthena*                  K2Node_DynamicCast_AsFort_Player_Pawn_Athena;      // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_111[0x3];                                      // 0x0111(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_CustomEvent_Location;                       // 0x0114(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               K2Node_CustomEvent_Direction;                      // 0x0120(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bAllowSpawnWhenDead;            // 0x012C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bAllowSpawnWhenDBNO;            // 0x012D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12E[0x2];                                      // 0x012E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13C[0x4];                                      // 0x013C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FProjectileEventData                   K2Node_CustomEvent_ProjectileData_3;               // 0x0140(0x0028)(ConstParm, ContainsInstancedReference)
	class UClass*                                 CallFunc_SetupGrenade_Base_Grenade;                // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetupGrenade_Projectile_Speed;            // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_174[0x4];                                      // 0x0174(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFortGameplayEffectContainerSpec       CallFunc_SetupGrenade_Explosion_Gameplay_Spec;     // 0x0178(0x0088)()
	float                                         CallFunc_SetupGrenade_Projectile_Gravity_Scale;    // 0x0200(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_204[0x4];                                      // 0x0204(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFortGameplayEffectContainerSpec       CallFunc_SetupGrenade_Additional_Explosion_Gameplay_Spec; // 0x0208(0x0088)()
	TDelegate<void(struct FProjectileEventData& ProjectileData)> K2Node_CreateDelegate_OutputDelegate_4;            // 0x0290(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_K2_CommitAbility_ReturnValue;             // 0x02A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A1[0x7];                                      // 0x02A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerPawn*                        CallFunc_GetOwningPlayer_Player_Pawn;              // 0x02A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortAbilityTask_SpawnProjectileAndWait* CallFunc_SpawnProjectileAndWait_ReturnValue;       // 0x02B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x02B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C4[0x4];                                      // 0x02C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortProjectileBase*                    CallFunc_BeginSpawningActor_SpawnedActor;          // 0x02C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BeginSpawningActor_ReturnValue;           // 0x02D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D1[0x3];                                      // 0x02D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x02D4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x02E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x02E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x02E5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E6[0x2];                                      // 0x02E6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_CustomEvent_DamagedActor;                   // 0x02E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_Damage;                         // 0x02F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F4[0x4];                                      // 0x02F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            K2Node_CustomEvent_InstigatedBy;                   // 0x02F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_DamageCauser;                   // 0x0300(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_HitLocation;                    // 0x0308(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_314[0x4];                                      // 0x0314(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_CustomEvent_FHitComponent;                  // 0x0318(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_BoneName;                       // 0x0320(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_Momentum;                       // 0x0328(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_334[0x4];                                      // 0x0334(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerPawnAthena*                  K2Node_DynamicCast_AsFort_Player_Pawn_Athena_1;    // 0x0338(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0340(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_341[0x3];                                      // 0x0341(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_SpawnLocationAndRotation_OutLoc;          // 0x0344(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_SpawnLocationAndRotation_OutRot;          // 0x0350(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDead_ReturnValue;                       // 0x035C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35D[0x3];                                      // 0x035D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortProjectileBase*                    K2Node_Event_ProjectileReference;                  // 0x0360(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AB_Prj_Athena_TNT_C*                    K2Node_DynamicCast_AsB_Prj_Athena_TNT;             // 0x0368(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0370(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_371[0x7];                                      // 0x0371(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FProjectileEventData                   K2Node_CustomEvent_ProjectileData_4;               // 0x0378(0x0028)(ConstParm, ContainsInstancedReference)
	struct FProjectileEventData                   K2Node_CustomEvent_ProjectileData_5;               // 0x03A0(0x0028)(ConstParm, ContainsInstancedReference)
	TDelegate<void(struct FProjectileEventData& ProjectileData)> K2Node_CreateDelegate_OutputDelegate_5;            // 0x03C8(0x0010)(ZeroConstructor, NoDestructor)
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue_1; // 0x03D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(struct FProjectileEventData& ProjectileData)> K2Node_CreateDelegate_OutputDelegate_6;            // 0x03E0(0x0010)(ZeroConstructor, NoDestructor)
	struct FActiveGameplayEffectHandle            CallFunc_ApplyGlobalEnvironmentGameplayEffectToActor_ReturnValue; // 0x03F0(0x0008)(NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x03F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_7;            // 0x03FC(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_8;            // 0x040C(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_41C[0x4];                                      // 0x041C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0420(0x0008)(NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetServerWorldTimeSeconds_ReturnValue;    // 0x0428(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x042C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Athena_TNT_WithTrajectory_C_ExecuteUbergraph_GA_Athena_TNT_WithTrajectory) == 0x000008, "Wrong alignment on GA_Athena_TNT_WithTrajectory_C_ExecuteUbergraph_GA_Athena_TNT_WithTrajectory");
static_assert(sizeof(GA_Athena_TNT_WithTrajectory_C_ExecuteUbergraph_GA_Athena_TNT_WithTrajectory) == 0x000430, "Wrong size on GA_Athena_TNT_WithTrajectory_C_ExecuteUbergraph_GA_Athena_TNT_WithTrajectory");
static_assert(offsetof(GA_Athena_TNT_WithTrajectory_C_ExecuteUbergraph_GA_Athena_TNT_WithTrajectory, EntryPoint) == 0x000000, "Member 'GA_Athena_TNT_WithTrajectory_C_ExecuteUbergraph_GA_Athena_TNT_WithTrajectory::EntryPoint' has a wrong offset!");
static_assert(offsetof(GA_Athena_TNT_WithTrajectory_C_ExecuteUbergraph_GA_Athena_TNT_WithTrajectory, K2Node_CustomEvent_ProjectileData_2) == 0x000008, "Member 'GA_Athena_TNT_WithTrajectory_C_ExecuteUbergraph_GA_Athena_TNT_WithTrajectory::K2Node_CustomEvent_ProjectileData_2' has a wrong offset!");
static_assert(offsetof(GA_Athena_TNT_WithTrajectory_C_ExecuteUbergraph_GA_Athena_TNT_WithTrajectory, K2Node_CreateDelegate_OutputDelegate) == 0x000030, "Member 'GA_Athena_TNT_WithTrajectory_C_ExecuteUbergraph_GA_Athena_TNT_WithTrajectory::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(GA_Athena_TNT_WithTrajectory_C_ExecuteUbergraph_GA_Athena_TNT_WithTrajectory, K2Node_CustomEvent_ProjectileData_1) == 0x000040, "Member 'GA_Athena_TNT_WithTrajectory_C_ExecuteUbergraph_GA_Athena_TNT_WithTrajectory::K2Node_CustomEvent_ProjectileData_1' has a wrong offset!");
static_assert(offsetof(GA_Athena_TNT_WithTrajectory_C_ExecuteUbergraph_GA_Athena_TNT_WithTrajectory, K2Node_CreateDelegate_OutputDelegate_1) == 0x000068, "Member 'GA_Athena_TNT_WithTrajectory_C_ExecuteUbergraph_GA_Athena_TNT_WithTrajectory::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(GA_Athena_TNT_WithTrajectory_C_ExecuteUbergraph_GA_Athena_TNT_WithTrajectory, K2Node_CustomEvent_ProjectileData) == 0x000078, "Member 'GA_Athena_TNT_WithTrajectory_C_ExecuteUbergraph_GA_Athena_TNT_WithTrajectory::K2Node_CustomEvent_ProjectileData' has a wrong offset!");
static_assert(offsetof(GA_Athena_TNT_WithTrajectory_C_ExecuteUbergraph_GA_Athena_TNT_WithTrajectory, K2Node_CreateDelegate_OutputDelegate_2) == 0x0000A0, "Member 'GA_Athena_TNT_WithTrajectory_C_ExecuteUbergraph_GA_Athena_TNT_WithTrajectory::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(GA_Athena_TNT_WithTrajectory_C_ExecuteUbergraph_GA_Athena_TNT_WithTrajectory, Temp_struct_Variable) == 0x0000B0, "Member 'GA_Athena_TNT_WithTrajectory_C_ExecuteUbergraph_GA_Athena_TNT_WithTrajectory::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(GA_Athena_TNT_WithTrajectory_C_ExecuteUbergraph_GA_Athena_TNT_WithTrajectory, K2Node_CreateDelegate_OutputDelegate_3) == 0x0000D8, "Member 'GA_Athena_TNT_WithTrajectory_C_ExecuteUbergraph_GA_Athena_TNT_WithTrajectory::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(GA_Athena_TNT_WithTrajectory_C_ExecuteUbergraph_GA_Athena_TNT_WithTrajectory, CallFunc_K2_GetTimerRemainingTimeHandle_ReturnValue) == 0x0000E8, "Member 'GA_Athena_TNT_WithTrajectory_C_ExecuteUbergraph_GA_Athena_TNT_WithTrajectory::CallFunc_K2_GetTimerRemainingTimeHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_TNT_WithTrajectory_C_ExecuteUbergraph_GA_Athena_TNT_WithTrajectory, K2Node_Event_bWasCancelled) == 0x0000EC, "Member 'GA_Athena_TNT_WithTrajectory_C_ExecuteUbergraph_GA_Athena_TNT_WithTrajectory::K2Node_Event_bWasCancelled' has a wrong offset!");
static_assert(offsetof(GA_Athena_TNT_WithTrajectory_C_ExecuteUbergraph_GA_Athena_TNT_WithTrajectory, CallFunc_GetAvatarActorFromActorInfo_ReturnValue) == 0x0000F0, "Member 'GA_Athena_TNT_WithTrajectory_C_ExecuteUbergraph_GA_Athena_TNT_WithTrajectory::CallFunc_GetAvatarActorFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_TNT_WithTrajectory_C_ExecuteUbergraph_GA_Athena_TNT_WithTrajectory, K2Node_DynamicCast_AsFort_Player_Pawn) == 0x0000F8, "Member 'GA_Athena_TNT_WithTrajectory_C_ExecuteUbergraph_GA_Athena_TNT_WithTrajectory::K2Node_DynamicCast_AsFort_Player_Pawn' has a wrong offset!");
static_assert(offsetof(GA_Athena_TNT_WithTrajectory_C_ExecuteUbergraph_GA_Athena_TNT_WithTrajectory, K2Node_DynamicCast_bSuccess) == 0x000100, "Member 'GA_Athena_TNT_WithTrajectory_C_ExecuteUbergraph_GA_Athena_TNT_WithTrajectory::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_Athena_TNT_WithTrajectory_C_ExecuteUbergraph_GA_Athena_TNT_WithTrajectory, K2Node_DynamicCast_AsFort_Player_Pawn_Athena) == 0x000108, "Member 'GA_Athena_TNT_WithTrajectory_C_ExecuteUbergraph_GA_Athena_TNT_WithTrajectory::K2Node_DynamicCast_AsFort_Player_Pawn_Athena' has a wrong offset!");
static_assert(offsetof(GA_Athena_TNT_WithTrajectory_C_ExecuteUbergraph_GA_Athena_TNT_WithTrajectory, K2Node_DynamicCast_bSuccess_1) == 0x000110, "Member 'GA_Athena_TNT_WithTrajectory_C_ExecuteUbergraph_GA_Athena_TNT_WithTrajectory::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(GA_Athena_TNT_WithTrajectory_C_ExecuteUbergraph_GA_Athena_TNT_WithTrajectory, K2Node_CustomEvent_Location) == 0x000114, "Member 'GA_Athena_TNT_WithTrajectory_C_ExecuteUbergraph_GA_Athena_TNT_WithTrajectory::K2Node_CustomEvent_Location' has a wrong offset!");
static_assert(offsetof(GA_Athena_TNT_WithTrajectory_C_ExecuteUbergraph_GA_Athena_TNT_WithTrajectory, K2Node_CustomEvent_Direction) == 0x000120, "Member 'GA_Athena_TNT_WithTrajectory_C_ExecuteUbergraph_GA_Athena_TNT_WithTrajectory::K2Node_CustomEvent_Direction' has a wrong offset!");
static_assert(offsetof(GA_Athena_TNT_WithTrajectory_C_ExecuteUbergraph_GA_Athena_TNT_WithTrajectory, K2Node_CustomEvent_bAllowSpawnWhenDead) == 0x00012C, "Member 'GA_Athena_TNT_WithTrajectory_C_ExecuteUbergraph_GA_Athena_TNT_WithTrajectory::K2Node_CustomEvent_bAllowSpawnWhenDead' has a wrong offset!");
static_assert(offsetof(GA_Athena_TNT_WithTrajectory_C_ExecuteUbergraph_GA_Athena_TNT_WithTrajectory, K2Node_CustomEvent_bAllowSpawnWhenDBNO) == 0x00012D, "Member 'GA_Athena_TNT_WithTrajectory_C_ExecuteUbergraph_GA_Athena_TNT_WithTrajectory::K2Node_CustomEvent_bAllowSpawnWhenDBNO' has a wrong offset!");
static_assert(offsetof(GA_Athena_TNT_WithTrajectory_C_ExecuteUbergraph_GA_Athena_TNT_WithTrajectory, CallFunc_BreakRotator_Roll) == 0x000130, "Member 'GA_Athena_TNT_WithTrajectory_C_ExecuteUbergraph_GA_Athena_TNT_WithTrajectory::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(GA_Athena_TNT_WithTrajectory_C_ExecuteUbergraph_GA_Athena_TNT_WithTrajectory, CallFunc_BreakRotator_Pitch) == 0x000134, "Member 'GA_Athena_TNT_WithTrajectory_C_ExecuteUbergraph_GA_Athena_TNT_WithTrajectory::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(GA_Athena_TNT_WithTrajectory_C_ExecuteUbergraph_GA_Athena_TNT_WithTrajectory, CallFunc_BreakRotator_Yaw) == 0x000138, "Member 'GA_Athena_TNT_WithTrajectory_C_ExecuteUbergraph_GA_Athena_TNT_WithTrajectory::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(GA_Athena_TNT_WithTrajectory_C_ExecuteUbergraph_GA_Athena_TNT_WithTrajectory, K2Node_CustomEvent_ProjectileData_3) == 0x000140, "Member 'GA_Athena_TNT_WithTrajectory_C_ExecuteUbergraph_GA_Athena_TNT_WithTrajectory::K2Node_CustomEvent_ProjectileData_3' has a wrong offset!");
static_assert(offsetof(GA_Athena_TNT_WithTrajectory_C_ExecuteUbergraph_GA_Athena_TNT_WithTrajectory, CallFunc_SetupGrenade_Base_Grenade) == 0x000168, "Member 'GA_Athena_TNT_WithTrajectory_C_ExecuteUbergraph_GA_Athena_TNT_WithTrajectory::CallFunc_SetupGrenade_Base_Grenade' has a wrong offset!");
static_assert(offsetof(GA_Athena_TNT_WithTrajectory_C_ExecuteUbergraph_GA_Athena_TNT_WithTrajectory, CallFunc_SetupGrenade_Projectile_Speed) == 0x000170, "Member 'GA_Athena_TNT_WithTrajectory_C_ExecuteUbergraph_GA_Athena_TNT_WithTrajectory::CallFunc_SetupGrenade_Projectile_Speed' has a wrong offset!");
static_assert(offsetof(GA_Athena_TNT_WithTrajectory_C_ExecuteUbergraph_GA_Athena_TNT_WithTrajectory, CallFunc_SetupGrenade_Explosion_Gameplay_Spec) == 0x000178, "Member 'GA_Athena_TNT_WithTrajectory_C_ExecuteUbergraph_GA_Athena_TNT_WithTrajectory::CallFunc_SetupGrenade_Explosion_Gameplay_Spec' has a wrong offset!");
static_assert(offsetof(GA_Athena_TNT_WithTrajectory_C_ExecuteUbergraph_GA_Athena_TNT_WithTrajectory, CallFunc_SetupGrenade_Projectile_Gravity_Scale) == 0x000200, "Member 'GA_Athena_TNT_WithTrajectory_C_ExecuteUbergraph_GA_Athena_TNT_WithTrajectory::CallFunc_SetupGrenade_Projectile_Gravity_Scale' has a wrong offset!");
static_assert(offsetof(GA_Athena_TNT_WithTrajectory_C_ExecuteUbergraph_GA_Athena_TNT_WithTrajectory, CallFunc_SetupGrenade_Additional_Explosion_Gameplay_Spec) == 0x000208, "Member 'GA_Athena_TNT_WithTrajectory_C_ExecuteUbergraph_GA_Athena_TNT_WithTrajectory::CallFunc_SetupGrenade_Additional_Explosion_Gameplay_Spec' has a wrong offset!");
static_assert(offsetof(GA_Athena_TNT_WithTrajectory_C_ExecuteUbergraph_GA_Athena_TNT_WithTrajectory, K2Node_CreateDelegate_OutputDelegate_4) == 0x000290, "Member 'GA_Athena_TNT_WithTrajectory_C_ExecuteUbergraph_GA_Athena_TNT_WithTrajectory::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(GA_Athena_TNT_WithTrajectory_C_ExecuteUbergraph_GA_Athena_TNT_WithTrajectory, CallFunc_K2_CommitAbility_ReturnValue) == 0x0002A0, "Member 'GA_Athena_TNT_WithTrajectory_C_ExecuteUbergraph_GA_Athena_TNT_WithTrajectory::CallFunc_K2_CommitAbility_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_TNT_WithTrajectory_C_ExecuteUbergraph_GA_Athena_TNT_WithTrajectory, CallFunc_GetOwningPlayer_Player_Pawn) == 0x0002A8, "Member 'GA_Athena_TNT_WithTrajectory_C_ExecuteUbergraph_GA_Athena_TNT_WithTrajectory::CallFunc_GetOwningPlayer_Player_Pawn' has a wrong offset!");
static_assert(offsetof(GA_Athena_TNT_WithTrajectory_C_ExecuteUbergraph_GA_Athena_TNT_WithTrajectory, CallFunc_SpawnProjectileAndWait_ReturnValue) == 0x0002B0, "Member 'GA_Athena_TNT_WithTrajectory_C_ExecuteUbergraph_GA_Athena_TNT_WithTrajectory::CallFunc_SpawnProjectileAndWait_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_TNT_WithTrajectory_C_ExecuteUbergraph_GA_Athena_TNT_WithTrajectory, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0002B8, "Member 'GA_Athena_TNT_WithTrajectory_C_ExecuteUbergraph_GA_Athena_TNT_WithTrajectory::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_TNT_WithTrajectory_C_ExecuteUbergraph_GA_Athena_TNT_WithTrajectory, CallFunc_BeginSpawningActor_SpawnedActor) == 0x0002C8, "Member 'GA_Athena_TNT_WithTrajectory_C_ExecuteUbergraph_GA_Athena_TNT_WithTrajectory::CallFunc_BeginSpawningActor_SpawnedActor' has a wrong offset!");
static_assert(offsetof(GA_Athena_TNT_WithTrajectory_C_ExecuteUbergraph_GA_Athena_TNT_WithTrajectory, CallFunc_BeginSpawningActor_ReturnValue) == 0x0002D0, "Member 'GA_Athena_TNT_WithTrajectory_C_ExecuteUbergraph_GA_Athena_TNT_WithTrajectory::CallFunc_BeginSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_TNT_WithTrajectory_C_ExecuteUbergraph_GA_Athena_TNT_WithTrajectory, CallFunc_Subtract_VectorVector_ReturnValue) == 0x0002D4, "Member 'GA_Athena_TNT_WithTrajectory_C_ExecuteUbergraph_GA_Athena_TNT_WithTrajectory::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_TNT_WithTrajectory_C_ExecuteUbergraph_GA_Athena_TNT_WithTrajectory, CallFunc_VSize_ReturnValue) == 0x0002E0, "Member 'GA_Athena_TNT_WithTrajectory_C_ExecuteUbergraph_GA_Athena_TNT_WithTrajectory::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_TNT_WithTrajectory_C_ExecuteUbergraph_GA_Athena_TNT_WithTrajectory, CallFunc_IsValid_ReturnValue) == 0x0002E4, "Member 'GA_Athena_TNT_WithTrajectory_C_ExecuteUbergraph_GA_Athena_TNT_WithTrajectory::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_TNT_WithTrajectory_C_ExecuteUbergraph_GA_Athena_TNT_WithTrajectory, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x0002E5, "Member 'GA_Athena_TNT_WithTrajectory_C_ExecuteUbergraph_GA_Athena_TNT_WithTrajectory::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_TNT_WithTrajectory_C_ExecuteUbergraph_GA_Athena_TNT_WithTrajectory, K2Node_CustomEvent_DamagedActor) == 0x0002E8, "Member 'GA_Athena_TNT_WithTrajectory_C_ExecuteUbergraph_GA_Athena_TNT_WithTrajectory::K2Node_CustomEvent_DamagedActor' has a wrong offset!");
static_assert(offsetof(GA_Athena_TNT_WithTrajectory_C_ExecuteUbergraph_GA_Athena_TNT_WithTrajectory, K2Node_CustomEvent_Damage) == 0x0002F0, "Member 'GA_Athena_TNT_WithTrajectory_C_ExecuteUbergraph_GA_Athena_TNT_WithTrajectory::K2Node_CustomEvent_Damage' has a wrong offset!");
static_assert(offsetof(GA_Athena_TNT_WithTrajectory_C_ExecuteUbergraph_GA_Athena_TNT_WithTrajectory, K2Node_CustomEvent_InstigatedBy) == 0x0002F8, "Member 'GA_Athena_TNT_WithTrajectory_C_ExecuteUbergraph_GA_Athena_TNT_WithTrajectory::K2Node_CustomEvent_InstigatedBy' has a wrong offset!");
static_assert(offsetof(GA_Athena_TNT_WithTrajectory_C_ExecuteUbergraph_GA_Athena_TNT_WithTrajectory, K2Node_CustomEvent_DamageCauser) == 0x000300, "Member 'GA_Athena_TNT_WithTrajectory_C_ExecuteUbergraph_GA_Athena_TNT_WithTrajectory::K2Node_CustomEvent_DamageCauser' has a wrong offset!");
static_assert(offsetof(GA_Athena_TNT_WithTrajectory_C_ExecuteUbergraph_GA_Athena_TNT_WithTrajectory, K2Node_CustomEvent_HitLocation) == 0x000308, "Member 'GA_Athena_TNT_WithTrajectory_C_ExecuteUbergraph_GA_Athena_TNT_WithTrajectory::K2Node_CustomEvent_HitLocation' has a wrong offset!");
static_assert(offsetof(GA_Athena_TNT_WithTrajectory_C_ExecuteUbergraph_GA_Athena_TNT_WithTrajectory, K2Node_CustomEvent_FHitComponent) == 0x000318, "Member 'GA_Athena_TNT_WithTrajectory_C_ExecuteUbergraph_GA_Athena_TNT_WithTrajectory::K2Node_CustomEvent_FHitComponent' has a wrong offset!");
static_assert(offsetof(GA_Athena_TNT_WithTrajectory_C_ExecuteUbergraph_GA_Athena_TNT_WithTrajectory, K2Node_CustomEvent_BoneName) == 0x000320, "Member 'GA_Athena_TNT_WithTrajectory_C_ExecuteUbergraph_GA_Athena_TNT_WithTrajectory::K2Node_CustomEvent_BoneName' has a wrong offset!");
static_assert(offsetof(GA_Athena_TNT_WithTrajectory_C_ExecuteUbergraph_GA_Athena_TNT_WithTrajectory, K2Node_CustomEvent_Momentum) == 0x000328, "Member 'GA_Athena_TNT_WithTrajectory_C_ExecuteUbergraph_GA_Athena_TNT_WithTrajectory::K2Node_CustomEvent_Momentum' has a wrong offset!");
static_assert(offsetof(GA_Athena_TNT_WithTrajectory_C_ExecuteUbergraph_GA_Athena_TNT_WithTrajectory, K2Node_DynamicCast_AsFort_Player_Pawn_Athena_1) == 0x000338, "Member 'GA_Athena_TNT_WithTrajectory_C_ExecuteUbergraph_GA_Athena_TNT_WithTrajectory::K2Node_DynamicCast_AsFort_Player_Pawn_Athena_1' has a wrong offset!");
static_assert(offsetof(GA_Athena_TNT_WithTrajectory_C_ExecuteUbergraph_GA_Athena_TNT_WithTrajectory, K2Node_DynamicCast_bSuccess_2) == 0x000340, "Member 'GA_Athena_TNT_WithTrajectory_C_ExecuteUbergraph_GA_Athena_TNT_WithTrajectory::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(GA_Athena_TNT_WithTrajectory_C_ExecuteUbergraph_GA_Athena_TNT_WithTrajectory, CallFunc_SpawnLocationAndRotation_OutLoc) == 0x000344, "Member 'GA_Athena_TNT_WithTrajectory_C_ExecuteUbergraph_GA_Athena_TNT_WithTrajectory::CallFunc_SpawnLocationAndRotation_OutLoc' has a wrong offset!");
static_assert(offsetof(GA_Athena_TNT_WithTrajectory_C_ExecuteUbergraph_GA_Athena_TNT_WithTrajectory, CallFunc_SpawnLocationAndRotation_OutRot) == 0x000350, "Member 'GA_Athena_TNT_WithTrajectory_C_ExecuteUbergraph_GA_Athena_TNT_WithTrajectory::CallFunc_SpawnLocationAndRotation_OutRot' has a wrong offset!");
static_assert(offsetof(GA_Athena_TNT_WithTrajectory_C_ExecuteUbergraph_GA_Athena_TNT_WithTrajectory, CallFunc_IsDead_ReturnValue) == 0x00035C, "Member 'GA_Athena_TNT_WithTrajectory_C_ExecuteUbergraph_GA_Athena_TNT_WithTrajectory::CallFunc_IsDead_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_TNT_WithTrajectory_C_ExecuteUbergraph_GA_Athena_TNT_WithTrajectory, K2Node_Event_ProjectileReference) == 0x000360, "Member 'GA_Athena_TNT_WithTrajectory_C_ExecuteUbergraph_GA_Athena_TNT_WithTrajectory::K2Node_Event_ProjectileReference' has a wrong offset!");
static_assert(offsetof(GA_Athena_TNT_WithTrajectory_C_ExecuteUbergraph_GA_Athena_TNT_WithTrajectory, K2Node_DynamicCast_AsB_Prj_Athena_TNT) == 0x000368, "Member 'GA_Athena_TNT_WithTrajectory_C_ExecuteUbergraph_GA_Athena_TNT_WithTrajectory::K2Node_DynamicCast_AsB_Prj_Athena_TNT' has a wrong offset!");
static_assert(offsetof(GA_Athena_TNT_WithTrajectory_C_ExecuteUbergraph_GA_Athena_TNT_WithTrajectory, K2Node_DynamicCast_bSuccess_3) == 0x000370, "Member 'GA_Athena_TNT_WithTrajectory_C_ExecuteUbergraph_GA_Athena_TNT_WithTrajectory::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(GA_Athena_TNT_WithTrajectory_C_ExecuteUbergraph_GA_Athena_TNT_WithTrajectory, K2Node_CustomEvent_ProjectileData_4) == 0x000378, "Member 'GA_Athena_TNT_WithTrajectory_C_ExecuteUbergraph_GA_Athena_TNT_WithTrajectory::K2Node_CustomEvent_ProjectileData_4' has a wrong offset!");
static_assert(offsetof(GA_Athena_TNT_WithTrajectory_C_ExecuteUbergraph_GA_Athena_TNT_WithTrajectory, K2Node_CustomEvent_ProjectileData_5) == 0x0003A0, "Member 'GA_Athena_TNT_WithTrajectory_C_ExecuteUbergraph_GA_Athena_TNT_WithTrajectory::K2Node_CustomEvent_ProjectileData_5' has a wrong offset!");
static_assert(offsetof(GA_Athena_TNT_WithTrajectory_C_ExecuteUbergraph_GA_Athena_TNT_WithTrajectory, K2Node_CreateDelegate_OutputDelegate_5) == 0x0003C8, "Member 'GA_Athena_TNT_WithTrajectory_C_ExecuteUbergraph_GA_Athena_TNT_WithTrajectory::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(GA_Athena_TNT_WithTrajectory_C_ExecuteUbergraph_GA_Athena_TNT_WithTrajectory, CallFunc_GetAvatarActorFromActorInfo_ReturnValue_1) == 0x0003D8, "Member 'GA_Athena_TNT_WithTrajectory_C_ExecuteUbergraph_GA_Athena_TNT_WithTrajectory::CallFunc_GetAvatarActorFromActorInfo_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_Athena_TNT_WithTrajectory_C_ExecuteUbergraph_GA_Athena_TNT_WithTrajectory, K2Node_CreateDelegate_OutputDelegate_6) == 0x0003E0, "Member 'GA_Athena_TNT_WithTrajectory_C_ExecuteUbergraph_GA_Athena_TNT_WithTrajectory::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");
static_assert(offsetof(GA_Athena_TNT_WithTrajectory_C_ExecuteUbergraph_GA_Athena_TNT_WithTrajectory, CallFunc_ApplyGlobalEnvironmentGameplayEffectToActor_ReturnValue) == 0x0003F0, "Member 'GA_Athena_TNT_WithTrajectory_C_ExecuteUbergraph_GA_Athena_TNT_WithTrajectory::CallFunc_ApplyGlobalEnvironmentGameplayEffectToActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_TNT_WithTrajectory_C_ExecuteUbergraph_GA_Athena_TNT_WithTrajectory, CallFunc_FClamp_ReturnValue) == 0x0003F8, "Member 'GA_Athena_TNT_WithTrajectory_C_ExecuteUbergraph_GA_Athena_TNT_WithTrajectory::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_TNT_WithTrajectory_C_ExecuteUbergraph_GA_Athena_TNT_WithTrajectory, K2Node_CreateDelegate_OutputDelegate_7) == 0x0003FC, "Member 'GA_Athena_TNT_WithTrajectory_C_ExecuteUbergraph_GA_Athena_TNT_WithTrajectory::K2Node_CreateDelegate_OutputDelegate_7' has a wrong offset!");
static_assert(offsetof(GA_Athena_TNT_WithTrajectory_C_ExecuteUbergraph_GA_Athena_TNT_WithTrajectory, K2Node_CreateDelegate_OutputDelegate_8) == 0x00040C, "Member 'GA_Athena_TNT_WithTrajectory_C_ExecuteUbergraph_GA_Athena_TNT_WithTrajectory::K2Node_CreateDelegate_OutputDelegate_8' has a wrong offset!");
static_assert(offsetof(GA_Athena_TNT_WithTrajectory_C_ExecuteUbergraph_GA_Athena_TNT_WithTrajectory, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000420, "Member 'GA_Athena_TNT_WithTrajectory_C_ExecuteUbergraph_GA_Athena_TNT_WithTrajectory::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_TNT_WithTrajectory_C_ExecuteUbergraph_GA_Athena_TNT_WithTrajectory, CallFunc_GetServerWorldTimeSeconds_ReturnValue) == 0x000428, "Member 'GA_Athena_TNT_WithTrajectory_C_ExecuteUbergraph_GA_Athena_TNT_WithTrajectory::CallFunc_GetServerWorldTimeSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_TNT_WithTrajectory_C_ExecuteUbergraph_GA_Athena_TNT_WithTrajectory, CallFunc_Add_FloatFloat_ReturnValue) == 0x00042C, "Member 'GA_Athena_TNT_WithTrajectory_C_ExecuteUbergraph_GA_Athena_TNT_WithTrajectory::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");

// Function GA_Athena_TNT_WithTrajectory.GA_Athena_TNT_WithTrajectory_C.AthenaProjectileSpawned
// 0x0008 (0x0008 - 0x0000)
struct GA_Athena_TNT_WithTrajectory_C_AthenaProjectileSpawned final
{
public:
	class AFortProjectileBase*                    ProjectileReference_0;                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Athena_TNT_WithTrajectory_C_AthenaProjectileSpawned) == 0x000008, "Wrong alignment on GA_Athena_TNT_WithTrajectory_C_AthenaProjectileSpawned");
static_assert(sizeof(GA_Athena_TNT_WithTrajectory_C_AthenaProjectileSpawned) == 0x000008, "Wrong size on GA_Athena_TNT_WithTrajectory_C_AthenaProjectileSpawned");
static_assert(offsetof(GA_Athena_TNT_WithTrajectory_C_AthenaProjectileSpawned, ProjectileReference_0) == 0x000000, "Member 'GA_Athena_TNT_WithTrajectory_C_AthenaProjectileSpawned::ProjectileReference_0' has a wrong offset!");

// Function GA_Athena_TNT_WithTrajectory.GA_Athena_TNT_WithTrajectory_C.OnDamagedFatal
// 0x0050 (0x0050 - 0x0000)
struct GA_Athena_TNT_WithTrajectory_C_OnDamagedFatal final
{
public:
	class AActor*                                 DamagedActor;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Damage;                                            // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            InstigatedBy;                                      // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 DamageCauser;                                      // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitLocation;                                       // 0x0020(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    FHitComponent;                                     // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   BoneName;                                          // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Momentum;                                          // 0x0040(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Athena_TNT_WithTrajectory_C_OnDamagedFatal) == 0x000008, "Wrong alignment on GA_Athena_TNT_WithTrajectory_C_OnDamagedFatal");
static_assert(sizeof(GA_Athena_TNT_WithTrajectory_C_OnDamagedFatal) == 0x000050, "Wrong size on GA_Athena_TNT_WithTrajectory_C_OnDamagedFatal");
static_assert(offsetof(GA_Athena_TNT_WithTrajectory_C_OnDamagedFatal, DamagedActor) == 0x000000, "Member 'GA_Athena_TNT_WithTrajectory_C_OnDamagedFatal::DamagedActor' has a wrong offset!");
static_assert(offsetof(GA_Athena_TNT_WithTrajectory_C_OnDamagedFatal, Damage) == 0x000008, "Member 'GA_Athena_TNT_WithTrajectory_C_OnDamagedFatal::Damage' has a wrong offset!");
static_assert(offsetof(GA_Athena_TNT_WithTrajectory_C_OnDamagedFatal, InstigatedBy) == 0x000010, "Member 'GA_Athena_TNT_WithTrajectory_C_OnDamagedFatal::InstigatedBy' has a wrong offset!");
static_assert(offsetof(GA_Athena_TNT_WithTrajectory_C_OnDamagedFatal, DamageCauser) == 0x000018, "Member 'GA_Athena_TNT_WithTrajectory_C_OnDamagedFatal::DamageCauser' has a wrong offset!");
static_assert(offsetof(GA_Athena_TNT_WithTrajectory_C_OnDamagedFatal, HitLocation) == 0x000020, "Member 'GA_Athena_TNT_WithTrajectory_C_OnDamagedFatal::HitLocation' has a wrong offset!");
static_assert(offsetof(GA_Athena_TNT_WithTrajectory_C_OnDamagedFatal, FHitComponent) == 0x000030, "Member 'GA_Athena_TNT_WithTrajectory_C_OnDamagedFatal::FHitComponent' has a wrong offset!");
static_assert(offsetof(GA_Athena_TNT_WithTrajectory_C_OnDamagedFatal, BoneName) == 0x000038, "Member 'GA_Athena_TNT_WithTrajectory_C_OnDamagedFatal::BoneName' has a wrong offset!");
static_assert(offsetof(GA_Athena_TNT_WithTrajectory_C_OnDamagedFatal, Momentum) == 0x000040, "Member 'GA_Athena_TNT_WithTrajectory_C_OnDamagedFatal::Momentum' has a wrong offset!");

// Function GA_Athena_TNT_WithTrajectory.GA_Athena_TNT_WithTrajectory_C.Spawn Server Projectile Involuntary
// 0x001C (0x001C - 0x0000)
struct GA_Athena_TNT_WithTrajectory_C_Spawn_Server_Projectile_Involuntary final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Direction;                                         // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bAllowSpawnWhenDead;                               // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bAllowSpawnWhenDBNO;                               // 0x0019(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GA_Athena_TNT_WithTrajectory_C_Spawn_Server_Projectile_Involuntary) == 0x000004, "Wrong alignment on GA_Athena_TNT_WithTrajectory_C_Spawn_Server_Projectile_Involuntary");
static_assert(sizeof(GA_Athena_TNT_WithTrajectory_C_Spawn_Server_Projectile_Involuntary) == 0x00001C, "Wrong size on GA_Athena_TNT_WithTrajectory_C_Spawn_Server_Projectile_Involuntary");
static_assert(offsetof(GA_Athena_TNT_WithTrajectory_C_Spawn_Server_Projectile_Involuntary, Location) == 0x000000, "Member 'GA_Athena_TNT_WithTrajectory_C_Spawn_Server_Projectile_Involuntary::Location' has a wrong offset!");
static_assert(offsetof(GA_Athena_TNT_WithTrajectory_C_Spawn_Server_Projectile_Involuntary, Direction) == 0x00000C, "Member 'GA_Athena_TNT_WithTrajectory_C_Spawn_Server_Projectile_Involuntary::Direction' has a wrong offset!");
static_assert(offsetof(GA_Athena_TNT_WithTrajectory_C_Spawn_Server_Projectile_Involuntary, bAllowSpawnWhenDead) == 0x000018, "Member 'GA_Athena_TNT_WithTrajectory_C_Spawn_Server_Projectile_Involuntary::bAllowSpawnWhenDead' has a wrong offset!");
static_assert(offsetof(GA_Athena_TNT_WithTrajectory_C_Spawn_Server_Projectile_Involuntary, bAllowSpawnWhenDBNO) == 0x000019, "Member 'GA_Athena_TNT_WithTrajectory_C_Spawn_Server_Projectile_Involuntary::bAllowSpawnWhenDBNO' has a wrong offset!");

// Function GA_Athena_TNT_WithTrajectory.GA_Athena_TNT_WithTrajectory_C.K2_OnEndAbility
// 0x0001 (0x0001 - 0x0000)
struct GA_Athena_TNT_WithTrajectory_C_K2_OnEndAbility final
{
public:
	bool                                          bWasCancelled;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GA_Athena_TNT_WithTrajectory_C_K2_OnEndAbility) == 0x000001, "Wrong alignment on GA_Athena_TNT_WithTrajectory_C_K2_OnEndAbility");
static_assert(sizeof(GA_Athena_TNT_WithTrajectory_C_K2_OnEndAbility) == 0x000001, "Wrong size on GA_Athena_TNT_WithTrajectory_C_K2_OnEndAbility");
static_assert(offsetof(GA_Athena_TNT_WithTrajectory_C_K2_OnEndAbility, bWasCancelled) == 0x000000, "Member 'GA_Athena_TNT_WithTrajectory_C_K2_OnEndAbility::bWasCancelled' has a wrong offset!");

// Function GA_Athena_TNT_WithTrajectory.GA_Athena_TNT_WithTrajectory_C.Created_9AAF71F0497FA46B4152D699BE4F7F03
// 0x0028 (0x0028 - 0x0000)
struct GA_Athena_TNT_WithTrajectory_C_Created_9AAF71F0497FA46B4152D699BE4F7F03 final
{
public:
	struct FProjectileEventData                   ProjectileData;                                    // 0x0000(0x0028)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(GA_Athena_TNT_WithTrajectory_C_Created_9AAF71F0497FA46B4152D699BE4F7F03) == 0x000008, "Wrong alignment on GA_Athena_TNT_WithTrajectory_C_Created_9AAF71F0497FA46B4152D699BE4F7F03");
static_assert(sizeof(GA_Athena_TNT_WithTrajectory_C_Created_9AAF71F0497FA46B4152D699BE4F7F03) == 0x000028, "Wrong size on GA_Athena_TNT_WithTrajectory_C_Created_9AAF71F0497FA46B4152D699BE4F7F03");
static_assert(offsetof(GA_Athena_TNT_WithTrajectory_C_Created_9AAF71F0497FA46B4152D699BE4F7F03, ProjectileData) == 0x000000, "Member 'GA_Athena_TNT_WithTrajectory_C_Created_9AAF71F0497FA46B4152D699BE4F7F03::ProjectileData' has a wrong offset!");

// Function GA_Athena_TNT_WithTrajectory.GA_Athena_TNT_WithTrajectory_C.Touched_9AAF71F0497FA46B4152D699BE4F7F03
// 0x0028 (0x0028 - 0x0000)
struct GA_Athena_TNT_WithTrajectory_C_Touched_9AAF71F0497FA46B4152D699BE4F7F03 final
{
public:
	struct FProjectileEventData                   ProjectileData;                                    // 0x0000(0x0028)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(GA_Athena_TNT_WithTrajectory_C_Touched_9AAF71F0497FA46B4152D699BE4F7F03) == 0x000008, "Wrong alignment on GA_Athena_TNT_WithTrajectory_C_Touched_9AAF71F0497FA46B4152D699BE4F7F03");
static_assert(sizeof(GA_Athena_TNT_WithTrajectory_C_Touched_9AAF71F0497FA46B4152D699BE4F7F03) == 0x000028, "Wrong size on GA_Athena_TNT_WithTrajectory_C_Touched_9AAF71F0497FA46B4152D699BE4F7F03");
static_assert(offsetof(GA_Athena_TNT_WithTrajectory_C_Touched_9AAF71F0497FA46B4152D699BE4F7F03, ProjectileData) == 0x000000, "Member 'GA_Athena_TNT_WithTrajectory_C_Touched_9AAF71F0497FA46B4152D699BE4F7F03::ProjectileData' has a wrong offset!");

// Function GA_Athena_TNT_WithTrajectory.GA_Athena_TNT_WithTrajectory_C.Bounced_9AAF71F0497FA46B4152D699BE4F7F03
// 0x0028 (0x0028 - 0x0000)
struct GA_Athena_TNT_WithTrajectory_C_Bounced_9AAF71F0497FA46B4152D699BE4F7F03 final
{
public:
	struct FProjectileEventData                   ProjectileData;                                    // 0x0000(0x0028)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(GA_Athena_TNT_WithTrajectory_C_Bounced_9AAF71F0497FA46B4152D699BE4F7F03) == 0x000008, "Wrong alignment on GA_Athena_TNT_WithTrajectory_C_Bounced_9AAF71F0497FA46B4152D699BE4F7F03");
static_assert(sizeof(GA_Athena_TNT_WithTrajectory_C_Bounced_9AAF71F0497FA46B4152D699BE4F7F03) == 0x000028, "Wrong size on GA_Athena_TNT_WithTrajectory_C_Bounced_9AAF71F0497FA46B4152D699BE4F7F03");
static_assert(offsetof(GA_Athena_TNT_WithTrajectory_C_Bounced_9AAF71F0497FA46B4152D699BE4F7F03, ProjectileData) == 0x000000, "Member 'GA_Athena_TNT_WithTrajectory_C_Bounced_9AAF71F0497FA46B4152D699BE4F7F03::ProjectileData' has a wrong offset!");

// Function GA_Athena_TNT_WithTrajectory.GA_Athena_TNT_WithTrajectory_C.Stopped_9AAF71F0497FA46B4152D699BE4F7F03
// 0x0028 (0x0028 - 0x0000)
struct GA_Athena_TNT_WithTrajectory_C_Stopped_9AAF71F0497FA46B4152D699BE4F7F03 final
{
public:
	struct FProjectileEventData                   ProjectileData;                                    // 0x0000(0x0028)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(GA_Athena_TNT_WithTrajectory_C_Stopped_9AAF71F0497FA46B4152D699BE4F7F03) == 0x000008, "Wrong alignment on GA_Athena_TNT_WithTrajectory_C_Stopped_9AAF71F0497FA46B4152D699BE4F7F03");
static_assert(sizeof(GA_Athena_TNT_WithTrajectory_C_Stopped_9AAF71F0497FA46B4152D699BE4F7F03) == 0x000028, "Wrong size on GA_Athena_TNT_WithTrajectory_C_Stopped_9AAF71F0497FA46B4152D699BE4F7F03");
static_assert(offsetof(GA_Athena_TNT_WithTrajectory_C_Stopped_9AAF71F0497FA46B4152D699BE4F7F03, ProjectileData) == 0x000000, "Member 'GA_Athena_TNT_WithTrajectory_C_Stopped_9AAF71F0497FA46B4152D699BE4F7F03::ProjectileData' has a wrong offset!");

// Function GA_Athena_TNT_WithTrajectory.GA_Athena_TNT_WithTrajectory_C.Exploded_9AAF71F0497FA46B4152D699BE4F7F03
// 0x0028 (0x0028 - 0x0000)
struct GA_Athena_TNT_WithTrajectory_C_Exploded_9AAF71F0497FA46B4152D699BE4F7F03 final
{
public:
	struct FProjectileEventData                   ProjectileData;                                    // 0x0000(0x0028)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(GA_Athena_TNT_WithTrajectory_C_Exploded_9AAF71F0497FA46B4152D699BE4F7F03) == 0x000008, "Wrong alignment on GA_Athena_TNT_WithTrajectory_C_Exploded_9AAF71F0497FA46B4152D699BE4F7F03");
static_assert(sizeof(GA_Athena_TNT_WithTrajectory_C_Exploded_9AAF71F0497FA46B4152D699BE4F7F03) == 0x000028, "Wrong size on GA_Athena_TNT_WithTrajectory_C_Exploded_9AAF71F0497FA46B4152D699BE4F7F03");
static_assert(offsetof(GA_Athena_TNT_WithTrajectory_C_Exploded_9AAF71F0497FA46B4152D699BE4F7F03, ProjectileData) == 0x000000, "Member 'GA_Athena_TNT_WithTrajectory_C_Exploded_9AAF71F0497FA46B4152D699BE4F7F03::ProjectileData' has a wrong offset!");

// Function GA_Athena_TNT_WithTrajectory.GA_Athena_TNT_WithTrajectory_C.Destroyed_9AAF71F0497FA46B4152D699BE4F7F03
// 0x0028 (0x0028 - 0x0000)
struct GA_Athena_TNT_WithTrajectory_C_Destroyed_9AAF71F0497FA46B4152D699BE4F7F03 final
{
public:
	struct FProjectileEventData                   ProjectileData;                                    // 0x0000(0x0028)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(GA_Athena_TNT_WithTrajectory_C_Destroyed_9AAF71F0497FA46B4152D699BE4F7F03) == 0x000008, "Wrong alignment on GA_Athena_TNT_WithTrajectory_C_Destroyed_9AAF71F0497FA46B4152D699BE4F7F03");
static_assert(sizeof(GA_Athena_TNT_WithTrajectory_C_Destroyed_9AAF71F0497FA46B4152D699BE4F7F03) == 0x000028, "Wrong size on GA_Athena_TNT_WithTrajectory_C_Destroyed_9AAF71F0497FA46B4152D699BE4F7F03");
static_assert(offsetof(GA_Athena_TNT_WithTrajectory_C_Destroyed_9AAF71F0497FA46B4152D699BE4F7F03, ProjectileData) == 0x000000, "Member 'GA_Athena_TNT_WithTrajectory_C_Destroyed_9AAF71F0497FA46B4152D699BE4F7F03::ProjectileData' has a wrong offset!");

// Function GA_Athena_TNT_WithTrajectory.GA_Athena_TNT_WithTrajectory_C.CurveRowLookup
// 0x0024 (0x0024 - 0x0000)
struct GA_Athena_TNT_WithTrajectory_C_CurveRowLookup final
{
public:
	EEvaluateCurveTableResult                     CallFunc_EvaluateCurveTableRow_OutResult;          // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_EvaluateCurveTableRow_OutXY;              // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EEvaluateCurveTableResult                     CallFunc_EvaluateCurveTableRow_OutResult_1;        // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x2];                                        // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_EvaluateCurveTableRow_OutXY_1;            // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEvaluateCurveTableResult                     CallFunc_EvaluateCurveTableRow_OutResult_2;        // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_EvaluateCurveTableRow_OutXY_2;            // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess_2;                    // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EEvaluateCurveTableResult                     CallFunc_EvaluateCurveTableRow_OutResult_3;        // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B[0x1];                                       // 0x001B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_EvaluateCurveTableRow_OutXY_3;            // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_3;                    // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GA_Athena_TNT_WithTrajectory_C_CurveRowLookup) == 0x000004, "Wrong alignment on GA_Athena_TNT_WithTrajectory_C_CurveRowLookup");
static_assert(sizeof(GA_Athena_TNT_WithTrajectory_C_CurveRowLookup) == 0x000024, "Wrong size on GA_Athena_TNT_WithTrajectory_C_CurveRowLookup");
static_assert(offsetof(GA_Athena_TNT_WithTrajectory_C_CurveRowLookup, CallFunc_EvaluateCurveTableRow_OutResult) == 0x000000, "Member 'GA_Athena_TNT_WithTrajectory_C_CurveRowLookup::CallFunc_EvaluateCurveTableRow_OutResult' has a wrong offset!");
static_assert(offsetof(GA_Athena_TNT_WithTrajectory_C_CurveRowLookup, CallFunc_EvaluateCurveTableRow_OutXY) == 0x000004, "Member 'GA_Athena_TNT_WithTrajectory_C_CurveRowLookup::CallFunc_EvaluateCurveTableRow_OutXY' has a wrong offset!");
static_assert(offsetof(GA_Athena_TNT_WithTrajectory_C_CurveRowLookup, K2Node_SwitchEnum_CmpSuccess) == 0x000008, "Member 'GA_Athena_TNT_WithTrajectory_C_CurveRowLookup::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(GA_Athena_TNT_WithTrajectory_C_CurveRowLookup, CallFunc_EvaluateCurveTableRow_OutResult_1) == 0x000009, "Member 'GA_Athena_TNT_WithTrajectory_C_CurveRowLookup::CallFunc_EvaluateCurveTableRow_OutResult_1' has a wrong offset!");
static_assert(offsetof(GA_Athena_TNT_WithTrajectory_C_CurveRowLookup, CallFunc_EvaluateCurveTableRow_OutXY_1) == 0x00000C, "Member 'GA_Athena_TNT_WithTrajectory_C_CurveRowLookup::CallFunc_EvaluateCurveTableRow_OutXY_1' has a wrong offset!");
static_assert(offsetof(GA_Athena_TNT_WithTrajectory_C_CurveRowLookup, CallFunc_EvaluateCurveTableRow_OutResult_2) == 0x000010, "Member 'GA_Athena_TNT_WithTrajectory_C_CurveRowLookup::CallFunc_EvaluateCurveTableRow_OutResult_2' has a wrong offset!");
static_assert(offsetof(GA_Athena_TNT_WithTrajectory_C_CurveRowLookup, CallFunc_EvaluateCurveTableRow_OutXY_2) == 0x000014, "Member 'GA_Athena_TNT_WithTrajectory_C_CurveRowLookup::CallFunc_EvaluateCurveTableRow_OutXY_2' has a wrong offset!");
static_assert(offsetof(GA_Athena_TNT_WithTrajectory_C_CurveRowLookup, K2Node_SwitchEnum_CmpSuccess_1) == 0x000018, "Member 'GA_Athena_TNT_WithTrajectory_C_CurveRowLookup::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(GA_Athena_TNT_WithTrajectory_C_CurveRowLookup, K2Node_SwitchEnum_CmpSuccess_2) == 0x000019, "Member 'GA_Athena_TNT_WithTrajectory_C_CurveRowLookup::K2Node_SwitchEnum_CmpSuccess_2' has a wrong offset!");
static_assert(offsetof(GA_Athena_TNT_WithTrajectory_C_CurveRowLookup, CallFunc_EvaluateCurveTableRow_OutResult_3) == 0x00001A, "Member 'GA_Athena_TNT_WithTrajectory_C_CurveRowLookup::CallFunc_EvaluateCurveTableRow_OutResult_3' has a wrong offset!");
static_assert(offsetof(GA_Athena_TNT_WithTrajectory_C_CurveRowLookup, CallFunc_EvaluateCurveTableRow_OutXY_3) == 0x00001C, "Member 'GA_Athena_TNT_WithTrajectory_C_CurveRowLookup::CallFunc_EvaluateCurveTableRow_OutXY_3' has a wrong offset!");
static_assert(offsetof(GA_Athena_TNT_WithTrajectory_C_CurveRowLookup, K2Node_SwitchEnum_CmpSuccess_3) == 0x000020, "Member 'GA_Athena_TNT_WithTrajectory_C_CurveRowLookup::K2Node_SwitchEnum_CmpSuccess_3' has a wrong offset!");

// Function GA_Athena_TNT_WithTrajectory.GA_Athena_TNT_WithTrajectory_C.SpawnLocationAndRotation
// 0x00B0 (0x00B0 - 0x0000)
struct GA_Athena_TNT_WithTrajectory_C_SpawnLocationAndRotation final
{
public:
	struct FVector                                OutLoc;                                            // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               OutRot;                                            // 0x000C(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerPawn*                        CallFunc_GetOwningPlayer_Player_Pawn;              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerPawn*                        CallFunc_GetOwningPlayer_Player_Pawn_1;            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetDefaultTargetingRotation_ReturnValue;  // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0048(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll_1;                      // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_1;                     // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_1;                       // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Percent_FloatFloat_ReturnValue;           // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0068(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Select_Default;                             // 0x0078(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RotateAngleAxis_ReturnValue;              // 0x0088(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMin_ReturnValue;                         // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0098(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x00A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GA_Athena_TNT_WithTrajectory_C_SpawnLocationAndRotation) == 0x000008, "Wrong alignment on GA_Athena_TNT_WithTrajectory_C_SpawnLocationAndRotation");
static_assert(sizeof(GA_Athena_TNT_WithTrajectory_C_SpawnLocationAndRotation) == 0x0000B0, "Wrong size on GA_Athena_TNT_WithTrajectory_C_SpawnLocationAndRotation");
static_assert(offsetof(GA_Athena_TNT_WithTrajectory_C_SpawnLocationAndRotation, OutLoc) == 0x000000, "Member 'GA_Athena_TNT_WithTrajectory_C_SpawnLocationAndRotation::OutLoc' has a wrong offset!");
static_assert(offsetof(GA_Athena_TNT_WithTrajectory_C_SpawnLocationAndRotation, OutRot) == 0x00000C, "Member 'GA_Athena_TNT_WithTrajectory_C_SpawnLocationAndRotation::OutRot' has a wrong offset!");
static_assert(offsetof(GA_Athena_TNT_WithTrajectory_C_SpawnLocationAndRotation, Temp_bool_Variable) == 0x000018, "Member 'GA_Athena_TNT_WithTrajectory_C_SpawnLocationAndRotation::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(GA_Athena_TNT_WithTrajectory_C_SpawnLocationAndRotation, CallFunc_GetOwningPlayer_Player_Pawn) == 0x000020, "Member 'GA_Athena_TNT_WithTrajectory_C_SpawnLocationAndRotation::CallFunc_GetOwningPlayer_Player_Pawn' has a wrong offset!");
static_assert(offsetof(GA_Athena_TNT_WithTrajectory_C_SpawnLocationAndRotation, CallFunc_GetOwningPlayer_Player_Pawn_1) == 0x000028, "Member 'GA_Athena_TNT_WithTrajectory_C_SpawnLocationAndRotation::CallFunc_GetOwningPlayer_Player_Pawn_1' has a wrong offset!");
static_assert(offsetof(GA_Athena_TNT_WithTrajectory_C_SpawnLocationAndRotation, CallFunc_GetDefaultTargetingRotation_ReturnValue) == 0x000030, "Member 'GA_Athena_TNT_WithTrajectory_C_SpawnLocationAndRotation::CallFunc_GetDefaultTargetingRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_TNT_WithTrajectory_C_SpawnLocationAndRotation, CallFunc_BreakRotator_Roll) == 0x00003C, "Member 'GA_Athena_TNT_WithTrajectory_C_SpawnLocationAndRotation::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(GA_Athena_TNT_WithTrajectory_C_SpawnLocationAndRotation, CallFunc_BreakRotator_Pitch) == 0x000040, "Member 'GA_Athena_TNT_WithTrajectory_C_SpawnLocationAndRotation::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(GA_Athena_TNT_WithTrajectory_C_SpawnLocationAndRotation, CallFunc_BreakRotator_Yaw) == 0x000044, "Member 'GA_Athena_TNT_WithTrajectory_C_SpawnLocationAndRotation::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(GA_Athena_TNT_WithTrajectory_C_SpawnLocationAndRotation, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000048, "Member 'GA_Athena_TNT_WithTrajectory_C_SpawnLocationAndRotation::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_TNT_WithTrajectory_C_SpawnLocationAndRotation, CallFunc_Add_FloatFloat_ReturnValue) == 0x000054, "Member 'GA_Athena_TNT_WithTrajectory_C_SpawnLocationAndRotation::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_TNT_WithTrajectory_C_SpawnLocationAndRotation, CallFunc_BreakRotator_Roll_1) == 0x000058, "Member 'GA_Athena_TNT_WithTrajectory_C_SpawnLocationAndRotation::CallFunc_BreakRotator_Roll_1' has a wrong offset!");
static_assert(offsetof(GA_Athena_TNT_WithTrajectory_C_SpawnLocationAndRotation, CallFunc_BreakRotator_Pitch_1) == 0x00005C, "Member 'GA_Athena_TNT_WithTrajectory_C_SpawnLocationAndRotation::CallFunc_BreakRotator_Pitch_1' has a wrong offset!");
static_assert(offsetof(GA_Athena_TNT_WithTrajectory_C_SpawnLocationAndRotation, CallFunc_BreakRotator_Yaw_1) == 0x000060, "Member 'GA_Athena_TNT_WithTrajectory_C_SpawnLocationAndRotation::CallFunc_BreakRotator_Yaw_1' has a wrong offset!");
static_assert(offsetof(GA_Athena_TNT_WithTrajectory_C_SpawnLocationAndRotation, CallFunc_Percent_FloatFloat_ReturnValue) == 0x000064, "Member 'GA_Athena_TNT_WithTrajectory_C_SpawnLocationAndRotation::CallFunc_Percent_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_TNT_WithTrajectory_C_SpawnLocationAndRotation, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000068, "Member 'GA_Athena_TNT_WithTrajectory_C_SpawnLocationAndRotation::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_TNT_WithTrajectory_C_SpawnLocationAndRotation, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000074, "Member 'GA_Athena_TNT_WithTrajectory_C_SpawnLocationAndRotation::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_TNT_WithTrajectory_C_SpawnLocationAndRotation, K2Node_Select_Default) == 0x000078, "Member 'GA_Athena_TNT_WithTrajectory_C_SpawnLocationAndRotation::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(GA_Athena_TNT_WithTrajectory_C_SpawnLocationAndRotation, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x000084, "Member 'GA_Athena_TNT_WithTrajectory_C_SpawnLocationAndRotation::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_Athena_TNT_WithTrajectory_C_SpawnLocationAndRotation, CallFunc_RotateAngleAxis_ReturnValue) == 0x000088, "Member 'GA_Athena_TNT_WithTrajectory_C_SpawnLocationAndRotation::CallFunc_RotateAngleAxis_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_TNT_WithTrajectory_C_SpawnLocationAndRotation, CallFunc_FMin_ReturnValue) == 0x000094, "Member 'GA_Athena_TNT_WithTrajectory_C_SpawnLocationAndRotation::CallFunc_FMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_TNT_WithTrajectory_C_SpawnLocationAndRotation, CallFunc_Add_VectorVector_ReturnValue) == 0x000098, "Member 'GA_Athena_TNT_WithTrajectory_C_SpawnLocationAndRotation::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_TNT_WithTrajectory_C_SpawnLocationAndRotation, CallFunc_MakeRotator_ReturnValue) == 0x0000A4, "Member 'GA_Athena_TNT_WithTrajectory_C_SpawnLocationAndRotation::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");

}

