#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Mech_Veh_ControRig_Parts

#include "Basic.hpp"

#include "ControlRig_structs.hpp"
#include "ControlRig_classes.hpp"


namespace SDK
{

// ControlRigBlueprintGeneratedClass Mech_Veh_ControRig_Parts.Mech_Veh_ControRig_Parts_C
// 0x0F28 (0x11A0 - 0x0278)
class UMech_Veh_ControRig_Parts_C final : public UControlRig
{
public:
	struct FRigUnit_BeginExecution                BeginExecution_0;                                  // 0x0278(0x0040)(Edit, BlueprintVisible, DisableEditOnInstance)
	uint8                                         Pad_2B8[0x8];                                      // 0x02B8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRigUnit_AimBone                       AimBone_0;                                         // 0x02C0(0x0100)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FRigUnit_Control                       Paw_Calf_L;                                        // 0x03C0(0x00F0)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FRigUnit_SetBoneRotation               SetBoneRotation_0;                                 // 0x04B0(0x0070)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FRigUnit_GetInitialBoneTransform       GetInitialBoneTransform_0;                         // 0x0520(0x0070)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FRigUnit_AimBone                       AimBone_1;                                         // 0x0590(0x0100)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FRigUnit_GetInitialBoneTransform       GetInitialBoneTransform_1;                         // 0x0690(0x0070)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FRigUnit_Control                       Paw_Thigh_L;                                       // 0x0700(0x00F0)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FRigUnit_SetBoneRotation               SetBoneRotation_1;                                 // 0x07F0(0x0070)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FRigUnit_AimBone                       AimBone_2;                                         // 0x0860(0x0100)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FRigUnit_AimBone                       AimBone_3;                                         // 0x0960(0x0100)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FRigUnit_Control                       Clav_L;                                            // 0x0A60(0x00F0)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FRigUnit_GetInitialBoneTransform       GetInitialBoneTransform_2;                         // 0x0B50(0x0070)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FRigUnit_SetBoneRotation               SetBoneRotation_2;                                 // 0x0BC0(0x0070)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FRigUnit_GetInitialBoneTransform       GetInitialBoneTransform_5;                         // 0x0C30(0x0070)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FRigUnit_Control                       Upperarm_L;                                        // 0x0CA0(0x00F0)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FRigUnit_SetBoneRotation               SetBoneRotation_4;                                 // 0x0D90(0x0070)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FRigUnit_Control                       Clav_R;                                            // 0x0E00(0x00F0)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FRigUnit_GetInitialBoneTransform       GetInitialBoneTransform_8;                         // 0x0EF0(0x0070)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FRigUnit_SetBoneRotation               SetBoneRotation_6;                                 // 0x0F60(0x0070)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FRigUnit_GetInitialBoneTransform       GetInitialBoneTransform_9;                         // 0x0FD0(0x0070)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FRigUnit_Control                       Upperarm_R;                                        // 0x1040(0x00F0)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FRigUnit_SetBoneRotation               SetBoneRotation_7;                                 // 0x1130(0x0070)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Mech_Veh_ControRig_Parts_C">();
	}
	static class UMech_Veh_ControRig_Parts_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMech_Veh_ControRig_Parts_C>();
	}
};
static_assert(alignof(UMech_Veh_ControRig_Parts_C) == 0x000010, "Wrong alignment on UMech_Veh_ControRig_Parts_C");
static_assert(sizeof(UMech_Veh_ControRig_Parts_C) == 0x0011A0, "Wrong size on UMech_Veh_ControRig_Parts_C");
static_assert(offsetof(UMech_Veh_ControRig_Parts_C, BeginExecution_0) == 0x000278, "Member 'UMech_Veh_ControRig_Parts_C::BeginExecution_0' has a wrong offset!");
static_assert(offsetof(UMech_Veh_ControRig_Parts_C, AimBone_0) == 0x0002C0, "Member 'UMech_Veh_ControRig_Parts_C::AimBone_0' has a wrong offset!");
static_assert(offsetof(UMech_Veh_ControRig_Parts_C, Paw_Calf_L) == 0x0003C0, "Member 'UMech_Veh_ControRig_Parts_C::Paw_Calf_L' has a wrong offset!");
static_assert(offsetof(UMech_Veh_ControRig_Parts_C, SetBoneRotation_0) == 0x0004B0, "Member 'UMech_Veh_ControRig_Parts_C::SetBoneRotation_0' has a wrong offset!");
static_assert(offsetof(UMech_Veh_ControRig_Parts_C, GetInitialBoneTransform_0) == 0x000520, "Member 'UMech_Veh_ControRig_Parts_C::GetInitialBoneTransform_0' has a wrong offset!");
static_assert(offsetof(UMech_Veh_ControRig_Parts_C, AimBone_1) == 0x000590, "Member 'UMech_Veh_ControRig_Parts_C::AimBone_1' has a wrong offset!");
static_assert(offsetof(UMech_Veh_ControRig_Parts_C, GetInitialBoneTransform_1) == 0x000690, "Member 'UMech_Veh_ControRig_Parts_C::GetInitialBoneTransform_1' has a wrong offset!");
static_assert(offsetof(UMech_Veh_ControRig_Parts_C, Paw_Thigh_L) == 0x000700, "Member 'UMech_Veh_ControRig_Parts_C::Paw_Thigh_L' has a wrong offset!");
static_assert(offsetof(UMech_Veh_ControRig_Parts_C, SetBoneRotation_1) == 0x0007F0, "Member 'UMech_Veh_ControRig_Parts_C::SetBoneRotation_1' has a wrong offset!");
static_assert(offsetof(UMech_Veh_ControRig_Parts_C, AimBone_2) == 0x000860, "Member 'UMech_Veh_ControRig_Parts_C::AimBone_2' has a wrong offset!");
static_assert(offsetof(UMech_Veh_ControRig_Parts_C, AimBone_3) == 0x000960, "Member 'UMech_Veh_ControRig_Parts_C::AimBone_3' has a wrong offset!");
static_assert(offsetof(UMech_Veh_ControRig_Parts_C, Clav_L) == 0x000A60, "Member 'UMech_Veh_ControRig_Parts_C::Clav_L' has a wrong offset!");
static_assert(offsetof(UMech_Veh_ControRig_Parts_C, GetInitialBoneTransform_2) == 0x000B50, "Member 'UMech_Veh_ControRig_Parts_C::GetInitialBoneTransform_2' has a wrong offset!");
static_assert(offsetof(UMech_Veh_ControRig_Parts_C, SetBoneRotation_2) == 0x000BC0, "Member 'UMech_Veh_ControRig_Parts_C::SetBoneRotation_2' has a wrong offset!");
static_assert(offsetof(UMech_Veh_ControRig_Parts_C, GetInitialBoneTransform_5) == 0x000C30, "Member 'UMech_Veh_ControRig_Parts_C::GetInitialBoneTransform_5' has a wrong offset!");
static_assert(offsetof(UMech_Veh_ControRig_Parts_C, Upperarm_L) == 0x000CA0, "Member 'UMech_Veh_ControRig_Parts_C::Upperarm_L' has a wrong offset!");
static_assert(offsetof(UMech_Veh_ControRig_Parts_C, SetBoneRotation_4) == 0x000D90, "Member 'UMech_Veh_ControRig_Parts_C::SetBoneRotation_4' has a wrong offset!");
static_assert(offsetof(UMech_Veh_ControRig_Parts_C, Clav_R) == 0x000E00, "Member 'UMech_Veh_ControRig_Parts_C::Clav_R' has a wrong offset!");
static_assert(offsetof(UMech_Veh_ControRig_Parts_C, GetInitialBoneTransform_8) == 0x000EF0, "Member 'UMech_Veh_ControRig_Parts_C::GetInitialBoneTransform_8' has a wrong offset!");
static_assert(offsetof(UMech_Veh_ControRig_Parts_C, SetBoneRotation_6) == 0x000F60, "Member 'UMech_Veh_ControRig_Parts_C::SetBoneRotation_6' has a wrong offset!");
static_assert(offsetof(UMech_Veh_ControRig_Parts_C, GetInitialBoneTransform_9) == 0x000FD0, "Member 'UMech_Veh_ControRig_Parts_C::GetInitialBoneTransform_9' has a wrong offset!");
static_assert(offsetof(UMech_Veh_ControRig_Parts_C, Upperarm_R) == 0x001040, "Member 'UMech_Veh_ControRig_Parts_C::Upperarm_R' has a wrong offset!");
static_assert(offsetof(UMech_Veh_ControRig_Parts_C, SetBoneRotation_7) == 0x001130, "Member 'UMech_Veh_ControRig_Parts_C::SetBoneRotation_7' has a wrong offset!");

}

