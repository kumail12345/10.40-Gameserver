#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_Prj_Athena_SilverBlazer_V2

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FortniteGame_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass B_Prj_Athena_SilverBlazer_V2.B_Prj_Athena_SilverBlazer_V2_C
// 0x0060 (0x07D8 - 0x0778)
class AB_Prj_Athena_SilverBlazer_V2_C final : public AFortProjectileBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0778(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UParticleSystemComponent*               P_ShieldBubble_SilverBlazer_PrjTrail;              // 0x0780(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 SK_SilverBlazer;                                   // 0x0788(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         FoundBuildingOnDied;                               // 0x0790(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance)
	bool                                          bResumeSimulation;                                 // 0x07A0(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor)
	uint8                                         Pad_7A1[0x3];                                      // 0x07A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         MinDistanceToKnock;                                // 0x07A4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MaxLaunchPower;                                    // 0x07A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7AC[0x4];                                      // 0x07AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        BeatAudioComponent;                                // 0x07B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         BeatMultiplierForStart;                            // 0x07B8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         BeatsPerLoop;                                      // 0x07BC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrentBeatInTheLoop;                              // 0x07C0(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MinLaunchPower;                                    // 0x07C4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 BlazerToSpawn;                                     // 0x07C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             SoundActivate;                                     // 0x07D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_B_Prj_Athena_SilverBlazer_V2(int32 EntryPoint);
	void SpawnBGA(const struct FHitResult& HitResult, class UPrimitiveComponent* HitComp, const struct FVector& Pos);
	void ReceiveHit(class UPrimitiveComponent* MyComp, class AActor* Other, class UPrimitiveComponent* OtherComp, bool bSelfMoved, const struct FVector& HitLocation, const struct FVector& HitNormal, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
	void OnStop(const struct FHitResult& Hit);
	bool WillBounceOffTarget(const struct FHitResult& Hit);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"B_Prj_Athena_SilverBlazer_V2_C">();
	}
	static class AB_Prj_Athena_SilverBlazer_V2_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AB_Prj_Athena_SilverBlazer_V2_C>();
	}
};
static_assert(alignof(AB_Prj_Athena_SilverBlazer_V2_C) == 0x000008, "Wrong alignment on AB_Prj_Athena_SilverBlazer_V2_C");
static_assert(sizeof(AB_Prj_Athena_SilverBlazer_V2_C) == 0x0007D8, "Wrong size on AB_Prj_Athena_SilverBlazer_V2_C");
static_assert(offsetof(AB_Prj_Athena_SilverBlazer_V2_C, UberGraphFrame) == 0x000778, "Member 'AB_Prj_Athena_SilverBlazer_V2_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_SilverBlazer_V2_C, P_ShieldBubble_SilverBlazer_PrjTrail) == 0x000780, "Member 'AB_Prj_Athena_SilverBlazer_V2_C::P_ShieldBubble_SilverBlazer_PrjTrail' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_SilverBlazer_V2_C, SK_SilverBlazer) == 0x000788, "Member 'AB_Prj_Athena_SilverBlazer_V2_C::SK_SilverBlazer' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_SilverBlazer_V2_C, FoundBuildingOnDied) == 0x000790, "Member 'AB_Prj_Athena_SilverBlazer_V2_C::FoundBuildingOnDied' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_SilverBlazer_V2_C, bResumeSimulation) == 0x0007A0, "Member 'AB_Prj_Athena_SilverBlazer_V2_C::bResumeSimulation' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_SilverBlazer_V2_C, MinDistanceToKnock) == 0x0007A4, "Member 'AB_Prj_Athena_SilverBlazer_V2_C::MinDistanceToKnock' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_SilverBlazer_V2_C, MaxLaunchPower) == 0x0007A8, "Member 'AB_Prj_Athena_SilverBlazer_V2_C::MaxLaunchPower' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_SilverBlazer_V2_C, BeatAudioComponent) == 0x0007B0, "Member 'AB_Prj_Athena_SilverBlazer_V2_C::BeatAudioComponent' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_SilverBlazer_V2_C, BeatMultiplierForStart) == 0x0007B8, "Member 'AB_Prj_Athena_SilverBlazer_V2_C::BeatMultiplierForStart' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_SilverBlazer_V2_C, BeatsPerLoop) == 0x0007BC, "Member 'AB_Prj_Athena_SilverBlazer_V2_C::BeatsPerLoop' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_SilverBlazer_V2_C, CurrentBeatInTheLoop) == 0x0007C0, "Member 'AB_Prj_Athena_SilverBlazer_V2_C::CurrentBeatInTheLoop' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_SilverBlazer_V2_C, MinLaunchPower) == 0x0007C4, "Member 'AB_Prj_Athena_SilverBlazer_V2_C::MinLaunchPower' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_SilverBlazer_V2_C, BlazerToSpawn) == 0x0007C8, "Member 'AB_Prj_Athena_SilverBlazer_V2_C::BlazerToSpawn' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_SilverBlazer_V2_C, SoundActivate) == 0x0007D0, "Member 'AB_Prj_Athena_SilverBlazer_V2_C::SoundActivate' has a wrong offset!");

}

