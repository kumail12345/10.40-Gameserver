#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_AvailableSparks

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FortniteUI_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_AvailableSparks.W_AvailableSparks_C
// 0x0058 (0x02C8 - 0x0270)
class UW_AvailableSparks_C final : public UFortCommunityVotingAvailableVotesWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0270(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Idle;                                              // 0x0278(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       idle_to_LastDayMessage;                            // 0x0280(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       idle_to_countdown;                                 // 0x0288(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       decrement;                                         // 0x0290(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Increment;                                         // 0x0298(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 Com_LikeCounter_BG;                                // 0x02A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Com_LikeCounter_BG_5;                              // 0x02A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Com_LikeCounter_BG_6;                              // 0x02B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 flameInCounter;                                    // 0x02B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 flameInCounter_2;                                  // 0x02C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	void PlayIncreaseVote();
	void PlayDecreaseVote();
	void PlayCountdown(float StartValue);
	void PlayEventOver(float StartValue);
	void PlayAvailableVotes();
	void PlayIdle();
	void ExecuteUbergraph_W_AvailableSparks(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_AvailableSparks_C">();
	}
	static class UW_AvailableSparks_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_AvailableSparks_C>();
	}
};
static_assert(alignof(UW_AvailableSparks_C) == 0x000008, "Wrong alignment on UW_AvailableSparks_C");
static_assert(sizeof(UW_AvailableSparks_C) == 0x0002C8, "Wrong size on UW_AvailableSparks_C");
static_assert(offsetof(UW_AvailableSparks_C, UberGraphFrame) == 0x000270, "Member 'UW_AvailableSparks_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UW_AvailableSparks_C, Idle) == 0x000278, "Member 'UW_AvailableSparks_C::Idle' has a wrong offset!");
static_assert(offsetof(UW_AvailableSparks_C, idle_to_LastDayMessage) == 0x000280, "Member 'UW_AvailableSparks_C::idle_to_LastDayMessage' has a wrong offset!");
static_assert(offsetof(UW_AvailableSparks_C, idle_to_countdown) == 0x000288, "Member 'UW_AvailableSparks_C::idle_to_countdown' has a wrong offset!");
static_assert(offsetof(UW_AvailableSparks_C, decrement) == 0x000290, "Member 'UW_AvailableSparks_C::decrement' has a wrong offset!");
static_assert(offsetof(UW_AvailableSparks_C, Increment) == 0x000298, "Member 'UW_AvailableSparks_C::Increment' has a wrong offset!");
static_assert(offsetof(UW_AvailableSparks_C, Com_LikeCounter_BG) == 0x0002A0, "Member 'UW_AvailableSparks_C::Com_LikeCounter_BG' has a wrong offset!");
static_assert(offsetof(UW_AvailableSparks_C, Com_LikeCounter_BG_5) == 0x0002A8, "Member 'UW_AvailableSparks_C::Com_LikeCounter_BG_5' has a wrong offset!");
static_assert(offsetof(UW_AvailableSparks_C, Com_LikeCounter_BG_6) == 0x0002B0, "Member 'UW_AvailableSparks_C::Com_LikeCounter_BG_6' has a wrong offset!");
static_assert(offsetof(UW_AvailableSparks_C, flameInCounter) == 0x0002B8, "Member 'UW_AvailableSparks_C::flameInCounter' has a wrong offset!");
static_assert(offsetof(UW_AvailableSparks_C, flameInCounter_2) == 0x0002C0, "Member 'UW_AvailableSparks_C::flameInCounter_2' has a wrong offset!");

}

