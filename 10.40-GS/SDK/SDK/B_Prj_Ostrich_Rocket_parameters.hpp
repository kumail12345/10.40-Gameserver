#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_Prj_Ostrich_Rocket

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "FortniteGame_structs.hpp"


namespace SDK::Params
{

// Function B_Prj_Ostrich_Rocket.B_Prj_Ostrich_Rocket_C.ExecuteUbergraph_B_Prj_Ostrich_Rocket
// 0x0448 (0x0448 - 0x0000)
struct B_Prj_Ostrich_Rocket_C_ExecuteUbergraph_B_Prj_Ostrich_Rocket final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsBeingKilled_ReturnValue;                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         K2Node_Event_HitActors;                            // 0x0008(0x0010)(ConstParm, ZeroConstructor, ReferenceParm)
	TArray<struct FHitResult>                     K2Node_Event_HitResults;                           // 0x0018(0x0010)(ConstParm, ZeroConstructor, ReferenceParm, ContainsInstancedReference)
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAtLocation_ReturnValue;       // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAtLocation_ReturnValue_1;     // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_1;          // 0x004D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x004E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4F[0x1];                                       // 0x004F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_Event_Hit;                                  // 0x0050(0x0088)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x00D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DA[0x2];                                       // 0x00DA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x00E4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x00F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x00FC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0108(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_114[0x4];                                      // 0x0114(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0128(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0140(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x014C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue;                  // 0x0158(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotFromZ_ReturnValue;                 // 0x0160(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x016C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0178(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_184[0x4];                                      // 0x0184(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_OtherActor;                           // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_Event_OtherComp;                            // 0x0190(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event_HitResult;                            // 0x0198(0x0088)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          K2Node_Event_bIsOverlap;                           // 0x0220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_2;          // 0x0221(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_1;            // 0x0222(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_1;         // 0x0223(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakHitResult_Time_1;                    // 0x0224(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_1;                // 0x0228(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location_1;                // 0x022C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_1;             // 0x0238(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_1;                  // 0x0244(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_1;            // 0x0250(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25C[0x4];                                      // 0x025C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_1;                 // 0x0260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_1;                // 0x0268(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_1;            // 0x0270(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_1;             // 0x0278(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_1;                 // 0x0280(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_1;               // 0x0284(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart_1;              // 0x0288(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_1;                // 0x0294(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ComponentHasTag_ReturnValue;              // 0x02A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_3;          // 0x02A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A2[0x2];                                      // 0x02A2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x02A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x02B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FProjectileHomingData                  K2Node_MakeStruct_ProjectileHomingData;            // 0x02BC(0x003C)(NoDestructor)
	bool                                          CallFunc_IsActive_ReturnValue;                     // 0x02F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F9[0x3];                                      // 0x02F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_AddLocalRotation_SweepHitResult;       // 0x02FC(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_1;    // 0x0384(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 CallFunc_MakeGameplayCueParameters_ReturnValue;    // 0x0390(0x00B8)(ContainsInstancedReference)
};
static_assert(alignof(B_Prj_Ostrich_Rocket_C_ExecuteUbergraph_B_Prj_Ostrich_Rocket) == 0x000008, "Wrong alignment on B_Prj_Ostrich_Rocket_C_ExecuteUbergraph_B_Prj_Ostrich_Rocket");
static_assert(sizeof(B_Prj_Ostrich_Rocket_C_ExecuteUbergraph_B_Prj_Ostrich_Rocket) == 0x000448, "Wrong size on B_Prj_Ostrich_Rocket_C_ExecuteUbergraph_B_Prj_Ostrich_Rocket");
static_assert(offsetof(B_Prj_Ostrich_Rocket_C_ExecuteUbergraph_B_Prj_Ostrich_Rocket, EntryPoint) == 0x000000, "Member 'B_Prj_Ostrich_Rocket_C_ExecuteUbergraph_B_Prj_Ostrich_Rocket::EntryPoint' has a wrong offset!");
static_assert(offsetof(B_Prj_Ostrich_Rocket_C_ExecuteUbergraph_B_Prj_Ostrich_Rocket, CallFunc_HasAuthority_ReturnValue) == 0x000004, "Member 'B_Prj_Ostrich_Rocket_C_ExecuteUbergraph_B_Prj_Ostrich_Rocket::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_Ostrich_Rocket_C_ExecuteUbergraph_B_Prj_Ostrich_Rocket, CallFunc_IsBeingKilled_ReturnValue) == 0x000005, "Member 'B_Prj_Ostrich_Rocket_C_ExecuteUbergraph_B_Prj_Ostrich_Rocket::CallFunc_IsBeingKilled_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_Ostrich_Rocket_C_ExecuteUbergraph_B_Prj_Ostrich_Rocket, K2Node_Event_HitActors) == 0x000008, "Member 'B_Prj_Ostrich_Rocket_C_ExecuteUbergraph_B_Prj_Ostrich_Rocket::K2Node_Event_HitActors' has a wrong offset!");
static_assert(offsetof(B_Prj_Ostrich_Rocket_C_ExecuteUbergraph_B_Prj_Ostrich_Rocket, K2Node_Event_HitResults) == 0x000018, "Member 'B_Prj_Ostrich_Rocket_C_ExecuteUbergraph_B_Prj_Ostrich_Rocket::K2Node_Event_HitResults' has a wrong offset!");
static_assert(offsetof(B_Prj_Ostrich_Rocket_C_ExecuteUbergraph_B_Prj_Ostrich_Rocket, CallFunc_SpawnEmitterAtLocation_ReturnValue) == 0x000028, "Member 'B_Prj_Ostrich_Rocket_C_ExecuteUbergraph_B_Prj_Ostrich_Rocket::CallFunc_SpawnEmitterAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_Ostrich_Rocket_C_ExecuteUbergraph_B_Prj_Ostrich_Rocket, CallFunc_SpawnEmitterAtLocation_ReturnValue_1) == 0x000030, "Member 'B_Prj_Ostrich_Rocket_C_ExecuteUbergraph_B_Prj_Ostrich_Rocket::CallFunc_SpawnEmitterAtLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_Prj_Ostrich_Rocket_C_ExecuteUbergraph_B_Prj_Ostrich_Rocket, K2Node_Event_DeltaSeconds) == 0x000038, "Member 'B_Prj_Ostrich_Rocket_C_ExecuteUbergraph_B_Prj_Ostrich_Rocket::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(B_Prj_Ostrich_Rocket_C_ExecuteUbergraph_B_Prj_Ostrich_Rocket, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00003C, "Member 'B_Prj_Ostrich_Rocket_C_ExecuteUbergraph_B_Prj_Ostrich_Rocket::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_Ostrich_Rocket_C_ExecuteUbergraph_B_Prj_Ostrich_Rocket, CallFunc_MakeRotator_ReturnValue) == 0x000040, "Member 'B_Prj_Ostrich_Rocket_C_ExecuteUbergraph_B_Prj_Ostrich_Rocket::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_Ostrich_Rocket_C_ExecuteUbergraph_B_Prj_Ostrich_Rocket, CallFunc_IsDedicatedServer_ReturnValue) == 0x00004C, "Member 'B_Prj_Ostrich_Rocket_C_ExecuteUbergraph_B_Prj_Ostrich_Rocket::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_Ostrich_Rocket_C_ExecuteUbergraph_B_Prj_Ostrich_Rocket, CallFunc_IsDedicatedServer_ReturnValue_1) == 0x00004D, "Member 'B_Prj_Ostrich_Rocket_C_ExecuteUbergraph_B_Prj_Ostrich_Rocket::CallFunc_IsDedicatedServer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_Prj_Ostrich_Rocket_C_ExecuteUbergraph_B_Prj_Ostrich_Rocket, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00004E, "Member 'B_Prj_Ostrich_Rocket_C_ExecuteUbergraph_B_Prj_Ostrich_Rocket::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_Ostrich_Rocket_C_ExecuteUbergraph_B_Prj_Ostrich_Rocket, K2Node_Event_Hit) == 0x000050, "Member 'B_Prj_Ostrich_Rocket_C_ExecuteUbergraph_B_Prj_Ostrich_Rocket::K2Node_Event_Hit' has a wrong offset!");
static_assert(offsetof(B_Prj_Ostrich_Rocket_C_ExecuteUbergraph_B_Prj_Ostrich_Rocket, CallFunc_BreakHitResult_bBlockingHit) == 0x0000D8, "Member 'B_Prj_Ostrich_Rocket_C_ExecuteUbergraph_B_Prj_Ostrich_Rocket::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(B_Prj_Ostrich_Rocket_C_ExecuteUbergraph_B_Prj_Ostrich_Rocket, CallFunc_BreakHitResult_bInitialOverlap) == 0x0000D9, "Member 'B_Prj_Ostrich_Rocket_C_ExecuteUbergraph_B_Prj_Ostrich_Rocket::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(B_Prj_Ostrich_Rocket_C_ExecuteUbergraph_B_Prj_Ostrich_Rocket, CallFunc_BreakHitResult_Time) == 0x0000DC, "Member 'B_Prj_Ostrich_Rocket_C_ExecuteUbergraph_B_Prj_Ostrich_Rocket::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(B_Prj_Ostrich_Rocket_C_ExecuteUbergraph_B_Prj_Ostrich_Rocket, CallFunc_BreakHitResult_Distance) == 0x0000E0, "Member 'B_Prj_Ostrich_Rocket_C_ExecuteUbergraph_B_Prj_Ostrich_Rocket::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(B_Prj_Ostrich_Rocket_C_ExecuteUbergraph_B_Prj_Ostrich_Rocket, CallFunc_BreakHitResult_Location) == 0x0000E4, "Member 'B_Prj_Ostrich_Rocket_C_ExecuteUbergraph_B_Prj_Ostrich_Rocket::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(B_Prj_Ostrich_Rocket_C_ExecuteUbergraph_B_Prj_Ostrich_Rocket, CallFunc_BreakHitResult_ImpactPoint) == 0x0000F0, "Member 'B_Prj_Ostrich_Rocket_C_ExecuteUbergraph_B_Prj_Ostrich_Rocket::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(B_Prj_Ostrich_Rocket_C_ExecuteUbergraph_B_Prj_Ostrich_Rocket, CallFunc_BreakHitResult_Normal) == 0x0000FC, "Member 'B_Prj_Ostrich_Rocket_C_ExecuteUbergraph_B_Prj_Ostrich_Rocket::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(B_Prj_Ostrich_Rocket_C_ExecuteUbergraph_B_Prj_Ostrich_Rocket, CallFunc_BreakHitResult_ImpactNormal) == 0x000108, "Member 'B_Prj_Ostrich_Rocket_C_ExecuteUbergraph_B_Prj_Ostrich_Rocket::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(B_Prj_Ostrich_Rocket_C_ExecuteUbergraph_B_Prj_Ostrich_Rocket, CallFunc_BreakHitResult_PhysMat) == 0x000118, "Member 'B_Prj_Ostrich_Rocket_C_ExecuteUbergraph_B_Prj_Ostrich_Rocket::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(B_Prj_Ostrich_Rocket_C_ExecuteUbergraph_B_Prj_Ostrich_Rocket, CallFunc_BreakHitResult_HitActor) == 0x000120, "Member 'B_Prj_Ostrich_Rocket_C_ExecuteUbergraph_B_Prj_Ostrich_Rocket::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(B_Prj_Ostrich_Rocket_C_ExecuteUbergraph_B_Prj_Ostrich_Rocket, CallFunc_BreakHitResult_HitComponent) == 0x000128, "Member 'B_Prj_Ostrich_Rocket_C_ExecuteUbergraph_B_Prj_Ostrich_Rocket::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(B_Prj_Ostrich_Rocket_C_ExecuteUbergraph_B_Prj_Ostrich_Rocket, CallFunc_BreakHitResult_HitBoneName) == 0x000130, "Member 'B_Prj_Ostrich_Rocket_C_ExecuteUbergraph_B_Prj_Ostrich_Rocket::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(B_Prj_Ostrich_Rocket_C_ExecuteUbergraph_B_Prj_Ostrich_Rocket, CallFunc_BreakHitResult_HitItem) == 0x000138, "Member 'B_Prj_Ostrich_Rocket_C_ExecuteUbergraph_B_Prj_Ostrich_Rocket::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(B_Prj_Ostrich_Rocket_C_ExecuteUbergraph_B_Prj_Ostrich_Rocket, CallFunc_BreakHitResult_FaceIndex) == 0x00013C, "Member 'B_Prj_Ostrich_Rocket_C_ExecuteUbergraph_B_Prj_Ostrich_Rocket::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(B_Prj_Ostrich_Rocket_C_ExecuteUbergraph_B_Prj_Ostrich_Rocket, CallFunc_BreakHitResult_TraceStart) == 0x000140, "Member 'B_Prj_Ostrich_Rocket_C_ExecuteUbergraph_B_Prj_Ostrich_Rocket::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(B_Prj_Ostrich_Rocket_C_ExecuteUbergraph_B_Prj_Ostrich_Rocket, CallFunc_BreakHitResult_TraceEnd) == 0x00014C, "Member 'B_Prj_Ostrich_Rocket_C_ExecuteUbergraph_B_Prj_Ostrich_Rocket::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(B_Prj_Ostrich_Rocket_C_ExecuteUbergraph_B_Prj_Ostrich_Rocket, CallFunc_K2_SetTimer_ReturnValue) == 0x000158, "Member 'B_Prj_Ostrich_Rocket_C_ExecuteUbergraph_B_Prj_Ostrich_Rocket::CallFunc_K2_SetTimer_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_Ostrich_Rocket_C_ExecuteUbergraph_B_Prj_Ostrich_Rocket, CallFunc_MakeRotFromZ_ReturnValue) == 0x000160, "Member 'B_Prj_Ostrich_Rocket_C_ExecuteUbergraph_B_Prj_Ostrich_Rocket::CallFunc_MakeRotFromZ_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_Ostrich_Rocket_C_ExecuteUbergraph_B_Prj_Ostrich_Rocket, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x00016C, "Member 'B_Prj_Ostrich_Rocket_C_ExecuteUbergraph_B_Prj_Ostrich_Rocket::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_Ostrich_Rocket_C_ExecuteUbergraph_B_Prj_Ostrich_Rocket, CallFunc_Add_VectorVector_ReturnValue) == 0x000178, "Member 'B_Prj_Ostrich_Rocket_C_ExecuteUbergraph_B_Prj_Ostrich_Rocket::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_Ostrich_Rocket_C_ExecuteUbergraph_B_Prj_Ostrich_Rocket, K2Node_Event_OtherActor) == 0x000188, "Member 'B_Prj_Ostrich_Rocket_C_ExecuteUbergraph_B_Prj_Ostrich_Rocket::K2Node_Event_OtherActor' has a wrong offset!");
static_assert(offsetof(B_Prj_Ostrich_Rocket_C_ExecuteUbergraph_B_Prj_Ostrich_Rocket, K2Node_Event_OtherComp) == 0x000190, "Member 'B_Prj_Ostrich_Rocket_C_ExecuteUbergraph_B_Prj_Ostrich_Rocket::K2Node_Event_OtherComp' has a wrong offset!");
static_assert(offsetof(B_Prj_Ostrich_Rocket_C_ExecuteUbergraph_B_Prj_Ostrich_Rocket, K2Node_Event_HitResult) == 0x000198, "Member 'B_Prj_Ostrich_Rocket_C_ExecuteUbergraph_B_Prj_Ostrich_Rocket::K2Node_Event_HitResult' has a wrong offset!");
static_assert(offsetof(B_Prj_Ostrich_Rocket_C_ExecuteUbergraph_B_Prj_Ostrich_Rocket, K2Node_Event_bIsOverlap) == 0x000220, "Member 'B_Prj_Ostrich_Rocket_C_ExecuteUbergraph_B_Prj_Ostrich_Rocket::K2Node_Event_bIsOverlap' has a wrong offset!");
static_assert(offsetof(B_Prj_Ostrich_Rocket_C_ExecuteUbergraph_B_Prj_Ostrich_Rocket, CallFunc_IsDedicatedServer_ReturnValue_2) == 0x000221, "Member 'B_Prj_Ostrich_Rocket_C_ExecuteUbergraph_B_Prj_Ostrich_Rocket::CallFunc_IsDedicatedServer_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_Prj_Ostrich_Rocket_C_ExecuteUbergraph_B_Prj_Ostrich_Rocket, CallFunc_BreakHitResult_bBlockingHit_1) == 0x000222, "Member 'B_Prj_Ostrich_Rocket_C_ExecuteUbergraph_B_Prj_Ostrich_Rocket::CallFunc_BreakHitResult_bBlockingHit_1' has a wrong offset!");
static_assert(offsetof(B_Prj_Ostrich_Rocket_C_ExecuteUbergraph_B_Prj_Ostrich_Rocket, CallFunc_BreakHitResult_bInitialOverlap_1) == 0x000223, "Member 'B_Prj_Ostrich_Rocket_C_ExecuteUbergraph_B_Prj_Ostrich_Rocket::CallFunc_BreakHitResult_bInitialOverlap_1' has a wrong offset!");
static_assert(offsetof(B_Prj_Ostrich_Rocket_C_ExecuteUbergraph_B_Prj_Ostrich_Rocket, CallFunc_BreakHitResult_Time_1) == 0x000224, "Member 'B_Prj_Ostrich_Rocket_C_ExecuteUbergraph_B_Prj_Ostrich_Rocket::CallFunc_BreakHitResult_Time_1' has a wrong offset!");
static_assert(offsetof(B_Prj_Ostrich_Rocket_C_ExecuteUbergraph_B_Prj_Ostrich_Rocket, CallFunc_BreakHitResult_Distance_1) == 0x000228, "Member 'B_Prj_Ostrich_Rocket_C_ExecuteUbergraph_B_Prj_Ostrich_Rocket::CallFunc_BreakHitResult_Distance_1' has a wrong offset!");
static_assert(offsetof(B_Prj_Ostrich_Rocket_C_ExecuteUbergraph_B_Prj_Ostrich_Rocket, CallFunc_BreakHitResult_Location_1) == 0x00022C, "Member 'B_Prj_Ostrich_Rocket_C_ExecuteUbergraph_B_Prj_Ostrich_Rocket::CallFunc_BreakHitResult_Location_1' has a wrong offset!");
static_assert(offsetof(B_Prj_Ostrich_Rocket_C_ExecuteUbergraph_B_Prj_Ostrich_Rocket, CallFunc_BreakHitResult_ImpactPoint_1) == 0x000238, "Member 'B_Prj_Ostrich_Rocket_C_ExecuteUbergraph_B_Prj_Ostrich_Rocket::CallFunc_BreakHitResult_ImpactPoint_1' has a wrong offset!");
static_assert(offsetof(B_Prj_Ostrich_Rocket_C_ExecuteUbergraph_B_Prj_Ostrich_Rocket, CallFunc_BreakHitResult_Normal_1) == 0x000244, "Member 'B_Prj_Ostrich_Rocket_C_ExecuteUbergraph_B_Prj_Ostrich_Rocket::CallFunc_BreakHitResult_Normal_1' has a wrong offset!");
static_assert(offsetof(B_Prj_Ostrich_Rocket_C_ExecuteUbergraph_B_Prj_Ostrich_Rocket, CallFunc_BreakHitResult_ImpactNormal_1) == 0x000250, "Member 'B_Prj_Ostrich_Rocket_C_ExecuteUbergraph_B_Prj_Ostrich_Rocket::CallFunc_BreakHitResult_ImpactNormal_1' has a wrong offset!");
static_assert(offsetof(B_Prj_Ostrich_Rocket_C_ExecuteUbergraph_B_Prj_Ostrich_Rocket, CallFunc_BreakHitResult_PhysMat_1) == 0x000260, "Member 'B_Prj_Ostrich_Rocket_C_ExecuteUbergraph_B_Prj_Ostrich_Rocket::CallFunc_BreakHitResult_PhysMat_1' has a wrong offset!");
static_assert(offsetof(B_Prj_Ostrich_Rocket_C_ExecuteUbergraph_B_Prj_Ostrich_Rocket, CallFunc_BreakHitResult_HitActor_1) == 0x000268, "Member 'B_Prj_Ostrich_Rocket_C_ExecuteUbergraph_B_Prj_Ostrich_Rocket::CallFunc_BreakHitResult_HitActor_1' has a wrong offset!");
static_assert(offsetof(B_Prj_Ostrich_Rocket_C_ExecuteUbergraph_B_Prj_Ostrich_Rocket, CallFunc_BreakHitResult_HitComponent_1) == 0x000270, "Member 'B_Prj_Ostrich_Rocket_C_ExecuteUbergraph_B_Prj_Ostrich_Rocket::CallFunc_BreakHitResult_HitComponent_1' has a wrong offset!");
static_assert(offsetof(B_Prj_Ostrich_Rocket_C_ExecuteUbergraph_B_Prj_Ostrich_Rocket, CallFunc_BreakHitResult_HitBoneName_1) == 0x000278, "Member 'B_Prj_Ostrich_Rocket_C_ExecuteUbergraph_B_Prj_Ostrich_Rocket::CallFunc_BreakHitResult_HitBoneName_1' has a wrong offset!");
static_assert(offsetof(B_Prj_Ostrich_Rocket_C_ExecuteUbergraph_B_Prj_Ostrich_Rocket, CallFunc_BreakHitResult_HitItem_1) == 0x000280, "Member 'B_Prj_Ostrich_Rocket_C_ExecuteUbergraph_B_Prj_Ostrich_Rocket::CallFunc_BreakHitResult_HitItem_1' has a wrong offset!");
static_assert(offsetof(B_Prj_Ostrich_Rocket_C_ExecuteUbergraph_B_Prj_Ostrich_Rocket, CallFunc_BreakHitResult_FaceIndex_1) == 0x000284, "Member 'B_Prj_Ostrich_Rocket_C_ExecuteUbergraph_B_Prj_Ostrich_Rocket::CallFunc_BreakHitResult_FaceIndex_1' has a wrong offset!");
static_assert(offsetof(B_Prj_Ostrich_Rocket_C_ExecuteUbergraph_B_Prj_Ostrich_Rocket, CallFunc_BreakHitResult_TraceStart_1) == 0x000288, "Member 'B_Prj_Ostrich_Rocket_C_ExecuteUbergraph_B_Prj_Ostrich_Rocket::CallFunc_BreakHitResult_TraceStart_1' has a wrong offset!");
static_assert(offsetof(B_Prj_Ostrich_Rocket_C_ExecuteUbergraph_B_Prj_Ostrich_Rocket, CallFunc_BreakHitResult_TraceEnd_1) == 0x000294, "Member 'B_Prj_Ostrich_Rocket_C_ExecuteUbergraph_B_Prj_Ostrich_Rocket::CallFunc_BreakHitResult_TraceEnd_1' has a wrong offset!");
static_assert(offsetof(B_Prj_Ostrich_Rocket_C_ExecuteUbergraph_B_Prj_Ostrich_Rocket, CallFunc_ComponentHasTag_ReturnValue) == 0x0002A0, "Member 'B_Prj_Ostrich_Rocket_C_ExecuteUbergraph_B_Prj_Ostrich_Rocket::CallFunc_ComponentHasTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_Ostrich_Rocket_C_ExecuteUbergraph_B_Prj_Ostrich_Rocket, CallFunc_IsDedicatedServer_ReturnValue_3) == 0x0002A1, "Member 'B_Prj_Ostrich_Rocket_C_ExecuteUbergraph_B_Prj_Ostrich_Rocket::CallFunc_IsDedicatedServer_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(B_Prj_Ostrich_Rocket_C_ExecuteUbergraph_B_Prj_Ostrich_Rocket, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x0002A4, "Member 'B_Prj_Ostrich_Rocket_C_ExecuteUbergraph_B_Prj_Ostrich_Rocket::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_Ostrich_Rocket_C_ExecuteUbergraph_B_Prj_Ostrich_Rocket, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x0002B0, "Member 'B_Prj_Ostrich_Rocket_C_ExecuteUbergraph_B_Prj_Ostrich_Rocket::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_Prj_Ostrich_Rocket_C_ExecuteUbergraph_B_Prj_Ostrich_Rocket, K2Node_MakeStruct_ProjectileHomingData) == 0x0002BC, "Member 'B_Prj_Ostrich_Rocket_C_ExecuteUbergraph_B_Prj_Ostrich_Rocket::K2Node_MakeStruct_ProjectileHomingData' has a wrong offset!");
static_assert(offsetof(B_Prj_Ostrich_Rocket_C_ExecuteUbergraph_B_Prj_Ostrich_Rocket, CallFunc_IsActive_ReturnValue) == 0x0002F8, "Member 'B_Prj_Ostrich_Rocket_C_ExecuteUbergraph_B_Prj_Ostrich_Rocket::CallFunc_IsActive_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_Ostrich_Rocket_C_ExecuteUbergraph_B_Prj_Ostrich_Rocket, CallFunc_K2_AddLocalRotation_SweepHitResult) == 0x0002FC, "Member 'B_Prj_Ostrich_Rocket_C_ExecuteUbergraph_B_Prj_Ostrich_Rocket::CallFunc_K2_AddLocalRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(B_Prj_Ostrich_Rocket_C_ExecuteUbergraph_B_Prj_Ostrich_Rocket, CallFunc_K2_GetComponentLocation_ReturnValue_1) == 0x000384, "Member 'B_Prj_Ostrich_Rocket_C_ExecuteUbergraph_B_Prj_Ostrich_Rocket::CallFunc_K2_GetComponentLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_Prj_Ostrich_Rocket_C_ExecuteUbergraph_B_Prj_Ostrich_Rocket, CallFunc_MakeGameplayCueParameters_ReturnValue) == 0x000390, "Member 'B_Prj_Ostrich_Rocket_C_ExecuteUbergraph_B_Prj_Ostrich_Rocket::CallFunc_MakeGameplayCueParameters_ReturnValue' has a wrong offset!");

// Function B_Prj_Ostrich_Rocket.B_Prj_Ostrich_Rocket_C.OnTouched
// 0x00A0 (0x00A0 - 0x0000)
struct B_Prj_Ostrich_Rocket_C_OnTouched final
{
public:
	class AActor*                                 OtherActor;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             HitResult;                                         // 0x0010(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          bIsOverlap;                                        // 0x0098(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(B_Prj_Ostrich_Rocket_C_OnTouched) == 0x000008, "Wrong alignment on B_Prj_Ostrich_Rocket_C_OnTouched");
static_assert(sizeof(B_Prj_Ostrich_Rocket_C_OnTouched) == 0x0000A0, "Wrong size on B_Prj_Ostrich_Rocket_C_OnTouched");
static_assert(offsetof(B_Prj_Ostrich_Rocket_C_OnTouched, OtherActor) == 0x000000, "Member 'B_Prj_Ostrich_Rocket_C_OnTouched::OtherActor' has a wrong offset!");
static_assert(offsetof(B_Prj_Ostrich_Rocket_C_OnTouched, OtherComp) == 0x000008, "Member 'B_Prj_Ostrich_Rocket_C_OnTouched::OtherComp' has a wrong offset!");
static_assert(offsetof(B_Prj_Ostrich_Rocket_C_OnTouched, HitResult) == 0x000010, "Member 'B_Prj_Ostrich_Rocket_C_OnTouched::HitResult' has a wrong offset!");
static_assert(offsetof(B_Prj_Ostrich_Rocket_C_OnTouched, bIsOverlap) == 0x000098, "Member 'B_Prj_Ostrich_Rocket_C_OnTouched::bIsOverlap' has a wrong offset!");

// Function B_Prj_Ostrich_Rocket.B_Prj_Ostrich_Rocket_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct B_Prj_Ostrich_Rocket_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_Prj_Ostrich_Rocket_C_ReceiveTick) == 0x000004, "Wrong alignment on B_Prj_Ostrich_Rocket_C_ReceiveTick");
static_assert(sizeof(B_Prj_Ostrich_Rocket_C_ReceiveTick) == 0x000004, "Wrong size on B_Prj_Ostrich_Rocket_C_ReceiveTick");
static_assert(offsetof(B_Prj_Ostrich_Rocket_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'B_Prj_Ostrich_Rocket_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function B_Prj_Ostrich_Rocket.B_Prj_Ostrich_Rocket_C.OnExploded
// 0x0020 (0x0020 - 0x0000)
struct B_Prj_Ostrich_Rocket_C_OnExploded final
{
public:
	TArray<class AActor*>                         HitActors;                                         // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
	TArray<struct FHitResult>                     HitResults;                                        // 0x0010(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(B_Prj_Ostrich_Rocket_C_OnExploded) == 0x000008, "Wrong alignment on B_Prj_Ostrich_Rocket_C_OnExploded");
static_assert(sizeof(B_Prj_Ostrich_Rocket_C_OnExploded) == 0x000020, "Wrong size on B_Prj_Ostrich_Rocket_C_OnExploded");
static_assert(offsetof(B_Prj_Ostrich_Rocket_C_OnExploded, HitActors) == 0x000000, "Member 'B_Prj_Ostrich_Rocket_C_OnExploded::HitActors' has a wrong offset!");
static_assert(offsetof(B_Prj_Ostrich_Rocket_C_OnExploded, HitResults) == 0x000010, "Member 'B_Prj_Ostrich_Rocket_C_OnExploded::HitResults' has a wrong offset!");

// Function B_Prj_Ostrich_Rocket.B_Prj_Ostrich_Rocket_C.OnStop
// 0x0088 (0x0088 - 0x0000)
struct B_Prj_Ostrich_Rocket_C_OnStop final
{
public:
	struct FHitResult                             Hit;                                               // 0x0000(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(B_Prj_Ostrich_Rocket_C_OnStop) == 0x000004, "Wrong alignment on B_Prj_Ostrich_Rocket_C_OnStop");
static_assert(sizeof(B_Prj_Ostrich_Rocket_C_OnStop) == 0x000088, "Wrong size on B_Prj_Ostrich_Rocket_C_OnStop");
static_assert(offsetof(B_Prj_Ostrich_Rocket_C_OnStop, Hit) == 0x000000, "Member 'B_Prj_Ostrich_Rocket_C_OnStop::Hit' has a wrong offset!");

}

